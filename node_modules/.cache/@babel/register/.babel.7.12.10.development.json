{
  "{\"sourceRoot\":\"/Users/elizavetaminican/Desktop/projects_main/TECHNIGO/final-project-yoga-studio-backend/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/elizavetaminican/Desktop/projects_main/TECHNIGO/final-project-yoga-studio-backend\",\"filename\":\"/Users/elizavetaminican/Desktop/projects_main/TECHNIGO/final-project-yoga-studio-backend/server.js\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/elizavetaminican/Desktop/projects_main/TECHNIGO/final-project-yoga-studio-backend\",\"plugins\":[{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]},\"BigIntLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.12.10": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/elizavetaminican/Desktop/projects_main/TECHNIGO/final-project-yoga-studio-backend/",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/elizavetaminican/Desktop/projects_main/TECHNIGO/final-project-yoga-studio-backend",
      "filename": "/Users/elizavetaminican/Desktop/projects_main/TECHNIGO/final-project-yoga-studio-backend/server.js",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/elizavetaminican/Desktop/projects_main/TECHNIGO/final-project-yoga-studio-backend",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "BigIntLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "StaticBlock": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/elizavetaminican/Desktop/projects_main/TECHNIGO/final-project-yoga-studio-backend/server.js",
        "plugins": [
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/elizavetaminican/Desktop/projects_main/TECHNIGO/final-project-yoga-studio-backend/server.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/elizavetaminican/Desktop/projects_main/TECHNIGO/final-project-yoga-studio-backend/",
        "sourceFileName": "server.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _express = _interopRequireDefault(require(\"express\"));\n\nvar _bodyParser = _interopRequireDefault(require(\"body-parser\"));\n\nvar _cors = _interopRequireDefault(require(\"cors\"));\n\nvar _mongoose = _interopRequireDefault(require(\"mongoose\"));\n\nvar _expressListEndpoints = _interopRequireDefault(require(\"express-list-endpoints\"));\n\nvar _crypto = _interopRequireDefault(require(\"crypto\"));\n\nvar _bcrypt = _interopRequireDefault(require(\"bcrypt\"));\n\nvar _string_decoder = require(\"string_decoder\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\n// Defines the port the app will run on.\nvar port = process.env.PORT || 8080;\nvar app = (0, _express[\"default\"])(); // error messages\n\nvar ERR_CANNOT_SAVE_TO_DATABASE = \"Could not save video to the Database\";\nvar ERR_CANNOT_FIND_VIDEO_BY_ID = \"Could not find video by id provided\";\nvar mongoUrl = process.env.MONGO_URL || \"mongodb://localhost/yogaStudio\";\n\n_mongoose[\"default\"].connect(mongoUrl, {\n  useNewUrlParser: true,\n  useUnifiedTopology: true\n});\n\n_mongoose[\"default\"].Promise = Promise; //user schema for sign in and sugn up with relation to video schema to store user's favourite videos\n\nvar userSchema = new _mongoose[\"default\"].Schema({\n  userName: {\n    type: String,\n    minlength: 5,\n    maxlength: 20,\n    unique: true,\n    required: true\n  },\n  email: {\n    type: String,\n    unique: true\n  },\n  password: {\n    type: String,\n    minlength: 6,\n    required: true\n  },\n  accessToken: {\n    type: String,\n    \"default\": function _default() {\n      return _crypto[\"default\"].randomBytes(128).toString(\"hex\");\n    }\n  },\n  isAdmin: {\n    type: Boolean,\n    \"default\": false\n  },\n  //reference to the videos, storing them in the array\n  selectedVideos: [{\n    type: _mongoose[\"default\"].Schema.Types.ObjectId,\n    ref: \"Video\"\n  }] // selectedVideos: {\n  //   type: Array,\n  // },\n\n}); //week 18th and date 16th watch\n\nvar videoSchema = new _mongoose[\"default\"].Schema({\n  videoName: {\n    type: String,\n    required: true\n  },\n  description: {\n    type: String,\n    required: true\n  },\n  videoUrl: {\n    type: String,\n    required: true\n  },\n  category: {\n    type: String,\n    required: true,\n    \"enum\": [\"Beginner\", \"Intermediate\", \"Advanced\"]\n  },\n  length: {\n    type: Number,\n    required: true\n  },\n  //RATING AND LIKES CAN BE ADDED LATER\n  // rating: {\n  //   type: Number,\n  //   enum: [1,2,3,4,5]\n  // },\n  likes: {\n    type: Number,\n    \"default\": 0,\n    min: 0,\n    max: 1\n  } //reference to the user\n  //   user: {\n  //     type: mongoose.Schema.Types.ObjectId,\n  //     ref: \"User\",\n  //   },\n\n}, {\n  timestamps: true\n}); // Add middlewares to enable cors and json body parsing\n\napp.use((0, _cors[\"default\"])());\napp.use(_bodyParser[\"default\"].json());\n\nvar User = _mongoose[\"default\"].model(\"User\", userSchema);\n\nvar Video = _mongoose[\"default\"].model(\"Video\", videoSchema); //Provide error of server\n\n\napp.use(function (req, res, next) {\n  if (_mongoose[\"default\"].connection.readyState === 1) {\n    next();\n  } else {\n    res.status(503).json({\n      error: \"Service unavailable at the moment\"\n    });\n  }\n}); // Start defining routes here\n\napp.get(\"/\", function (req, res) {\n  res.send(\"Hello world\");\n}); // HERE ARE THE ENDPOINTS FOR SIGN IN / SIGN UP\n// const authenticateUser = async (req, res, next) => {\n//   try {\n//     const accessToken = req.header(\"Authorization\");\n//     const user = await User.findOne({ accessToken });\n//     if (!user) {\n//       throw \"User not found\";\n//     }\n//     req.user = user;\n//     next();\n//   } catch (err) {\n//     const errorMessage = \"Please try logging in again\";\n//     res.status(401).json({ error: errorMessage });\n//   }\n// };\n// Sign-up\n\napp.post(\"/users\", /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(req, res) {\n    var _req$body, userName, email, password, SALT, user;\n\n    return regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _req$body = req.body, userName = _req$body.userName, email = _req$body.email, password = _req$body.password;\n            console.log(\"!!!\", userName, email, password);\n            SALT = _bcrypt[\"default\"].genSaltSync(10);\n            _context.next = 6;\n            return new User({\n              userName: userName,\n              email: email,\n              password: _bcrypt[\"default\"].hashSync(password, SALT)\n            }).save();\n\n          case 6:\n            user = _context.sent;\n            res.status(200).json({\n              userId: user._id,\n              accessToken: user.accessToken\n            });\n            _context.next = 14;\n            break;\n\n          case 10:\n            _context.prev = 10;\n            _context.t0 = _context[\"catch\"](0);\n            console.log(\"!!!\", _context.t0, \"!!!\");\n            res.status(400).json({\n              message: \"Could not create user\",\n              errors: _context.t0\n            });\n\n          case 14:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[0, 10]]);\n  }));\n\n  return function (_x, _x2) {\n    return _ref.apply(this, arguments);\n  };\n}()); // Login\n\napp.post(\"/sessions\", /*#__PURE__*/function () {\n  var _ref2 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2(req, res) {\n    var _req$body2, email, password, user;\n\n    return regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.prev = 0;\n            _req$body2 = req.body, email = _req$body2.email, password = _req$body2.password;\n            _context2.next = 4;\n            return User.findOne({\n              email: email\n            });\n\n          case 4:\n            user = _context2.sent;\n\n            if (!(user && _bcrypt[\"default\"].compareSync(password, user.password))) {\n              _context2.next = 9;\n              break;\n            }\n\n            res.status(200).json({\n              userId: user._id,\n              accessToken: user.accessToken\n            });\n            _context2.next = 10;\n            break;\n\n          case 9:\n            throw \"User not found\";\n\n          case 10:\n            _context2.next = 15;\n            break;\n\n          case 12:\n            _context2.prev = 12;\n            _context2.t0 = _context2[\"catch\"](0);\n            res.status(404).json({\n              error: \"User not found\"\n            });\n\n          case 15:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2, null, [[0, 12]]);\n  }));\n\n  return function (_x3, _x4) {\n    return _ref2.apply(this, arguments);\n  };\n}()); // HERE ARE THE ENDPOINTS TO WORK WITH VIDEO COLLECTION\n//get the collection of all videos available to everyone { WORKING }\n\napp.get(\"/videos\", /*#__PURE__*/function () {\n  var _ref3 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3(req, res) {\n    var videos;\n    return regeneratorRuntime.wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            _context3.next = 2;\n            return Video.find().sort({\n              createdAt: \"desc\"\n            }).limit(8).exec();\n\n          case 2:\n            videos = _context3.sent;\n            res.json(videos);\n\n          case 4:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3);\n  }));\n\n  return function (_x5, _x6) {\n    return _ref3.apply(this, arguments);\n  };\n}()); //top 10 videos\n//Route to find one specific video by id { WORKING }\n\napp.get(\"/videos/:id\", /*#__PURE__*/function () {\n  var _ref4 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee4(req, res) {\n    var videoById;\n    return regeneratorRuntime.wrap(function _callee4$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            _context4.next = 2;\n            return Video.findOne({\n              _id: req.params.id\n            });\n\n          case 2:\n            videoById = _context4.sent;\n\n            if (videoById) {\n              res.json(videoById);\n            } else {\n              res.status(404).json({\n                error: \"Video not found\"\n              });\n            }\n\n          case 4:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, _callee4);\n  }));\n\n  return function (_x7, _x8) {\n    return _ref4.apply(this, arguments);\n  };\n}()); //filter videos by length\n//filter short videos - 15, 30, 60\n\napp.get(\"/videos/length/30\", /*#__PURE__*/function () {\n  var _ref5 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee5(req, res) {\n    var videosByLength;\n    return regeneratorRuntime.wrap(function _callee5$(_context5) {\n      while (1) {\n        switch (_context5.prev = _context5.next) {\n          case 0:\n            _context5.next = 2;\n            return Video.find({\n              length: 30\n            });\n\n          case 2:\n            videosByLength = _context5.sent;\n\n            if (videosByLength) {\n              res.json(videosByLength);\n            } else {\n              res.status(404).json({\n                error: \"No such video found\"\n              });\n            }\n\n          case 4:\n          case \"end\":\n            return _context5.stop();\n        }\n      }\n    }, _callee5);\n  }));\n\n  return function (_x9, _x10) {\n    return _ref5.apply(this, arguments);\n  };\n}());\napp.get(\"/videos/length/15\", /*#__PURE__*/function () {\n  var _ref6 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee6(req, res) {\n    var videosByLength;\n    return regeneratorRuntime.wrap(function _callee6$(_context6) {\n      while (1) {\n        switch (_context6.prev = _context6.next) {\n          case 0:\n            _context6.next = 2;\n            return Video.find({\n              length: 15\n            });\n\n          case 2:\n            videosByLength = _context6.sent;\n\n            if (videosByLength) {\n              res.json(videosByLength);\n            } else {\n              res.status(404).json({\n                error: \"No such video found\"\n              });\n            }\n\n          case 4:\n          case \"end\":\n            return _context6.stop();\n        }\n      }\n    }, _callee6);\n  }));\n\n  return function (_x11, _x12) {\n    return _ref6.apply(this, arguments);\n  };\n}());\napp.get(\"/videos/length/20\", /*#__PURE__*/function () {\n  var _ref7 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee7(req, res) {\n    var videosByLength;\n    return regeneratorRuntime.wrap(function _callee7$(_context7) {\n      while (1) {\n        switch (_context7.prev = _context7.next) {\n          case 0:\n            _context7.next = 2;\n            return Video.find({\n              length: 20\n            });\n\n          case 2:\n            videosByLength = _context7.sent;\n\n            if (videosByLength) {\n              res.json(videosByLength);\n            } else {\n              res.status(404).json({\n                error: \"No such video found\"\n              });\n            }\n\n          case 4:\n          case \"end\":\n            return _context7.stop();\n        }\n      }\n    }, _callee7);\n  }));\n\n  return function (_x13, _x14) {\n    return _ref7.apply(this, arguments);\n  };\n}()); // app.get(\"/videos/duration/:length\", async (req, res) => {\n//   const videoByDuration = req.params.length;\n//   const video = await Video.findAll({\n//     // //length: { $regex:(\"/[[0-9]+]/\") }\n//     length: 20,\n//   });\n//   if (video.length > 0) {\n//     res.json(video);\n//   } else {\n//     res.status(404).json({ error: \"No such video found\" });\n//   }\n// });\n//video by level\n//videos available when signed in\n//your favourite videos\n// video liked\n//i need to limit likes on and off for ine particulat user to be able to filter videos by total amount of likes\n\napp.post(\"/videos/:id/like\", /*#__PURE__*/function () {\n  var _ref8 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee8(req, res) {\n    var id;\n    return regeneratorRuntime.wrap(function _callee8$(_context8) {\n      while (1) {\n        switch (_context8.prev = _context8.next) {\n          case 0:\n            _context8.prev = 0;\n            id = req.params.id;\n            _context8.next = 4;\n            return Video.updateOne({\n              _id: id\n            }, {\n              $inc: {\n                likes: 1\n              }\n            });\n\n          case 4:\n            res.status(200).json({\n              success: true\n            });\n            _context8.next = 10;\n            break;\n\n          case 7:\n            _context8.prev = 7;\n            _context8.t0 = _context8[\"catch\"](0);\n            res.status(400).json({\n              message: ERR_CANNOT_FIND_VIDEO_BY_ID,\n              errors: _context8.t0.errors\n            });\n\n          case 10:\n          case \"end\":\n            return _context8.stop();\n        }\n      }\n    }, _callee8, null, [[0, 7]]);\n  }));\n\n  return function (_x15, _x16) {\n    return _ref8.apply(this, arguments);\n  };\n}()); //post a video, function available only for admins { WORKING }\n\napp.post(\"/videos\", /*#__PURE__*/function () {\n  var _ref9 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee9(req, res) {\n    var _req$body3, videoName, videoUrl, description, length, category, video, savedVideo;\n\n    return regeneratorRuntime.wrap(function _callee9$(_context9) {\n      while (1) {\n        switch (_context9.prev = _context9.next) {\n          case 0:\n            _context9.prev = 0;\n            //Success case\n            //retrive the information sent by the client to our API endpoint\n            _req$body3 = req.body, videoName = _req$body3.videoName, videoUrl = _req$body3.videoUrl, description = _req$body3.description, length = _req$body3.length, category = _req$body3.category;\n            video = new Video({\n              videoName: videoName,\n              videoUrl: videoUrl,\n              description: description,\n              length: length,\n              category: category\n            });\n            _context9.next = 5;\n            return video.save();\n\n          case 5:\n            savedVideo = _context9.sent;\n            res.status(200).json(savedVideo);\n            _context9.next = 12;\n            break;\n\n          case 9:\n            _context9.prev = 9;\n            _context9.t0 = _context9[\"catch\"](0);\n            //bad request sending the status to the server and the message\n            res.status(400).json({\n              message: ERR_CANNOT_SAVE_TO_DATABASE,\n              errors: _context9.t0.errors\n            });\n\n          case 12:\n          case \"end\":\n            return _context9.stop();\n        }\n      }\n    }, _callee9, null, [[0, 9]]);\n  }));\n\n  return function (_x17, _x18) {\n    return _ref9.apply(this, arguments);\n  };\n}()); //delete a video function is available only for admin  {WORKING}\n\napp[\"delete\"](\"/videos/:id\", /*#__PURE__*/function () {\n  var _ref10 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee10(req, res) {\n    var id;\n    return regeneratorRuntime.wrap(function _callee10$(_context10) {\n      while (1) {\n        switch (_context10.prev = _context10.next) {\n          case 0:\n            _context10.prev = 0;\n            //try to delete and send a successful response\n            id = req.params.id;\n            _context10.next = 4;\n            return Video.deleteOne({\n              _id: id\n            });\n\n          case 4:\n            res.status(200).json({\n              success: true\n            });\n            _context10.next = 11;\n            break;\n\n          case 7:\n            _context10.prev = 7;\n            _context10.t0 = _context10[\"catch\"](0);\n            console.log(_context10.t0); //inform the client about the deletion failure\n\n            res.status(400).json({\n              success: false\n            });\n\n          case 11:\n          case \"end\":\n            return _context10.stop();\n        }\n      }\n    }, _callee10, null, [[0, 7]]);\n  }));\n\n  return function (_x19, _x20) {\n    return _ref10.apply(this, arguments);\n  };\n}()); // updating a video endpoint\n// app.patch(\"/videos/:id\", async (req, res) => {\n//   try {\n//     //try to delete and send a successful response\n//     const video = await Video.findByID({ _id: id });\n//     const {\n//       videoName = video.videoName,\n//       videoUrl = video.videoUrl,\n//       description = video.description,\n//       category = video.category,\n//       length = video.length,\n//     } = req.body;\n//     const updateVideo = await Video.findByIdAndUpdate(\n//       { _id: id },\n//       { videoName, videoUrl, description, category, length },\n//       { runValidators: true }\n//     );\n//     return res.status(202).json(updatedVideo);\n//   } catch (error) {\n//     try {\n//       await Video.findById({ _id: id }); // id is matching, the model validation is off\n//       return res\n//         .status(400)\n//         .json({ message: \"Could not update video\", error: err.message });\n//     } catch (err) {\n//       // id is not matching, the validation can be either right or wrong\n//       return res.status(404).json({ message: ERR_CANNOT_FIND_VIDEO_BY_ID, id });\n//     }\n//   }\n// });\n// Start the server\n\napp.listen(port, function () {\n  console.log(\"Server running on http://localhost:\".concat(port));\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNlcnZlci5qcyJdLCJuYW1lcyI6WyJwb3J0IiwicHJvY2VzcyIsImVudiIsIlBPUlQiLCJhcHAiLCJFUlJfQ0FOTk9UX1NBVkVfVE9fREFUQUJBU0UiLCJFUlJfQ0FOTk9UX0ZJTkRfVklERU9fQllfSUQiLCJtb25nb1VybCIsIk1PTkdPX1VSTCIsIm1vbmdvb3NlIiwiY29ubmVjdCIsInVzZU5ld1VybFBhcnNlciIsInVzZVVuaWZpZWRUb3BvbG9neSIsIlByb21pc2UiLCJ1c2VyU2NoZW1hIiwiU2NoZW1hIiwidXNlck5hbWUiLCJ0eXBlIiwiU3RyaW5nIiwibWlubGVuZ3RoIiwibWF4bGVuZ3RoIiwidW5pcXVlIiwicmVxdWlyZWQiLCJlbWFpbCIsInBhc3N3b3JkIiwiYWNjZXNzVG9rZW4iLCJjcnlwdG8iLCJyYW5kb21CeXRlcyIsInRvU3RyaW5nIiwiaXNBZG1pbiIsIkJvb2xlYW4iLCJzZWxlY3RlZFZpZGVvcyIsIlR5cGVzIiwiT2JqZWN0SWQiLCJyZWYiLCJ2aWRlb1NjaGVtYSIsInZpZGVvTmFtZSIsImRlc2NyaXB0aW9uIiwidmlkZW9VcmwiLCJjYXRlZ29yeSIsImxlbmd0aCIsIk51bWJlciIsImxpa2VzIiwibWluIiwibWF4IiwidGltZXN0YW1wcyIsInVzZSIsImJvZHlQYXJzZXIiLCJqc29uIiwiVXNlciIsIm1vZGVsIiwiVmlkZW8iLCJyZXEiLCJyZXMiLCJuZXh0IiwiY29ubmVjdGlvbiIsInJlYWR5U3RhdGUiLCJzdGF0dXMiLCJlcnJvciIsImdldCIsInNlbmQiLCJwb3N0IiwiYm9keSIsImNvbnNvbGUiLCJsb2ciLCJTQUxUIiwiYmNyeXB0IiwiZ2VuU2FsdFN5bmMiLCJoYXNoU3luYyIsInNhdmUiLCJ1c2VyIiwidXNlcklkIiwiX2lkIiwibWVzc2FnZSIsImVycm9ycyIsImZpbmRPbmUiLCJjb21wYXJlU3luYyIsImZpbmQiLCJzb3J0IiwiY3JlYXRlZEF0IiwibGltaXQiLCJleGVjIiwidmlkZW9zIiwicGFyYW1zIiwiaWQiLCJ2aWRlb0J5SWQiLCJ2aWRlb3NCeUxlbmd0aCIsInVwZGF0ZU9uZSIsIiRpbmMiLCJzdWNjZXNzIiwidmlkZW8iLCJzYXZlZFZpZGVvIiwiZGVsZXRlT25lIiwibGlzdGVuIl0sIm1hcHBpbmdzIjoiOztBQUFBOztBQUNBOztBQUNBOztBQUNBOztBQUNBOztBQUNBOztBQUNBOztBQUNBOzs7Ozs7OztBQUNBO0FBRUEsSUFBTUEsSUFBSSxHQUFHQyxPQUFPLENBQUNDLEdBQVIsQ0FBWUMsSUFBWixJQUFvQixJQUFqQztBQUNBLElBQU1DLEdBQUcsR0FBRywwQkFBWixDLENBRUE7O0FBQ0EsSUFBTUMsMkJBQTJCLEdBQUcsc0NBQXBDO0FBQ0EsSUFBTUMsMkJBQTJCLEdBQUcscUNBQXBDO0FBRUEsSUFBTUMsUUFBUSxHQUFHTixPQUFPLENBQUNDLEdBQVIsQ0FBWU0sU0FBWixJQUF5QixnQ0FBMUM7O0FBQ0FDLHFCQUFTQyxPQUFULENBQWlCSCxRQUFqQixFQUEyQjtBQUFFSSxFQUFBQSxlQUFlLEVBQUUsSUFBbkI7QUFBeUJDLEVBQUFBLGtCQUFrQixFQUFFO0FBQTdDLENBQTNCOztBQUNBSCxxQkFBU0ksT0FBVCxHQUFtQkEsT0FBbkIsQyxDQUVBOztBQUNBLElBQU1DLFVBQVUsR0FBRyxJQUFJTCxxQkFBU00sTUFBYixDQUFvQjtBQUNyQ0MsRUFBQUEsUUFBUSxFQUFFO0FBQ1JDLElBQUFBLElBQUksRUFBRUMsTUFERTtBQUVSQyxJQUFBQSxTQUFTLEVBQUUsQ0FGSDtBQUdSQyxJQUFBQSxTQUFTLEVBQUUsRUFISDtBQUlSQyxJQUFBQSxNQUFNLEVBQUUsSUFKQTtBQUtSQyxJQUFBQSxRQUFRLEVBQUU7QUFMRixHQUQyQjtBQVFyQ0MsRUFBQUEsS0FBSyxFQUFFO0FBQ0xOLElBQUFBLElBQUksRUFBRUMsTUFERDtBQUVMRyxJQUFBQSxNQUFNLEVBQUU7QUFGSCxHQVI4QjtBQVlyQ0csRUFBQUEsUUFBUSxFQUFFO0FBQ1JQLElBQUFBLElBQUksRUFBRUMsTUFERTtBQUVSQyxJQUFBQSxTQUFTLEVB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QUFDQyxHQUFSLDhDQUFrRGhFLElBQWxEO0FBQ0QsQ0FGRCIsInNvdXJjZVJvb3QiOiIvVXNlcnMvZWxpemF2ZXRhbWluaWNhbi9EZXNrdG9wL3Byb2plY3RzX21haW4vVEVDSE5JR08vZmluYWwtcHJvamVjdC15b2dhLXN0dWRpby1iYWNrZW5kLyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBleHByZXNzIGZyb20gXCJleHByZXNzXCI7XG5pbXBvcnQgYm9keVBhcnNlciBmcm9tIFwiYm9keS1wYXJzZXJcIjtcbmltcG9ydCBjb3JzIGZyb20gXCJjb3JzXCI7XG5pbXBvcnQgbW9uZ29vc2UgZnJvbSBcIm1vbmdvb3NlXCI7XG5pbXBvcnQgZW5kcG9pbnRzIGZyb20gXCJleHByZXNzLWxpc3QtZW5kcG9pbnRzXCI7XG5pbXBvcnQgY3J5cHRvIGZyb20gXCJjcnlwdG9cIjtcbmltcG9ydCBiY3J5cHQgZnJvbSBcImJjcnlwdFwiO1xuaW1wb3J0IHsgU3RyaW5nRGVjb2RlciB9IGZyb20gXCJzdHJpbmdfZGVjb2RlclwiO1xuLy8gRGVmaW5lcyB0aGUgcG9ydCB0aGUgYXBwIHdpbGwgcnVuIG9uLlxuXG5jb25zdCBwb3J0ID0gcHJvY2Vzcy5lbnYuUE9SVCB8fCA4MDgwO1xuY29uc3QgYXBwID0gZXhwcmVzcygpO1xuXG4vLyBlcnJvciBtZXNzYWdlc1xuY29uc3QgRVJSX0NBTk5PVF9TQVZFX1RPX0RBVEFCQVNFID0gXCJDb3VsZCBub3Qgc2F2ZSB2aWRlbyB0byB0aGUgRGF0YWJhc2VcIjtcbmNvbnN0IEVSUl9DQU5OT1RfRklORF9WSURFT19CWV9JRCA9IFwiQ291bGQgbm90IGZpbmQgdmlkZW8gYnkgaWQgcHJvdmlkZWRcIjtcblxuY29uc3QgbW9uZ29VcmwgPSBwcm9jZXNzLmVudi5NT05HT19VUkwgfHwgXCJtb25nb2RiOi8vbG9jYWxob3N0L3lvZ2FTdHVkaW9cIjtcbm1vbmdvb3NlLmNvbm5lY3QobW9uZ29VcmwsIHsgdXNlTmV3VXJsUGFyc2VyOiB0cnVlLCB1c2VVbmlmaWVkVG9wb2xvZ3k6IHRydWUgfSk7XG5tb25nb29zZS5Qcm9taXNlID0gUHJvbWlzZTtcblxuLy91c2VyIHNjaGVtYSBmb3Igc2lnbiBpbiBhbmQgc3VnbiB1cCB3aXRoIHJlbGF0aW9uIHRvIHZpZGVvIHNjaGVtYSB0byBzdG9yZSB1c2VyJ3MgZmF2b3VyaXRlIHZpZGVvc1xuY29uc3QgdXNlclNjaGVtYSA9IG5ldyBtb25nb29zZS5TY2hlbWEoe1xuICB1c2VyTmFtZToge1xuICAgIHR5cGU6IFN0cmluZyxcbiAgICBtaW5sZW5ndGg6IDUsXG4gICAgbWF4bGVuZ3RoOiAyMCxcbiAgICB1bmlxdWU6IHRydWUsXG4gICAgcmVxdWlyZWQ6IHRydWUsXG4gIH0sXG4gIGVtYWlsOiB7XG4gICAgdHlwZTogU3RyaW5nLFxuICAgIHVuaXF1ZTogdHJ1ZSxcbiAgfSxcbiAgcGFzc3dvcmQ6IHtcbiAgICB0eXBlOiBTdHJpbmcsXG4gICAgbWlubGVuZ3RoOiA2LFxuICAgIHJlcXVpcmVkOiB0cnVlLFxuICB9LFxuICBhY2Nlc3NUb2tlbjoge1xuICAgIHR5cGU6IFN0cmluZyxcbiAgICBkZWZhdWx0OiAoKSA9PiBjcnlwdG8ucmFuZG9tQnl0ZXMoMTI4KS50b1N0cmluZyhcImhleFwiKSxcbiAgfSxcbiAgaXNBZG1pbjoge1xuICAgIHR5cGU6IEJvb2xlYW4sXG4gICAgZGVmYXVsdDogZmFsc2UsXG4gIH0sXG4gIC8vcmVmZXJlbmNlIHRvIHRoZSB2aWRlb3MsIHN0b3JpbmcgdGhlbSBpbiB0aGUgYXJyYXlcbiAgc2VsZWN0ZWRWaWRlb3M6IFt7IHR5cGU6IG1vbmdvb3NlLlNjaGVtYS5UeXBlcy5PYmplY3RJZCwgcmVmOiBcIlZpZGVvXCIgfV0sXG5cbiAgLy8gc2VsZWN0ZWRWaWRlb3M6IHtcbiAgLy8gICB0eXBlOiBBcnJheSxcbiAgLy8gfSxcbn0pO1xuXG4vL3dlZWsgMTh0aCBhbmQgZGF0ZSAxNnRoIHdhdGNoXG5cbmNvbnN0IHZpZGVvU2NoZW1hID0gbmV3IG1vbmdvb3NlLlNjaGVtYShcbiAge1xuICAgIHZpZGVvTmFtZToge1xuICAgICAgdHlwZTogU3RyaW5nLFxuICAgICAgcmVxdWlyZWQ6IHRydWUsXG4gICAgfSxcbiAgICBkZXNjcmlwdGlvbjoge1xuICAgICAgdHlwZTogU3RyaW5nLFxuICAgICAgcmVxdWlyZWQ6IHRydWUsXG4gICAgfSxcbiAgICB2aWRlb1VybDoge1xuICAgICAgdHlwZTogU3RyaW5nLFxuICAgICAgcmVxdWlyZWQ6IHRydWUsXG4gICAgfSxcbiAgICBjYXRlZ29yeToge1xuICAgICAgdHlwZTogU3RyaW5nLFxuICAgICAgcmVxdWlyZWQ6IHRydWUsXG4gICAgICBlbnVtOiBbXCJCZWdpbm5lclwiLCBcIkludGVybWVkaWF0ZVwiLCBcIkFkdmFuY2VkXCJdLFxuICAgIH0sXG4gICAgbGVuZ3RoOiB7XG4gICAgICB0eXBlOiBOdW1iZXIsXG4gICAgICByZXF1aXJlZDogdHJ1ZSxcbiAgICB9LFxuICAgIC8vUkFUSU5HIEFORCBMSUtFUyBDQU4gQkUgQURERUQgTEFURVJcbiAgICAvLyByYXRpbmc6IHtcbiAgICAvLyAgIHR5cGU6IE51bWJlcixcbiAgICAvLyAgIGVudW06IFsxLDIsMyw0LDVdXG4gICAgLy8gfSxcblxuICAgIGxpa2VzOiB7XG4gICAgICB0eXBlOiBOdW1iZXIsXG4gICAgICBkZWZhdWx0OiAwLFxuICAgICAgbWluOiAwLFxuICAgICAgbWF4OiAxLFxuICAgIH0sXG5cbiAgICAvL3JlZmVyZW5jZSB0byB0aGUgdXNlclxuICAgIC8vICAgdXNlcjoge1xuICAgIC8vICAgICB0eXBlOiBtb25nb29zZS5TY2hlbWEuVHlwZXMuT2JqZWN0SWQsXG4gICAgLy8gICAgIHJlZjogXCJVc2VyXCIsXG4gICAgLy8gICB9LFxuICB9LFxuICB7IHRpbWVzdGFtcHM6IHRydWUgfVxuKTtcblxuLy8gQWRkIG1pZGRsZXdhcmVzIHRvIGVuYWJsZSBjb3JzIGFuZCBqc29uIGJvZHkgcGFyc2luZ1xuYXBwLnVzZShjb3JzKCkpO1xuYXBwLnVzZShib2R5UGFyc2VyLmpzb24oKSk7XG5cbmNvbnN0IFVzZXIgPSBtb25nb29zZS5tb2RlbChcIlVzZXJcIiwgdXNlclNjaGVtYSk7XG5jb25zdCBWaWRlbyA9IG1vbmdvb3NlLm1vZGVsKFwiVmlkZW9cIiwgdmlkZW9TY2hlbWEpO1xuXG4vL1Byb3ZpZGUgZXJyb3Igb2Ygc2VydmVyXG5cbmFwcC51c2UoKHJlcSwgcmVzLCBuZXh0KSA9PiB7XG4gIGlmIChtb25nb29zZS5jb25uZWN0aW9uLnJlYWR5U3RhdGUgPT09IDEpIHtcbiAgICBuZXh0KCk7XG4gIH0gZWxzZSB7XG4gICAgcmVzLnN0YXR1cyg1MDMpLmpzb24oeyBlcnJvcjogXCJTZXJ2aWNlIHVuYXZhaWxhYmxlIGF0IHRoZSBtb21lbnRcIiB9KTtcbiAgfVxufSk7XG5cbi8vIFN0YXJ0IGRlZmluaW5nIHJvdXRlcyBoZXJlXG5hcHAuZ2V0KFwiL1wiLCAocmVxLCByZXMpID0+IHtcbiAgcmVzLnNlbmQoXCJIZWxsbyB3b3JsZFwiKTtcbn0pO1xuXG4vLyBIRVJFIEFSRSBUSEUgRU5EUE9JTlRTIEZPUiBTSUdOIElOIC8gU0lHTiBVUFxuXG4vLyBjb25zdCBhdXRoZW50aWNhdGVVc2VyID0gYXN5bmMgKHJlcSwgcmVzLCBuZXh0KSA9PiB7XG4vLyAgIHRyeSB7XG4vLyAgICAgY29uc3QgYWNjZXNzVG9rZW4gPSByZXEuaGVhZGVyKFwiQXV0aG9yaXphdGlvblwiKTtcbi8vICAgICBjb25zdCB1c2VyID0gYXdhaXQgVXNlci5maW5kT25lKHsgYWNjZXNzVG9rZW4gfSk7XG4vLyAgICAgaWYgKCF1c2VyKSB7XG4vLyAgICAgICB0aHJvdyBcIlVzZXIgbm90IGZvdW5kXCI7XG4vLyAgICAgfVxuLy8gICAgIHJlcS51c2VyID0gdXNlcjtcbi8vICAgICBuZXh0KCk7XG4vLyAgIH0gY2F0Y2ggKGVycikge1xuLy8gICAgIGNvbnN0IGVycm9yTWVzc2FnZSA9IFwiUGxlYXNlIHRyeSBsb2dnaW5nIGluIGFnYWluXCI7XG4vLyAgICAgcmVzLnN0YXR1cyg0MDEpLmpzb24oeyBlcnJvcjogZXJyb3JNZXNzYWdlIH0pO1xuLy8gICB9XG4vLyB9O1xuXG4vLyBTaWduLXVwXG5cbmFwcC5wb3N0KFwiL3VzZXJzXCIsIGFzeW5jIChyZXEsIHJlcykgPT4ge1xuICB0cnkge1xuICAgIGNvbnN0IHsgdXNlck5hbWUsIGVtYWlsLCBwYXNzd29yZCB9ID0gcmVxLmJvZHk7XG4gICAgY29uc29sZS5sb2coXCIhISFcIiwgdXNlck5hbWUsIGVtYWlsLCBwYXNzd29yZCk7XG4gICAgY29uc3QgU0FMVCA9IGJjcnlwdC5nZW5TYWx0U3luYygxMCk7XG4gICAgY29uc3QgdXNlciA9IGF3YWl0IG5ldyBVc2VyKHtcbiAgICAgIHVzZXJOYW1lLFxuICAgICAgZW1haWwsXG4gICAgICBwYXNzd29yZDogYmNyeXB0Lmhhc2hTeW5jKHBhc3N3b3JkLCBTQUxUKSxcbiAgICB9KS5zYXZlKCk7XG4gICAgcmVzLnN0YXR1cygyMDApLmpzb24oeyB1c2VySWQ6IHVzZXIuX2lkLCBhY2Nlc3NUb2tlbjogdXNlci5hY2Nlc3NUb2tlbiB9KTtcbiAgfSBjYXRjaCAoZXJyKSB7XG4gICAgY29uc29sZS5sb2coXCIhISFcIiwgZXJyLCBcIiEhIVwiKTtcbiAgICByZXMuc3RhdHVzKDQwMCkuanNvbih7IG1lc3NhZ2U6IFwiQ291bGQgbm90IGNyZWF0ZSB1c2VyXCIsIGVycm9yczogZXJyIH0pO1xuICB9XG59KTtcblxuLy8gTG9naW5cbmFwcC5wb3N0KFwiL3Nlc3Npb25zXCIsIGFzeW5jIChyZXEsIHJlcykgPT4ge1xuICB0cnkge1xuICAgIGNvbnN0IHsgZW1haWwsIHBhc3N3b3JkIH0gPSByZXEuYm9keTtcbiAgICBjb25zdCB1c2VyID0gYXdhaXQgVXNlci5maW5kT25lKHsgZW1haWwgfSk7XG4gICAgaWYgKHVzZXIgJiYgYmNyeXB0LmNvbXBhcmVTeW5jKHBhc3N3b3JkLCB1c2VyLnBhc3N3b3JkKSkge1xuICAgICAgcmVzLnN0YXR1cygyMDApLmpzb24oeyB1c2VySWQ6IHVzZXIuX2lkLCBhY2Nlc3NUb2tlbjogdXNlci5hY2Nlc3NUb2tlbiB9KTtcbiAgICB9IGVsc2Uge1xuICAgICAgdGhyb3cgXCJVc2VyIG5vdCBmb3VuZFwiO1xuICAgIH1cbiAgfSBjYXRjaCAoZXJyKSB7XG4gICAgcmVzLnN0YXR1cyg0MDQpLmpzb24oeyBlcnJvcjogXCJVc2VyIG5vdCBmb3VuZFwiIH0pO1xuICB9XG59KTtcbi8vIEhFUkUgQVJFIFRIRSBFTkRQT0lOVFMgVE8gV09SSyBXSVRIIFZJREVPIENPTExFQ1RJT05cblxuLy9nZXQgdGhlIGNvbGxlY3Rpb24gb2YgYWxsIHZpZGVvcyBhdmFpbGFibGUgdG8gZXZlcnlvbmUgeyBXT1JLSU5HIH1cbmFwcC5nZXQoXCIvdmlkZW9zXCIsIGFzeW5jIChyZXEsIHJlcykgPT4ge1xuICBjb25zdCB2aWRlb3MgPSBhd2FpdCBWaWRlby5maW5kKCkuc29ydCh7IGNyZWF0ZWRBdDogXCJkZXNjXCIgfSkubGltaXQoOCkuZXhlYygpO1xuICByZXMuanNvbih2aWRlb3MpO1xufSk7XG5cbi8vdG9wIDEwIHZpZGVvc1xuXG4vL1JvdXRlIHRvIGZpbmQgb25lIHNwZWNpZmljIHZpZGVvIGJ5IGlkIHsgV09SS0lORyB9XG5hcHAuZ2V0KFwiL3ZpZGVvcy86aWRcIiwgYXN5bmMgKHJlcSwgcmVzKSA9PiB7XG4gIGNvbnN0IHZpZGVvQnlJZCA9IGF3YWl0IFZpZGVvLmZpbmRPbmUoeyBfaWQ6IHJlcS5wYXJhbXMuaWQgfSk7XG4gIGlmICh2aWRlb0J5SWQpIHtcbiAgICByZXMuanNvbih2aWRlb0J5SWQpO1xuICB9IGVsc2Uge1xuICAgIHJlcy5zdGF0dXMoNDA0KS5qc29uKHsgZXJyb3I6IFwiVmlkZW8gbm90IGZvdW5kXCIgfSk7XG4gIH1cbn0pO1xuXG4vL2ZpbHRlciB2aWRlb3MgYnkgbGVuZ3RoXG5cbi8vZmlsdGVyIHNob3J0IHZpZGVvcyAtIDE1LCAzMCwgNjBcbmFwcC5nZXQoXCIvdmlkZW9zL2xlbmd0aC8zMFwiLCBhc3luYyAocmVxLCByZXMpID0+IHtcbiAgY29uc3QgdmlkZW9zQnlMZW5ndGggPSBhd2FpdCBWaWRlby5maW5kKHsgbGVuZ3RoOiAzMCB9KTtcbiAgaWYgKHZpZGVvc0J5TGVuZ3RoKSB7XG4gICAgcmVzLmpzb24odmlkZW9zQnlMZW5ndGgpO1xuICB9IGVsc2Uge1xuICAgIHJlcy5zdGF0dXMoNDA0KS5qc29uKHsgZXJyb3I6IFwiTm8gc3VjaCB2aWRlbyBmb3VuZFwiIH0pO1xuICB9XG59KTtcbmFwcC5nZXQoXCIvdmlkZW9zL2xlbmd0aC8xNVwiLCBhc3luYyAocmVxLCByZXMpID0+IHtcbiAgY29uc3QgdmlkZW9zQnlMZW5ndGggPSBhd2FpdCBWaWRlby5maW5kKHsgbGVuZ3RoOiAxNSB9KTtcbiAgaWYgKHZpZGVvc0J5TGVuZ3RoKSB7XG4gICAgcmVzLmpzb24odmlkZW9zQnlMZW5ndGgpO1xuICB9IGVsc2Uge1xuICAgIHJlcy5zdGF0dXMoNDA0KS5qc29uKHsgZXJyb3I6IFwiTm8gc3VjaCB2aWRlbyBmb3VuZFwiIH0pO1xuICB9XG59KTtcbmFwcC5nZXQoXCIvdmlkZW9zL2xlbmd0aC8yMFwiLCBhc3luYyAocmVxLCByZXMpID0+IHtcbiAgY29uc3QgdmlkZW9zQnlMZW5ndGggPSBhd2FpdCBWaWRlby5maW5kKHsgbGVuZ3RoOiAyMCB9KTtcbiAgaWYgKHZpZGVvc0J5TGVuZ3RoKSB7XG4gICAgcmVzLmpzb24odmlkZW9zQnlMZW5ndGgpO1xuICB9IGVsc2Uge1xuICAgIHJlcy5zdGF0dXMoNDA0KS5qc29uKHsgZXJyb3I6IFwiTm8gc3VjaCB2aWRlbyBmb3VuZFwiIH0pO1xuICB9XG59KTtcbi8vIGFwcC5nZXQoXCIvdmlkZW9zL2R1cmF0aW9uLzpsZW5ndGhcIiwgYXN5bmMgKHJlcSwgcmVzKSA9PiB7XG4vLyAgIGNvbnN0IHZpZGVvQnlEdXJhdGlvbiA9IHJlcS5wYXJhbXMubGVuZ3RoO1xuLy8gICBjb25zdCB2aWRlbyA9IGF3YWl0IFZpZGVvLmZpbmRBbGwoe1xuLy8gICAgIC8vIC8vbGVuZ3RoOiB7ICRyZWdleDooXCIvW1swLTldK10vXCIpIH1cbi8vICAgICBsZW5ndGg6IDIwLFxuLy8gICB9KTtcbi8vICAgaWYgKHZpZGVvLmxlbmd0aCA+IDApIHtcbi8vICAgICByZXMuanNvbih2aWRlbyk7XG4vLyAgIH0gZWxzZSB7XG4vLyAgICAgcmVzLnN0YXR1cyg0MDQpLmpzb24oeyBlcnJvcjogXCJObyBzdWNoIHZpZGVvIGZvdW5kXCIgfSk7XG4vLyAgIH1cbi8vIH0pO1xuXG4vL3ZpZGVvIGJ5IGxldmVsXG5cbi8vdmlkZW9zIGF2YWlsYWJsZSB3aGVuIHNpZ25lZCBpblxuLy95b3VyIGZhdm91cml0ZSB2aWRlb3NcblxuLy8gdmlkZW8gbGlrZWRcbi8vaSBuZWVkIHRvIGxpbWl0IGxpa2VzIG9uIGFuZCBvZmYgZm9yIGluZSBwYXJ0aWN1bGF0IHVzZXIgdG8gYmUgYWJsZSB0byBmaWx0ZXIgdmlkZW9zIGJ5IHRvdGFsIGFtb3VudCBvZiBsaWtlc1xuYXBwLnBvc3QoXCIvdmlkZW9zLzppZC9saWtlXCIsIGFzeW5jIChyZXEsIHJlcykgPT4ge1xuICB0cnkge1xuICAgIGNvbnN0IHsgaWQgfSA9IHJlcS5wYXJhbXM7XG4gICAgYXdhaXQgVmlkZW8udXBkYXRlT25lKHsgX2lkOiBpZCB9LCB7ICRpbmM6IHsgbGlrZXM6IDEgfSB9KTtcbiAgICByZXMuc3RhdHVzKDIwMCkuanNvbih7IHN1Y2Nlc3M6IHRydWUgfSk7XG4gIH0gY2F0Y2ggKGVycikge1xuICAgIHJlc1xuICAgICAgLnN0YXR1cyg0MDApXG4gICAgICAuanNvbih7IG1lc3NhZ2U6IEVSUl9DQU5OT1RfRklORF9WSURFT19CWV9JRCwgZXJyb3JzOiBlcnIuZXJyb3JzIH0pO1xuICB9XG59KTtcblxuLy9wb3N0IGEgdmlkZW8sIGZ1bmN0aW9uIGF2YWlsYWJsZSBvbmx5IGZvciBhZG1pbnMgeyBXT1JLSU5HIH1cbmFwcC5wb3N0KFwiL3ZpZGVvc1wiLCBhc3luYyAocmVxLCByZXMpID0+IHtcbiAgLy9UcnkgY2F0Y2hcbiAgdHJ5IHtcbiAgICAvL1N1Y2Nlc3MgY2FzZVxuICAgIC8vcmV0cml2ZSB0aGUgaW5mb3JtYXRpb24gc2VudCBieSB0aGUgY2xpZW50IHRvIG91ciBBUEkgZW5kcG9pbnRcbiAgICBjb25zdCB7IHZpZGVvTmFtZSwgdmlkZW9VcmwsIGRlc2NyaXB0aW9uLCBsZW5ndGgsIGNhdGVnb3J5IH0gPSByZXEuYm9keTtcbiAgICBjb25zdCB2aWRlbyA9IG5ldyBWaWRlbyh7XG4gICAgICB2aWRlb05hbWUsXG4gICAgICB2aWRlb1VybCxcbiAgICAgIGRlc2NyaXB0aW9uLFxuICAgICAgbGVuZ3RoLFxuICAgICAgY2F0ZWdvcnksXG4gICAgfSk7XG4gICAgY29uc3Qgc2F2ZWRWaWRlbyA9IGF3YWl0IHZpZGVvLnNhdmUoKTtcbiAgICByZXMuc3RhdHVzKDIwMCkuanNvbihzYXZlZFZpZGVvKTtcbiAgfSBjYXRjaCAoZXJyKSB7XG4gICAgLy9iYWQgcmVxdWVzdCBzZW5kaW5nIHRoZSBzdGF0dXMgdG8gdGhlIHNlcnZlciBhbmQgdGhlIG1lc3NhZ2VcbiAgICByZXNcbiAgICAgIC5zdGF0dXMoNDAwKVxuICAgICAgLmpzb24oeyBtZXNzYWdlOiBFUlJfQ0FOTk9UX1NBVkVfVE9fREFUQUJBU0UsIGVycm9yczogZXJyLmVycm9ycyB9KTtcbiAgfVxufSk7XG4vL2RlbGV0ZSBhIHZpZGVvIGZ1bmN0aW9uIGlzIGF2YWlsYWJsZSBvbmx5IGZvciBhZG1pbiAge1dPUktJTkd9XG5hcHAuZGVsZXRlKFwiL3ZpZGVvcy86aWRcIiwgYXN5bmMgKHJlcSwgcmVzKSA9PiB7XG4gIHRyeSB7XG4gICAgLy90cnkgdG8gZGVsZXRlIGFuZCBzZW5kIGEgc3VjY2Vzc2Z1bCByZXNwb25zZVxuICAgIGNvbnN0IHsgaWQgfSA9IHJlcS5wYXJhbXM7XG4gICAgYXdhaXQgVmlkZW8uZGVsZXRlT25lKHsgX2lkOiBpZCB9KTtcbiAgICByZXMuc3RhdHVzKDIwMCkuanNvbih7IHN1Y2Nlc3M6IHRydWUgfSk7XG4gIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgY29uc29sZS5sb2coZXJyb3IpO1xuICAgIC8vaW5mb3JtIHRoZSBjbGllbnQgYWJvdXQgdGhlIGRlbGV0aW9uIGZhaWx1cmVcbiAgICByZXMuc3RhdHVzKDQwMCkuanNvbih7IHN1Y2Nlc3M6IGZhbHNlIH0pO1xuICB9XG59KTtcblxuLy8gdXBkYXRpbmcgYSB2aWRlbyBlbmRwb2ludFxuLy8gYXBwLnBhdGNoKFwiL3ZpZGVvcy86aWRcIiwgYXN5bmMgKHJlcSwgcmVzKSA9PiB7XG4vLyAgIHRyeSB7XG4vLyAgICAgLy90cnkgdG8gZGVsZXRlIGFuZCBzZW5kIGEgc3VjY2Vzc2Z1bCByZXNwb25zZVxuLy8gICAgIGNvbnN0IHZpZGVvID0gYXdhaXQgVmlkZW8uZmluZEJ5SUQoeyBfaWQ6IGlkIH0pO1xuLy8gICAgIGNvbnN0IHtcbi8vICAgICAgIHZpZGVvTmFtZSA9IHZpZGVvLnZpZGVvTmFtZSxcbi8vICAgICAgIHZpZGVvVXJsID0gdmlkZW8udmlkZW9VcmwsXG4vLyAgICAgICBkZXNjcmlwdGlvbiA9IHZpZGVvLmRlc2NyaXB0aW9uLFxuLy8gICAgICAgY2F0ZWdvcnkgPSB2aWRlby5jYXRlZ29yeSxcbi8vICAgICAgIGxlbmd0aCA9IHZpZGVvLmxlbmd0aCxcbi8vICAgICB9ID0gcmVxLmJvZHk7XG4vLyAgICAgY29uc3QgdXBkYXRlVmlkZW8gPSBhd2FpdCBWaWRlby5maW5kQnlJZEFuZFVwZGF0ZShcbi8vICAgICAgIHsgX2lkOiBpZCB9LFxuLy8gICAgICAgeyB2aWRlb05hbWUsIHZpZGVvVXJsLCBkZXNjcmlwdGlvbiwgY2F0ZWdvcnksIGxlbmd0aCB9LFxuLy8gICAgICAgeyBydW5WYWxpZGF0b3JzOiB0cnVlIH1cbi8vICAgICApO1xuLy8gICAgIHJldHVybiByZXMuc3RhdHVzKDIwMikuanNvbih1cGRhdGVkVmlkZW8pO1xuLy8gICB9IGNhdGNoIChlcnJvcikge1xuLy8gICAgIHRyeSB7XG4vLyAgICAgICBhd2FpdCBWaWRlby5maW5kQnlJZCh7IF9pZDogaWQgfSk7IC8vIGlkIGlzIG1hdGNoaW5nLCB0aGUgbW9kZWwgdmFsaWRhdGlvbiBpcyBvZmZcbi8vICAgICAgIHJldHVybiByZXNcbi8vICAgICAgICAgLnN0YXR1cyg0MDApXG4vLyAgICAgICAgIC5qc29uKHsgbWVzc2FnZTogXCJDb3VsZCBub3QgdXBkYXRlIHZpZGVvXCIsIGVycm9yOiBlcnIubWVzc2FnZSB9KTtcbi8vICAgICB9IGNhdGNoIChlcnIpIHtcbi8vICAgICAgIC8vIGlkIGlzIG5vdCBtYXRjaGluZywgdGhlIHZhbGlkYXRpb24gY2FuIGJlIGVpdGhlciByaWdodCBvciB3cm9uZ1xuLy8gICAgICAgcmV0dXJuIHJlcy5zdGF0dXMoNDA0KS5qc29uKHsgbWVzc2FnZTogRVJSX0NBTk5PVF9GSU5EX1ZJREVPX0JZX0lELCBpZCB9KTtcbi8vICAgICB9XG4vLyAgIH1cbi8vIH0pO1xuXG4vLyBTdGFydCB0aGUgc2VydmVyXG5hcHAubGlzdGVuKHBvcnQsICgpID0+IHtcbiAgY29uc29sZS5sb2coYFNlcnZlciBydW5uaW5nIG9uIGh0dHA6Ly9sb2NhbGhvc3Q6JHtwb3J0fWApO1xufSk7XG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "server.js"
      ],
      "names": [
        "port",
        "process",
        "env",
        "PORT",
        "app",
        "ERR_CANNOT_SAVE_TO_DATABASE",
        "ERR_CANNOT_FIND_VIDEO_BY_ID",
        "mongoUrl",
        "MONGO_URL",
        "mongoose",
        "connect",
        "useNewUrlParser",
        "useUnifiedTopology",
        "Promise",
        "userSchema",
        "Schema",
        "userName",
        "type",
        "String",
        "minlength",
        "maxlength",
        "unique",
        "required",
        "email",
        "password",
        "accessToken",
        "crypto",
        "randomBytes",
        "toString",
        "isAdmin",
        "Boolean",
        "selectedVideos",
        "Types",
        "ObjectId",
        "ref",
        "videoSchema",
        "videoName",
        "description",
        "videoUrl",
        "category",
        "length",
        "Number",
        "likes",
        "min",
        "max",
        "timestamps",
        "use",
        "bodyParser",
        "json",
        "User",
        "model",
        "Video",
        "req",
        "res",
        "next",
        "connection",
        "readyState",
        "status",
        "error",
        "get",
        "send",
        "post",
        "body",
        "console",
        "log",
        "SALT",
        "bcrypt",
        "genSaltSync",
        "hashSync",
        "save",
        "user",
        "userId",
        "_id",
        "message",
        "errors",
        "findOne",
        "compareSync",
        "find",
        "sort",
        "createdAt",
        "limit",
        "exec",
        "videos",
        "params",
        "id",
        "videoById",
        "videosByLength",
        "updateOne",
        "$inc",
        "success",
        "video",
        "savedVideo",
        "deleteOne",
        "listen"
      ],
      "mappings": "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",
      "sourceRoot": "/Users/elizavetaminican/Desktop/projects_main/TECHNIGO/final-project-yoga-studio-backend/",
      "sourcesContent": [
        "import express from \"express\";\nimport bodyParser from \"body-parser\";\nimport cors from \"cors\";\nimport mongoose from \"mongoose\";\nimport endpoints from \"express-list-endpoints\";\nimport crypto from \"crypto\";\nimport bcrypt from \"bcrypt\";\nimport { StringDecoder } from \"string_decoder\";\n// Defines the port the app will run on.\n\nconst port = process.env.PORT || 8080;\nconst app = express();\n\n// error messages\nconst ERR_CANNOT_SAVE_TO_DATABASE = \"Could not save video to the Database\";\nconst ERR_CANNOT_FIND_VIDEO_BY_ID = \"Could not find video by id provided\";\n\nconst mongoUrl = process.env.MONGO_URL || \"mongodb://localhost/yogaStudio\";\nmongoose.connect(mongoUrl, { useNewUrlParser: true, useUnifiedTopology: true });\nmongoose.Promise = Promise;\n\n//user schema for sign in and sugn up with relation to video schema to store user's favourite videos\nconst userSchema = new mongoose.Schema({\n  userName: {\n    type: String,\n    minlength: 5,\n    maxlength: 20,\n    unique: true,\n    required: true,\n  },\n  email: {\n    type: String,\n    unique: true,\n  },\n  password: {\n    type: String,\n    minlength: 6,\n    required: true,\n  },\n  accessToken: {\n    type: String,\n    default: () => crypto.randomBytes(128).toString(\"hex\"),\n  },\n  isAdmin: {\n    type: Boolean,\n    default: false,\n  },\n  //reference to the videos, storing them in the array\n  selectedVideos: [{ type: mongoose.Schema.Types.ObjectId, ref: \"Video\" }],\n\n  // selectedVideos: {\n  //   type: Array,\n  // },\n});\n\n//week 18th and date 16th watch\n\nconst videoSchema = new mongoose.Schema(\n  {\n    videoName: {\n      type: String,\n      required: true,\n    },\n    description: {\n      type: String,\n      required: true,\n    },\n    videoUrl: {\n      type: String,\n      required: true,\n    },\n    category: {\n      type: String,\n      required: true,\n      enum: [\"Beginner\", \"Intermediate\", \"Advanced\"],\n    },\n    length: {\n      type: Number,\n      required: true,\n    },\n    //RATING AND LIKES CAN BE ADDED LATER\n    // rating: {\n    //   type: Number,\n    //   enum: [1,2,3,4,5]\n    // },\n\n    likes: {\n      type: Number,\n      default: 0,\n      min: 0,\n      max: 1,\n    },\n\n    //reference to the user\n    //   user: {\n    //     type: mongoose.Schema.Types.ObjectId,\n    //     ref: \"User\",\n    //   },\n  },\n  { timestamps: true }\n);\n\n// Add middlewares to enable cors and json body parsing\napp.use(cors());\napp.use(bodyParser.json());\n\nconst User = mongoose.model(\"User\", userSchema);\nconst Video = mongoose.model(\"Video\", videoSchema);\n\n//Provide error of server\n\napp.use((req, res, next) => {\n  if (mongoose.connection.readyState === 1) {\n    next();\n  } else {\n    res.status(503).json({ error: \"Service unavailable at the moment\" });\n  }\n});\n\n// Start defining routes here\napp.get(\"/\", (req, res) => {\n  res.send(\"Hello world\");\n});\n\n// HERE ARE THE ENDPOINTS FOR SIGN IN / SIGN UP\n\n// const authenticateUser = async (req, res, next) => {\n//   try {\n//     const accessToken = req.header(\"Authorization\");\n//     const user = await User.findOne({ accessToken });\n//     if (!user) {\n//       throw \"User not found\";\n//     }\n//     req.user = user;\n//     next();\n//   } catch (err) {\n//     const errorMessage = \"Please try logging in again\";\n//     res.status(401).json({ error: errorMessage });\n//   }\n// };\n\n// Sign-up\n\napp.post(\"/users\", async (req, res) => {\n  try {\n    const { userName, email, password } = req.body;\n    console.log(\"!!!\", userName, email, password);\n    const SALT = bcrypt.genSaltSync(10);\n    const user = await new User({\n      userName,\n      email,\n      password: bcrypt.hashSync(password, SALT),\n    }).save();\n    res.status(200).json({ userId: user._id, accessToken: user.accessToken });\n  } catch (err) {\n    console.log(\"!!!\", err, \"!!!\");\n    res.status(400).json({ message: \"Could not create user\", errors: err });\n  }\n});\n\n// Login\napp.post(\"/sessions\", async (req, res) => {\n  try {\n    const { email, password } = req.body;\n    const user = await User.findOne({ email });\n    if (user && bcrypt.compareSync(password, user.password)) {\n      res.status(200).json({ userId: user._id, accessToken: user.accessToken });\n    } else {\n      throw \"User not found\";\n    }\n  } catch (err) {\n    res.status(404).json({ error: \"User not found\" });\n  }\n});\n// HERE ARE THE ENDPOINTS TO WORK WITH VIDEO COLLECTION\n\n//get the collection of all videos available to everyone { WORKING }\napp.get(\"/videos\", async (req, res) => {\n  const videos = await Video.find().sort({ createdAt: \"desc\" }).limit(8).exec();\n  res.json(videos);\n});\n\n//top 10 videos\n\n//Route to find one specific video by id { WORKING }\napp.get(\"/videos/:id\", async (req, res) => {\n  const videoById = await Video.findOne({ _id: req.params.id });\n  if (videoById) {\n    res.json(videoById);\n  } else {\n    res.status(404).json({ error: \"Video not found\" });\n  }\n});\n\n//filter videos by length\n\n//filter short videos - 15, 30, 60\napp.get(\"/videos/length/30\", async (req, res) => {\n  const videosByLength = await Video.find({ length: 30 });\n  if (videosByLength) {\n    res.json(videosByLength);\n  } else {\n    res.status(404).json({ error: \"No such video found\" });\n  }\n});\napp.get(\"/videos/length/15\", async (req, res) => {\n  const videosByLength = await Video.find({ length: 15 });\n  if (videosByLength) {\n    res.json(videosByLength);\n  } else {\n    res.status(404).json({ error: \"No such video found\" });\n  }\n});\napp.get(\"/videos/length/20\", async (req, res) => {\n  const videosByLength = await Video.find({ length: 20 });\n  if (videosByLength) {\n    res.json(videosByLength);\n  } else {\n    res.status(404).json({ error: \"No such video found\" });\n  }\n});\n// app.get(\"/videos/duration/:length\", async (req, res) => {\n//   const videoByDuration = req.params.length;\n//   const video = await Video.findAll({\n//     // //length: { $regex:(\"/[[0-9]+]/\") }\n//     length: 20,\n//   });\n//   if (video.length > 0) {\n//     res.json(video);\n//   } else {\n//     res.status(404).json({ error: \"No such video found\" });\n//   }\n// });\n\n//video by level\n\n//videos available when signed in\n//your favourite videos\n\n// video liked\n//i need to limit likes on and off for ine particulat user to be able to filter videos by total amount of likes\napp.post(\"/videos/:id/like\", async (req, res) => {\n  try {\n    const { id } = req.params;\n    await Video.updateOne({ _id: id }, { $inc: { likes: 1 } });\n    res.status(200).json({ success: true });\n  } catch (err) {\n    res\n      .status(400)\n      .json({ message: ERR_CANNOT_FIND_VIDEO_BY_ID, errors: err.errors });\n  }\n});\n\n//post a video, function available only for admins { WORKING }\napp.post(\"/videos\", async (req, res) => {\n  //Try catch\n  try {\n    //Success case\n    //retrive the information sent by the client to our API endpoint\n    const { videoName, videoUrl, description, length, category } = req.body;\n    const video = new Video({\n      videoName,\n      videoUrl,\n      description,\n      length,\n      category,\n    });\n    const savedVideo = await video.save();\n    res.status(200).json(savedVideo);\n  } catch (err) {\n    //bad request sending the status to the server and the message\n    res\n      .status(400)\n      .json({ message: ERR_CANNOT_SAVE_TO_DATABASE, errors: err.errors });\n  }\n});\n//delete a video function is available only for admin  {WORKING}\napp.delete(\"/videos/:id\", async (req, res) => {\n  try {\n    //try to delete and send a successful response\n    const { id } = req.params;\n    await Video.deleteOne({ _id: id });\n    res.status(200).json({ success: true });\n  } catch (error) {\n    console.log(error);\n    //inform the client about the deletion failure\n    res.status(400).json({ success: false });\n  }\n});\n\n// updating a video endpoint\n// app.patch(\"/videos/:id\", async (req, res) => {\n//   try {\n//     //try to delete and send a successful response\n//     const video = await Video.findByID({ _id: id });\n//     const {\n//       videoName = video.videoName,\n//       videoUrl = video.videoUrl,\n//       description = video.description,\n//       category = video.category,\n//       length = video.length,\n//     } = req.body;\n//     const updateVideo = await Video.findByIdAndUpdate(\n//       { _id: id },\n//       { videoName, videoUrl, description, category, length },\n//       { runValidators: true }\n//     );\n//     return res.status(202).json(updatedVideo);\n//   } catch (error) {\n//     try {\n//       await Video.findById({ _id: id }); // id is matching, the model validation is off\n//       return res\n//         .status(400)\n//         .json({ message: \"Could not update video\", error: err.message });\n//     } catch (err) {\n//       // id is not matching, the validation can be either right or wrong\n//       return res.status(404).json({ message: ERR_CANNOT_FIND_VIDEO_BY_ID, id });\n//     }\n//   }\n// });\n\n// Start the server\napp.listen(port, () => {\n  console.log(`Server running on http://localhost:${port}`);\n});\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1612221105420
  }
}