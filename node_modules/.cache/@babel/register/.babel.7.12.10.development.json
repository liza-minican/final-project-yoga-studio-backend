{
  "{\"sourceRoot\":\"/Users/elizavetaminican/Desktop/projects_main/TECHNIGO/final-project-yoga-studio-backend/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/elizavetaminican/Desktop/projects_main/TECHNIGO/final-project-yoga-studio-backend\",\"filename\":\"/Users/elizavetaminican/Desktop/projects_main/TECHNIGO/final-project-yoga-studio-backend/server.js\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/elizavetaminican/Desktop/projects_main/TECHNIGO/final-project-yoga-studio-backend\",\"plugins\":[{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]},\"BigIntLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.12.10": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/elizavetaminican/Desktop/projects_main/TECHNIGO/final-project-yoga-studio-backend/",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/elizavetaminican/Desktop/projects_main/TECHNIGO/final-project-yoga-studio-backend",
      "filename": "/Users/elizavetaminican/Desktop/projects_main/TECHNIGO/final-project-yoga-studio-backend/server.js",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/elizavetaminican/Desktop/projects_main/TECHNIGO/final-project-yoga-studio-backend",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "BigIntLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "StaticBlock": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/elizavetaminican/Desktop/projects_main/TECHNIGO/final-project-yoga-studio-backend/server.js",
        "plugins": [
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/elizavetaminican/Desktop/projects_main/TECHNIGO/final-project-yoga-studio-backend/server.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/elizavetaminican/Desktop/projects_main/TECHNIGO/final-project-yoga-studio-backend/",
        "sourceFileName": "server.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _express = _interopRequireDefault(require(\"express\"));\n\nvar _bodyParser = _interopRequireDefault(require(\"body-parser\"));\n\nvar _cors = _interopRequireDefault(require(\"cors\"));\n\nvar _mongoose = _interopRequireDefault(require(\"mongoose\"));\n\nvar _expressListEndpoints = _interopRequireDefault(require(\"express-list-endpoints\"));\n\nvar _crypto = _interopRequireDefault(require(\"crypto\"));\n\nvar _bcrypt = _interopRequireDefault(require(\"bcrypt\"));\n\nvar _string_decoder = require(\"string_decoder\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\n// Defines the port the app will run on.\nvar port = process.env.PORT || 8080;\nvar app = (0, _express[\"default\"])(); // error messages\n\nvar ERR_CANNOT_SAVE_TO_DATABASE = \"Could not save video to the Database\";\nvar ERR_CANNOT_FIND_VIDEO_BY_ID = \"Could not find video by id provided\";\nvar mongoUrl = process.env.MONGO_URL || \"mongodb://localhost/yogaStudio\";\n\n_mongoose[\"default\"].connect(mongoUrl, {\n  useNewUrlParser: true,\n  useUnifiedTopology: true\n});\n\n_mongoose[\"default\"].Promise = Promise; //user schema for sign in and sugn up with relation to video schema to store user's favourite videos\n\nvar userSchema = new _mongoose[\"default\"].Schema({\n  userName: {\n    type: String,\n    minlength: 5,\n    maxlength: 20,\n    required: true\n  },\n  email: {\n    type: String,\n    unique: true\n  },\n  password: {\n    type: String,\n    minlength: 6,\n    required: true\n  },\n  accessToken: {\n    type: String,\n    \"default\": function _default() {\n      return _crypto[\"default\"].randomBytes(128).toString(\"hex\");\n    }\n  },\n  isAdmin: {\n    type: Boolean,\n    \"default\": false\n  },\n  //reference to the videos, storing them in the array\n  selectedVideos: [{\n    type: _mongoose[\"default\"].Schema.Types.ObjectId,\n    ref: \"Video\"\n  }] // selectedVideos: {\n  //   type: Array,\n  // },\n\n}); //week 18th and date 16th watch\n\nvar videoSchema = new _mongoose[\"default\"].Schema({\n  videoName: {\n    type: String,\n    required: true\n  },\n  description: {\n    type: String,\n    required: true\n  },\n  videoUrl: {\n    type: String,\n    required: true\n  },\n  category: {\n    type: String,\n    required: true,\n    \"enum\": [\"Beginner\", \"Intermediate\", \"Advanced\"]\n  },\n  length: {\n    type: Number,\n    required: true\n  },\n  //RATING AND LIKES CAN BE ADDED LATER\n  // rating: {\n  //   type: Number,\n  //   enum: [1,2,3,4,5]\n  // },\n  likes: {\n    type: Number,\n    \"default\": 0,\n    min: 0,\n    max: 1\n  } //reference to the user\n  //   user: {\n  //     type: mongoose.Schema.Types.ObjectId,\n  //     ref: \"User\",\n  //   },\n\n}, {\n  timestamps: true\n}); // Add middlewares to enable cors and json body parsing\n\napp.use((0, _cors[\"default\"])());\napp.use(_bodyParser[\"default\"].json());\n\nvar User = _mongoose[\"default\"].model(\"User\", userSchema);\n\nvar Video = _mongoose[\"default\"].model(\"Video\", videoSchema); //Provide error of server\n\n\napp.use(function (req, res, next) {\n  if (_mongoose[\"default\"].connection.readyState === 1) {\n    next();\n  } else {\n    res.status(503).json({\n      error: \"Service unavailable at the moment\"\n    });\n  }\n}); // Start defining routes here\n\napp.get(\"/\", function (req, res) {\n  res.send(\"Hello world\");\n}); // HERE ARE THE ENDPOINTS FOR SIGN IN / SIGN UP\n//this middleware is for user authentification\n\nvar authenticateUser = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(req, res, next) {\n    var accessToken, user, errorMessage;\n    return regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            accessToken = req.header(\"Authorization\");\n            _context.next = 4;\n            return User.findOne({\n              accessToken: accessToken\n            });\n\n          case 4:\n            user = _context.sent;\n\n            if (user) {\n              _context.next = 7;\n              break;\n            }\n\n            throw \"User not found\";\n\n          case 7:\n            req.user = user;\n            next();\n            _context.next = 15;\n            break;\n\n          case 11:\n            _context.prev = 11;\n            _context.t0 = _context[\"catch\"](0);\n            errorMessage = \"User not found. Please try logging in again\";\n            res.status(401).json({\n              error: errorMessage\n            });\n\n          case 15:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[0, 11]]);\n  }));\n\n  return function authenticateUser(_x, _x2, _x3) {\n    return _ref.apply(this, arguments);\n  };\n}(); // Sign-up\n\n\napp.post(\"/users\", /*#__PURE__*/function () {\n  var _ref2 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2(req, res) {\n    var _req$body, userName, email, password, SALT, user;\n\n    return regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.prev = 0;\n            _req$body = req.body, userName = _req$body.userName, email = _req$body.email, password = _req$body.password;\n            console.log(\"!!!\", userName, email, password);\n            SALT = _bcrypt[\"default\"].genSaltSync(10);\n            _context2.next = 6;\n            return new User({\n              userName: userName,\n              email: email,\n              password: _bcrypt[\"default\"].hashSync(password, SALT)\n            }).save();\n\n          case 6:\n            user = _context2.sent;\n            res.status(200).json({\n              message: \"User created!\",\n              userId: user._id,\n              accessToken: user.accessToken,\n              userName: user.userName,\n              email: user.email,\n              password: user.password\n            });\n            _context2.next = 14;\n            break;\n\n          case 10:\n            _context2.prev = 10;\n            _context2.t0 = _context2[\"catch\"](0);\n            console.log(\"!!!\", _context2.t0, \"!!!\");\n            res.status(400).json({\n              message: \"Could not create user\",\n              errors: _context2.t0\n            });\n\n          case 14:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2, null, [[0, 10]]);\n  }));\n\n  return function (_x4, _x5) {\n    return _ref2.apply(this, arguments);\n  };\n}()); // Login\n\napp.post(\"/sessions\", /*#__PURE__*/function () {\n  var _ref3 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3(req, res) {\n    var _req$body2, email, password, user;\n\n    return regeneratorRuntime.wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            _context3.prev = 0;\n            _req$body2 = req.body, email = _req$body2.email, password = _req$body2.password;\n            console.log(\"!!!\", email, password);\n            _context3.next = 5;\n            return User.findOne({\n              email: email\n            });\n\n          case 5:\n            user = _context3.sent;\n\n            if (!(user && _bcrypt[\"default\"].compareSync(password, user.password))) {\n              _context3.next = 10;\n              break;\n            }\n\n            res.status(200).json({\n              userId: user._id,\n              accessToken: user.accessToken\n            });\n            _context3.next = 11;\n            break;\n\n          case 10:\n            throw \"User not found\";\n\n          case 11:\n            _context3.next = 16;\n            break;\n\n          case 13:\n            _context3.prev = 13;\n            _context3.t0 = _context3[\"catch\"](0);\n            res.status(404).json({\n              error: \"User not found\"\n            });\n\n          case 16:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3, null, [[0, 13]]);\n  }));\n\n  return function (_x6, _x7) {\n    return _ref3.apply(this, arguments);\n  };\n}()); // HERE ARE THE ENDPOINTS TO WORK WITH VIDEO COLLECTION\n//get the collection of all videos available to everyone { WORKING }\n\napp.get(\"/videos\", /*#__PURE__*/function () {\n  var _ref4 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee4(req, res) {\n    var videos;\n    return regeneratorRuntime.wrap(function _callee4$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            _context4.next = 2;\n            return Video.find().sort({\n              createdAt: \"desc\"\n            }).limit(8).exec();\n\n          case 2:\n            videos = _context4.sent;\n            res.json(videos);\n\n          case 4:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, _callee4);\n  }));\n\n  return function (_x8, _x9) {\n    return _ref4.apply(this, arguments);\n  };\n}()); //top 10 videos\n//Route to find one specific video by id { WORKING }\n\napp.get(\"/videos/:id\", /*#__PURE__*/function () {\n  var _ref5 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee5(req, res) {\n    var videoById;\n    return regeneratorRuntime.wrap(function _callee5$(_context5) {\n      while (1) {\n        switch (_context5.prev = _context5.next) {\n          case 0:\n            _context5.next = 2;\n            return Video.findOne({\n              _id: req.params.id\n            });\n\n          case 2:\n            videoById = _context5.sent;\n\n            if (videoById) {\n              res.json(videoById);\n            } else {\n              res.status(404).json({\n                error: \"Video not found\"\n              });\n            }\n\n          case 4:\n          case \"end\":\n            return _context5.stop();\n        }\n      }\n    }, _callee5);\n  }));\n\n  return function (_x10, _x11) {\n    return _ref5.apply(this, arguments);\n  };\n}()); //filter videos by length\n//filter short videos - 15, 30, 60\n\napp.get(\"/videos/length/30\", /*#__PURE__*/function () {\n  var _ref6 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee6(req, res) {\n    var videosByLength;\n    return regeneratorRuntime.wrap(function _callee6$(_context6) {\n      while (1) {\n        switch (_context6.prev = _context6.next) {\n          case 0:\n            _context6.next = 2;\n            return Video.find({\n              length: 30\n            });\n\n          case 2:\n            videosByLength = _context6.sent;\n\n            if (videosByLength) {\n              res.json(videosByLength);\n            } else {\n              res.status(404).json({\n                error: \"No such video found\"\n              });\n            }\n\n          case 4:\n          case \"end\":\n            return _context6.stop();\n        }\n      }\n    }, _callee6);\n  }));\n\n  return function (_x12, _x13) {\n    return _ref6.apply(this, arguments);\n  };\n}());\napp.get(\"/videos/length/15\", /*#__PURE__*/function () {\n  var _ref7 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee7(req, res) {\n    var videosByLength;\n    return regeneratorRuntime.wrap(function _callee7$(_context7) {\n      while (1) {\n        switch (_context7.prev = _context7.next) {\n          case 0:\n            _context7.next = 2;\n            return Video.find({\n              length: 15\n            });\n\n          case 2:\n            videosByLength = _context7.sent;\n\n            if (videosByLength) {\n              res.json(videosByLength);\n            } else {\n              res.status(404).json({\n                error: \"No such video found\"\n              });\n            }\n\n          case 4:\n          case \"end\":\n            return _context7.stop();\n        }\n      }\n    }, _callee7);\n  }));\n\n  return function (_x14, _x15) {\n    return _ref7.apply(this, arguments);\n  };\n}());\napp.get(\"/videos/length/20\", /*#__PURE__*/function () {\n  var _ref8 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee8(req, res) {\n    var videosByLength;\n    return regeneratorRuntime.wrap(function _callee8$(_context8) {\n      while (1) {\n        switch (_context8.prev = _context8.next) {\n          case 0:\n            _context8.next = 2;\n            return Video.find({\n              length: 20\n            });\n\n          case 2:\n            videosByLength = _context8.sent;\n\n            if (videosByLength) {\n              res.json(videosByLength);\n            } else {\n              res.status(404).json({\n                error: \"No such video found\"\n              });\n            }\n\n          case 4:\n          case \"end\":\n            return _context8.stop();\n        }\n      }\n    }, _callee8);\n  }));\n\n  return function (_x16, _x17) {\n    return _ref8.apply(this, arguments);\n  };\n}()); // app.get(\"/videos/duration/:length\", async (req, res) => {\n//   const videoByDuration = req.params.length;\n//   const video = await Video.findAll({\n//     // //length: { $regex:(\"/[[0-9]+]/\") }\n//     length: 20,\n//   });\n//   if (video.length > 0) {\n//     res.json(video);\n//   } else {\n//     res.status(404).json({ error: \"No such video found\" });\n//   }\n// });\n// PUT: endpoint to add favoritevideo for a logged-in user:\n// UPDATES the user and adds the favorite video to the favorite videos-array for that user.\n\napp.put(\"/users/:userId/favorites/:videoId\", authenticateUser);\napp.put(\"/users/:userId/favorites/:videoId\", /*#__PURE__*/function () {\n  var _ref9 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee9(req, res) {\n    var _req$params, userId, videoId, selectedVideo;\n\n    return regeneratorRuntime.wrap(function _callee9$(_context9) {\n      while (1) {\n        switch (_context9.prev = _context9.next) {\n          case 0:\n            _req$params = req.params, userId = _req$params.userId, videoId = _req$params.videoId;\n            _context9.prev = 1;\n            _context9.next = 4;\n            return Video.findById(videoId);\n\n          case 4:\n            selectedVideo = _context9.sent;\n            // Find the video the user wants to add.\n            console.log(\"selectedVideo\", selectedVideo);\n            _context9.next = 8;\n            return User.updateOne({\n              _id: userId\n            }, {\n              $push: {\n                selectedVideos: selectedVideo\n              }\n            } //push the selected video into the favorite videos array\n            );\n\n          case 8:\n            //console.log(\"\")\n            res.status(200).json(selectedVideo);\n            _context9.next = 14;\n            break;\n\n          case 11:\n            _context9.prev = 11;\n            _context9.t0 = _context9[\"catch\"](1);\n            res.status(404).json({\n              message: \"Could not add video.\",\n              errors: {\n                message: _context9.t0.message,\n                error: _context9.t0\n              }\n            });\n\n          case 14:\n          case \"end\":\n            return _context9.stop();\n        }\n      }\n    }, _callee9, null, [[1, 11]]);\n  }));\n\n  return function (_x18, _x19) {\n    return _ref9.apply(this, arguments);\n  };\n}()); //delete a video from favourites\n\napp[\"delete\"](\"/users/:userId/favorites/:videoId\", /*#__PURE__*/function () {\n  var _ref10 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee10(req, res) {\n    var _req$params2, userId, videoId, selectedVideo;\n\n    return regeneratorRuntime.wrap(function _callee10$(_context10) {\n      while (1) {\n        switch (_context10.prev = _context10.next) {\n          case 0:\n            _req$params2 = req.params, userId = _req$params2.userId, videoId = _req$params2.videoId;\n            _context10.prev = 1;\n            _context10.next = 4;\n            return Video.findById(videoId);\n\n          case 4:\n            selectedVideo = _context10.sent;\n            // Find the video the user wants to add.\n            console.log(\"selectedVideo\", selectedVideo);\n            _context10.next = 8;\n            return User.deleteOne({\n              _id: userId\n            }, {\n              $pull: {\n                selectedVideos: selectedVideo\n              }\n            } //push the selected video into the favorite videos array\n            );\n\n          case 8:\n            //console.log(\"\")\n            res.status(200).json(selectedVideo);\n            _context10.next = 14;\n            break;\n\n          case 11:\n            _context10.prev = 11;\n            _context10.t0 = _context10[\"catch\"](1);\n            res.status(404).json({\n              message: \"Could not remove video.\",\n              errors: {\n                message: _context10.t0.message,\n                error: _context10.t0\n              }\n            });\n\n          case 14:\n          case \"end\":\n            return _context10.stop();\n        }\n      }\n    }, _callee10, null, [[1, 11]]);\n  }));\n\n  return function (_x20, _x21) {\n    return _ref10.apply(this, arguments);\n  };\n}());\napp.get(\"/users/:id/favorites\", /*#__PURE__*/function () {\n  var _ref11 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee11(req, res) {\n    var userId, userFavoritesArray, getCurrentFavoriteVideos;\n    return regeneratorRuntime.wrap(function _callee11$(_context11) {\n      while (1) {\n        switch (_context11.prev = _context11.next) {\n          case 0:\n            _context11.prev = 0;\n            userId = req.params.id;\n\n            if (!(userId != req.user._id)) {\n              _context11.next = 4;\n              break;\n            }\n\n            throw \"Access denied\";\n\n          case 4:\n            _context11.next = 6;\n            return req.user.favoriteVideos;\n\n          case 6:\n            userFavoritesArray = _context11.sent;\n            _context11.next = 9;\n            return Video.find({\n              _id: userFavoritesArray\n            });\n\n          case 9:\n            getCurrentFavoriteVideos = _context11.sent;\n            // --> outputs the whole video-object in user favorites!\n            res.status(200).json(getCurrentFavoriteVideos);\n            _context11.next = 16;\n            break;\n\n          case 13:\n            _context11.prev = 13;\n            _context11.t0 = _context11[\"catch\"](0);\n            res.status(403).json({\n              message: \"Could not get favorite videos. User must be logged in to see favorite videos.\",\n              errors: {\n                message: _context11.t0.message,\n                error: _context11.t0\n              }\n            });\n\n          case 16:\n          case \"end\":\n            return _context11.stop();\n        }\n      }\n    }, _callee11, null, [[0, 13]]);\n  }));\n\n  return function (_x22, _x23) {\n    return _ref11.apply(this, arguments);\n  };\n}()); //i need to limit likes on and off for ine particulat user to be able to filter videos by total amount of likes\n\napp.post(\"/videos/:id/like\", /*#__PURE__*/function () {\n  var _ref12 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee12(req, res) {\n    var id;\n    return regeneratorRuntime.wrap(function _callee12$(_context12) {\n      while (1) {\n        switch (_context12.prev = _context12.next) {\n          case 0:\n            _context12.prev = 0;\n            id = req.params.id;\n            _context12.next = 4;\n            return Video.updateOne({\n              _id: id\n            }, {\n              $inc: {\n                likes: 1\n              }\n            });\n\n          case 4:\n            res.status(200).json({\n              success: true\n            });\n            _context12.next = 10;\n            break;\n\n          case 7:\n            _context12.prev = 7;\n            _context12.t0 = _context12[\"catch\"](0);\n            res.status(400).json({\n              message: ERR_CANNOT_FIND_VIDEO_BY_ID,\n              errors: _context12.t0.errors\n            });\n\n          case 10:\n          case \"end\":\n            return _context12.stop();\n        }\n      }\n    }, _callee12, null, [[0, 7]]);\n  }));\n\n  return function (_x24, _x25) {\n    return _ref12.apply(this, arguments);\n  };\n}()); //post a video, function available only for admins { WORKING }\n\napp.post(\"/videos\", /*#__PURE__*/function () {\n  var _ref13 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee13(req, res) {\n    var _req$body3, videoName, videoUrl, description, length, category, video, savedVideo;\n\n    return regeneratorRuntime.wrap(function _callee13$(_context13) {\n      while (1) {\n        switch (_context13.prev = _context13.next) {\n          case 0:\n            _context13.prev = 0;\n            //Success case\n            //retrive the information sent by the client to our API endpoint\n            _req$body3 = req.body, videoName = _req$body3.videoName, videoUrl = _req$body3.videoUrl, description = _req$body3.description, length = _req$body3.length, category = _req$body3.category;\n            video = new Video({\n              videoName: videoName,\n              videoUrl: videoUrl,\n              description: description,\n              length: length,\n              category: category\n            });\n            _context13.next = 5;\n            return video.save();\n\n          case 5:\n            savedVideo = _context13.sent;\n            res.status(200).json(savedVideo);\n            _context13.next = 12;\n            break;\n\n          case 9:\n            _context13.prev = 9;\n            _context13.t0 = _context13[\"catch\"](0);\n            //bad request sending the status to the server and the message\n            res.status(400).json({\n              message: ERR_CANNOT_SAVE_TO_DATABASE,\n              errors: _context13.t0.errors\n            });\n\n          case 12:\n          case \"end\":\n            return _context13.stop();\n        }\n      }\n    }, _callee13, null, [[0, 9]]);\n  }));\n\n  return function (_x26, _x27) {\n    return _ref13.apply(this, arguments);\n  };\n}()); //delete a video function is available only for admin  {WORKING}\n\napp[\"delete\"](\"/videos/:id\", /*#__PURE__*/function () {\n  var _ref14 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee14(req, res) {\n    var id;\n    return regeneratorRuntime.wrap(function _callee14$(_context14) {\n      while (1) {\n        switch (_context14.prev = _context14.next) {\n          case 0:\n            _context14.prev = 0;\n            //try to delete and send a successful response\n            id = req.params.id;\n            _context14.next = 4;\n            return Video.deleteOne({\n              _id: id\n            });\n\n          case 4:\n            res.status(200).json({\n              success: true\n            });\n            _context14.next = 11;\n            break;\n\n          case 7:\n            _context14.prev = 7;\n            _context14.t0 = _context14[\"catch\"](0);\n            console.log(_context14.t0); //inform the client about the deletion failure\n\n            res.status(400).json({\n              success: false\n            });\n\n          case 11:\n          case \"end\":\n            return _context14.stop();\n        }\n      }\n    }, _callee14, null, [[0, 7]]);\n  }));\n\n  return function (_x28, _x29) {\n    return _ref14.apply(this, arguments);\n  };\n}()); // updating a video endpoint\n// app.patch(\"/videos/:id\", async (req, res) => {\n//   try {\n//     //try to delete and send a successful response\n//     const video = await Video.findByID({ _id: id });\n//     const {\n//       videoName = video.videoName,\n//       videoUrl = video.videoUrl,\n//       description = video.description,\n//       category = video.category,\n//       length = video.length,\n//     } = req.body;\n//     const updateVideo = await Video.findByIdAndUpdate(\n//       { _id: id },\n//       { videoName, videoUrl, description, category, length },\n//       { runValidators: true }\n//     );\n//     return res.status(202).json(updatedVideo);\n//   } catch (error) {\n//     try {\n//       await Video.findById({ _id: id }); // id is matching, the model validation is off\n//       return res\n//         .status(400)\n//         .json({ message: \"Could not update video\", error: err.message });\n//     } catch (err) {\n//       // id is not matching, the validation can be either right or wrong\n//       return res.status(404).json({ message: ERR_CANNOT_FIND_VIDEO_BY_ID, id });\n//     }\n//   }\n// });\n// Start the server\n\napp.listen(port, function () {\n  console.log(\"Server running on http://localhost:\".concat(port));\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "server.js"
      ],
      "names": [
        "port",
        "process",
        "env",
        "PORT",
        "app",
        "ERR_CANNOT_SAVE_TO_DATABASE",
        "ERR_CANNOT_FIND_VIDEO_BY_ID",
        "mongoUrl",
        "MONGO_URL",
        "mongoose",
        "connect",
        "useNewUrlParser",
        "useUnifiedTopology",
        "Promise",
        "userSchema",
        "Schema",
        "userName",
        "type",
        "String",
        "minlength",
        "maxlength",
        "required",
        "email",
        "unique",
        "password",
        "accessToken",
        "crypto",
        "randomBytes",
        "toString",
        "isAdmin",
        "Boolean",
        "selectedVideos",
        "Types",
        "ObjectId",
        "ref",
        "videoSchema",
        "videoName",
        "description",
        "videoUrl",
        "category",
        "length",
        "Number",
        "likes",
        "min",
        "max",
        "timestamps",
        "use",
        "bodyParser",
        "json",
        "User",
        "model",
        "Video",
        "req",
        "res",
        "next",
        "connection",
        "readyState",
        "status",
        "error",
        "get",
        "send",
        "authenticateUser",
        "header",
        "findOne",
        "user",
        "errorMessage",
        "post",
        "body",
        "console",
        "log",
        "SALT",
        "bcrypt",
        "genSaltSync",
        "hashSync",
        "save",
        "message",
        "userId",
        "_id",
        "errors",
        "compareSync",
        "find",
        "sort",
        "createdAt",
        "limit",
        "exec",
        "videos",
        "params",
        "id",
        "videoById",
        "videosByLength",
        "put",
        "videoId",
        "findById",
        "selectedVideo",
        "updateOne",
        "$push",
        "deleteOne",
        "$pull",
        "favoriteVideos",
        "userFavoritesArray",
        "getCurrentFavoriteVideos",
        "$inc",
        "success",
        "video",
        "savedVideo",
        "listen"
      ],
      "mappings": "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",
      "sourceRoot": "/Users/elizavetaminican/Desktop/projects_main/TECHNIGO/final-project-yoga-studio-backend/",
      "sourcesContent": [
        "import express from \"express\";\nimport bodyParser from \"body-parser\";\nimport cors from \"cors\";\nimport mongoose from \"mongoose\";\nimport endpoints from \"express-list-endpoints\";\nimport crypto from \"crypto\";\nimport bcrypt from \"bcrypt\";\nimport { StringDecoder } from \"string_decoder\";\n// Defines the port the app will run on.\n\nconst port = process.env.PORT || 8080;\nconst app = express();\n\n// error messages\nconst ERR_CANNOT_SAVE_TO_DATABASE = \"Could not save video to the Database\";\nconst ERR_CANNOT_FIND_VIDEO_BY_ID = \"Could not find video by id provided\";\n\nconst mongoUrl = process.env.MONGO_URL || \"mongodb://localhost/yogaStudio\";\nmongoose.connect(mongoUrl, { useNewUrlParser: true, useUnifiedTopology: true });\nmongoose.Promise = Promise;\n\n//user schema for sign in and sugn up with relation to video schema to store user's favourite videos\nconst userSchema = new mongoose.Schema({\n  userName: {\n    type: String,\n    minlength: 5,\n    maxlength: 20,\n    required: true,\n  },\n  email: {\n    type: String,\n    unique: true,\n  },\n  password: {\n    type: String,\n    minlength: 6,\n    required: true,\n  },\n  accessToken: {\n    type: String,\n    default: () => crypto.randomBytes(128).toString(\"hex\"),\n  },\n  isAdmin: {\n    type: Boolean,\n    default: false,\n  },\n  //reference to the videos, storing them in the array\n  selectedVideos: [{ type: mongoose.Schema.Types.ObjectId, ref: \"Video\" }],\n\n  // selectedVideos: {\n  //   type: Array,\n  // },\n});\n\n//week 18th and date 16th watch\n\nconst videoSchema = new mongoose.Schema(\n  {\n    videoName: {\n      type: String,\n      required: true,\n    },\n    description: {\n      type: String,\n      required: true,\n    },\n    videoUrl: {\n      type: String,\n      required: true,\n    },\n    category: {\n      type: String,\n      required: true,\n      enum: [\"Beginner\", \"Intermediate\", \"Advanced\"],\n    },\n    length: {\n      type: Number,\n      required: true,\n    },\n    //RATING AND LIKES CAN BE ADDED LATER\n    // rating: {\n    //   type: Number,\n    //   enum: [1,2,3,4,5]\n    // },\n\n    likes: {\n      type: Number,\n      default: 0,\n      min: 0,\n      max: 1,\n    },\n\n    //reference to the user\n    //   user: {\n    //     type: mongoose.Schema.Types.ObjectId,\n    //     ref: \"User\",\n    //   },\n  },\n  { timestamps: true }\n);\n\n// Add middlewares to enable cors and json body parsing\napp.use(cors());\napp.use(bodyParser.json());\n\nconst User = mongoose.model(\"User\", userSchema);\nconst Video = mongoose.model(\"Video\", videoSchema);\n\n//Provide error of server\n\napp.use((req, res, next) => {\n  if (mongoose.connection.readyState === 1) {\n    next();\n  } else {\n    res.status(503).json({ error: \"Service unavailable at the moment\" });\n  }\n});\n\n// Start defining routes here\napp.get(\"/\", (req, res) => {\n  res.send(\"Hello world\");\n});\n\n// HERE ARE THE ENDPOINTS FOR SIGN IN / SIGN UP\n\n//this middleware is for user authentification\nconst authenticateUser = async (req, res, next) => {\n  try {\n    const accessToken = req.header(\"Authorization\");\n    const user = await User.findOne({ accessToken });\n    if (!user) {\n      throw \"User not found\";\n    }\n    req.user = user;\n    next();\n  } catch (err) {\n    const errorMessage = \"User not found. Please try logging in again\";\n    res.status(401).json({ error: errorMessage });\n  }\n};\n\n// Sign-up\n\napp.post(\"/users\", async (req, res) => {\n  try {\n    const { userName, email, password } = req.body;\n    console.log(\"!!!\", userName, email, password);\n    const SALT = bcrypt.genSaltSync(10);\n    const user = await new User({\n      userName,\n      email,\n      password: bcrypt.hashSync(password, SALT),\n    }).save();\n    res.status(200).json({\n      message: \"User created!\",\n      userId: user._id,\n      accessToken: user.accessToken,\n      userName: user.userName,\n      email: user.email,\n      password: user.password,\n    });\n  } catch (err) {\n    console.log(\"!!!\", err, \"!!!\");\n    res.status(400).json({ message: \"Could not create user\", errors: err });\n  }\n});\n\n// Login\napp.post(\"/sessions\", async (req, res) => {\n  try {\n    const { email, password } = req.body;\n    console.log(\"!!!\", email, password);\n    const user = await User.findOne({ email });\n    if (user && bcrypt.compareSync(password, user.password)) {\n      res.status(200).json({ userId: user._id, accessToken: user.accessToken });\n    } else {\n      throw \"User not found\";\n    }\n  } catch (err) {\n    res.status(404).json({ error: \"User not found\" });\n  }\n});\n// HERE ARE THE ENDPOINTS TO WORK WITH VIDEO COLLECTION\n\n//get the collection of all videos available to everyone { WORKING }\napp.get(\"/videos\", async (req, res) => {\n  const videos = await Video.find().sort({ createdAt: \"desc\" }).limit(8).exec();\n  res.json(videos);\n});\n\n//top 10 videos\n\n//Route to find one specific video by id { WORKING }\napp.get(\"/videos/:id\", async (req, res) => {\n  const videoById = await Video.findOne({ _id: req.params.id });\n  if (videoById) {\n    res.json(videoById);\n  } else {\n    res.status(404).json({ error: \"Video not found\" });\n  }\n});\n\n//filter videos by length\n\n//filter short videos - 15, 30, 60\napp.get(\"/videos/length/30\", async (req, res) => {\n  const videosByLength = await Video.find({ length: 30 });\n  if (videosByLength) {\n    res.json(videosByLength);\n  } else {\n    res.status(404).json({ error: \"No such video found\" });\n  }\n});\napp.get(\"/videos/length/15\", async (req, res) => {\n  const videosByLength = await Video.find({ length: 15 });\n  if (videosByLength) {\n    res.json(videosByLength);\n  } else {\n    res.status(404).json({ error: \"No such video found\" });\n  }\n});\napp.get(\"/videos/length/20\", async (req, res) => {\n  const videosByLength = await Video.find({ length: 20 });\n  if (videosByLength) {\n    res.json(videosByLength);\n  } else {\n    res.status(404).json({ error: \"No such video found\" });\n  }\n});\n// app.get(\"/videos/duration/:length\", async (req, res) => {\n//   const videoByDuration = req.params.length;\n//   const video = await Video.findAll({\n//     // //length: { $regex:(\"/[[0-9]+]/\") }\n//     length: 20,\n//   });\n//   if (video.length > 0) {\n//     res.json(video);\n//   } else {\n//     res.status(404).json({ error: \"No such video found\" });\n//   }\n// });\n// PUT: endpoint to add favoritevideo for a logged-in user:\n// UPDATES the user and adds the favorite video to the favorite videos-array for that user.\n\napp.put(\"/users/:userId/favorites/:videoId\", authenticateUser);\napp.put(\"/users/:userId/favorites/:videoId\", async (req, res) => {\n  const { userId, videoId } = req.params;\n  try {\n    const selectedVideo = await Video.findById(videoId); // Find the video the user wants to add.\n    console.log(\"selectedVideo\", selectedVideo);\n    await User.updateOne(\n      { _id: userId },\n      { $push: { selectedVideos: selectedVideo } } //push the selected video into the favorite videos array\n    );\n    //console.log(\"\")\n    res.status(200).json(selectedVideo);\n  } catch (err) {\n    res.status(404).json({\n      message: \"Could not add video.\",\n      errors: { message: err.message, error: err },\n    });\n  }\n});\n//delete a video from favourites\napp.delete(\"/users/:userId/favorites/:videoId\", async (req, res) => {\n  const { userId, videoId } = req.params;\n  try {\n    const selectedVideo = await Video.findById(videoId); // Find the video the user wants to add.\n    console.log(\"selectedVideo\", selectedVideo);\n    await User.deleteOne(\n      { _id: userId },\n      { $pull: { selectedVideos: selectedVideo } } //push the selected video into the favorite videos array\n    );\n    //console.log(\"\")\n    res.status(200).json(selectedVideo);\n  } catch (err) {\n    res.status(404).json({\n      message: \"Could not remove video.\",\n      errors: { message: err.message, error: err },\n    });\n  }\n});\n\n\n\napp.get(\"/users/:id/favorites\", async (req, res) => {\n  try {\n    const userId = req.params.id;\n    if (userId != req.user._id) {\n      throw \"Access denied\";\n    }\n    const userFavoritesArray = await req.user.favoriteVideos; //--> shows array of added videos (video-id:s)\n    const getCurrentFavoriteVideos = await Video.find({\n      _id: userFavoritesArray,\n    }); // --> outputs the whole video-object in user favorites!\n    res.status(200).json(getCurrentFavoriteVideos);\n  } catch (err) {\n    res.status(403).json({\n      message:\n        \"Could not get favorite videos. User must be logged in to see favorite videos.\",\n      errors: { message: err.message, error: err },\n    });\n  }\n});\n\n\n//i need to limit likes on and off for ine particulat user to be able to filter videos by total amount of likes\napp.post(\"/videos/:id/like\", async (req, res) => {\n  try {\n    const { id } = req.params;\n    await Video.updateOne({ _id: id }, { $inc: { likes: 1 } });\n    res.status(200).json({ success: true });\n  } catch (err) {\n    res\n      .status(400)\n      .json({ message: ERR_CANNOT_FIND_VIDEO_BY_ID, errors: err.errors });\n  }\n});\n\n//post a video, function available only for admins { WORKING }\napp.post(\"/videos\", async (req, res) => {\n  //Try catch\n  try {\n    //Success case\n    //retrive the information sent by the client to our API endpoint\n    const { videoName, videoUrl, description, length, category } = req.body;\n    const video = new Video({\n      videoName,\n      videoUrl,\n      description,\n      length,\n      category,\n    });\n    const savedVideo = await video.save();\n    res.status(200).json(savedVideo);\n  } catch (err) {\n    //bad request sending the status to the server and the message\n    res\n      .status(400)\n      .json({ message: ERR_CANNOT_SAVE_TO_DATABASE, errors: err.errors });\n  }\n});\n//delete a video function is available only for admin  {WORKING}\napp.delete(\"/videos/:id\", async (req, res) => {\n  try {\n    //try to delete and send a successful response\n    const { id } = req.params;\n    await Video.deleteOne({ _id: id });\n    res.status(200).json({ success: true });\n  } catch (error) {\n    console.log(error);\n    //inform the client about the deletion failure\n    res.status(400).json({ success: false });\n  }\n});\n\n// updating a video endpoint\n// app.patch(\"/videos/:id\", async (req, res) => {\n//   try {\n//     //try to delete and send a successful response\n//     const video = await Video.findByID({ _id: id });\n//     const {\n//       videoName = video.videoName,\n//       videoUrl = video.videoUrl,\n//       description = video.description,\n//       category = video.category,\n//       length = video.length,\n//     } = req.body;\n//     const updateVideo = await Video.findByIdAndUpdate(\n//       { _id: id },\n//       { videoName, videoUrl, description, category, length },\n//       { runValidators: true }\n//     );\n//     return res.status(202).json(updatedVideo);\n//   } catch (error) {\n//     try {\n//       await Video.findById({ _id: id }); // id is matching, the model validation is off\n//       return res\n//         .status(400)\n//         .json({ message: \"Could not update video\", error: err.message });\n//     } catch (err) {\n//       // id is not matching, the validation can be either right or wrong\n//       return res.status(404).json({ message: ERR_CANNOT_FIND_VIDEO_BY_ID, id });\n//     }\n//   }\n// });\n\n// Start the server\napp.listen(port, () => {\n  console.log(`Server running on http://localhost:${port}`);\n});\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1612394568015
  }
}