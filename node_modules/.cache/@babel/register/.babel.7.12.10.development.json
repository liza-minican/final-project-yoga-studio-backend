{
  "{\"sourceRoot\":\"/Users/elizavetaminican/Desktop/projects_main/TECHNIGO/final-project-yoga-studio-backend/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/elizavetaminican/Desktop/projects_main/TECHNIGO/final-project-yoga-studio-backend\",\"filename\":\"/Users/elizavetaminican/Desktop/projects_main/TECHNIGO/final-project-yoga-studio-backend/server.js\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/elizavetaminican/Desktop/projects_main/TECHNIGO/final-project-yoga-studio-backend\",\"plugins\":[{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]},\"BigIntLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.12.10": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/elizavetaminican/Desktop/projects_main/TECHNIGO/final-project-yoga-studio-backend/",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/elizavetaminican/Desktop/projects_main/TECHNIGO/final-project-yoga-studio-backend",
      "filename": "/Users/elizavetaminican/Desktop/projects_main/TECHNIGO/final-project-yoga-studio-backend/server.js",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/elizavetaminican/Desktop/projects_main/TECHNIGO/final-project-yoga-studio-backend",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "BigIntLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "StaticBlock": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/elizavetaminican/Desktop/projects_main/TECHNIGO/final-project-yoga-studio-backend/server.js",
        "plugins": [
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/elizavetaminican/Desktop/projects_main/TECHNIGO/final-project-yoga-studio-backend/server.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/elizavetaminican/Desktop/projects_main/TECHNIGO/final-project-yoga-studio-backend/",
        "sourceFileName": "server.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _express = _interopRequireDefault(require(\"express\"));\n\nvar _bodyParser = _interopRequireDefault(require(\"body-parser\"));\n\nvar _cors = _interopRequireDefault(require(\"cors\"));\n\nvar _mongoose = _interopRequireDefault(require(\"mongoose\"));\n\nvar _expressListEndpoints = _interopRequireDefault(require(\"express-list-endpoints\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\n// Defines the port the app will run on. Defaults to 8080, but can be\n// overridden when starting the server. For example:\n//\n//   PORT=9000 npm start\nvar port = process.env.PORT || 8080;\nvar app = (0, _express[\"default\"])(); // error messages\n\nvar ERR_CANNOT_SAVE_TO_DATABASE = \"Could not save thought to the Database\";\nvar ERR_CANNOT_FIND_VIDEO_BY_ID = \"Could not find video by id provided\"; //planning\n//think about reviews model\n\nvar mongoUrl = process.env.MONGO_URL || \"mongodb://localhost/yogaStudio\";\n\n_mongoose[\"default\"].connect(mongoUrl, {\n  useNewUrlParser: true,\n  useUnifiedTopology: true\n});\n\n_mongoose[\"default\"].Promise = Promise;\nvar userSchema = new _mongoose[\"default\"].Schema({\n  userName: {\n    type: String,\n    minlength: 5,\n    maxlength: 20,\n    unique: true,\n    required: true\n  },\n  email: {\n    type: String,\n    unique: true\n  },\n  password: {\n    type: String,\n    minlength: 6,\n    required: true\n  },\n  accessToken: {\n    type: String,\n    \"default\": function _default() {\n      return crypto.randomBytes(128).toString(\"hex\");\n    }\n  },\n  isAdmin: {\n    type: Boolean,\n    \"default\": false\n  },\n  selectedVideos: {\n    type: Array\n  } //reference\n  //Object ID which id liked which video id\n  //aggreagate mongo\n  //carusel, most favourited\n\n}); //week 18th and date 16th\n\nvar videoSchema = new _mongoose[\"default\"].Schema({\n  videoName: {\n    type: String,\n    required: true\n  },\n  description: {\n    type: String,\n    required: true\n  },\n  videoUrl: {\n    type: String,\n    required: true\n  },\n  // category: {\n  //   type: String,\n  //   required: true,\n  //   enum: [\"Beginner\", \"Intermediate\", \"Advanced\"],\n  // },\n  length: {\n    type: Number,\n    required: true\n  } // rating: {\n  //   type: Number,\n  //   enum: [1,2,3,4,5]\n  // },\n  /// zomato\n  //survey progress bar/stars\n  // createdAt: {\n  //   type: Date,\n  //   default: Date.now,\n  // },\n  // updatedAt: {\n  //   type: Date,\n  //   default: Date.now,\n  // },\n  // likes: {\n  //   type: Number,\n  //   default: 0,\n  // },\n  //reference ?? filled the heart and like unlike\n  //{ timestamps: true }\n\n}); // link: {\n//     type: String,\n//     required: true\n//   }\n// }, { timestamps: true })\n//link  users to collection and then ref in user\n// Add middlewares to enable cors and json body parsing\n\napp.use((0, _cors[\"default\"])());\napp.use(_bodyParser[\"default\"].json());\n\nvar User = _mongoose[\"default\"].model(\"User\", userSchema);\n\nvar Video = _mongoose[\"default\"].model(\"Video\", videoSchema); //Provide error of server\n\n\napp.use(function (req, res, next) {\n  if (_mongoose[\"default\"].connection.readyState === 1) {\n    next();\n  } else {\n    res.status(503).json({\n      error: \"Service unavailable at the moment\"\n    });\n  }\n}); // Start defining your routes here\n\napp.get(\"/\", function (req, res) {\n  res.send(\"Hello world\");\n}); // HERE ARE THE ENDPOINTS TO WORK WITH VIDEO COLLECTION\n//get the collection of all videos available to everyone\n\napp.get(\"/videos\", /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(req, res) {\n    var videos;\n    return regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return Video.find().sort({\n              createdAt: \"desc\"\n            }).limit(8).exec();\n\n          case 2:\n            videos = _context.sent;\n            res.json(videos);\n\n          case 4:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function (_x, _x2) {\n    return _ref.apply(this, arguments);\n  };\n}()); //top 10 videos\n//Route to find one specific video by id\n\napp.get(\"/videos/:id\", /*#__PURE__*/function () {\n  var _ref2 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2(req, res) {\n    var videoById;\n    return regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return Video.findOne({\n              id: req.params.id\n            });\n\n          case 2:\n            videoById = _context2.sent;\n\n            if (videoById) {\n              res.json(videoById);\n            } else {\n              res.status(404).json({\n                error: \"Video not found\"\n              });\n            }\n\n          case 4:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n\n  return function (_x3, _x4) {\n    return _ref2.apply(this, arguments);\n  };\n}()); //filter short videos - 15, 30, 60\n\napp.get(\"/video/short\", /*#__PURE__*/function () {\n  var _ref3 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3(req, res) {\n    var shortVideos;\n    return regeneratorRuntime.wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            _context3.next = 2;\n            return Video.find({\n              length: {\n                $lt: 15\n              }\n            });\n\n          case 2:\n            shortVideos = _context3.sent;\n\n            if (shortVideos.length > 0) {\n              res.json(shortVideos);\n            } else {\n              res.status(404).json({\n                error: \"No such video found\"\n              });\n            }\n\n          case 4:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3);\n  }));\n\n  return function (_x5, _x6) {\n    return _ref3.apply(this, arguments);\n  };\n}()); //filter long videos\n//videos by category yoga type\n//video by level\n//videos available when signed in\n//your favourite videos\n// video liked\n//i need to limit likes on and off for ine particulat user to be able to filter videos by total amount of likes\n\napp.post(\"/videos/:id/liked\", /*#__PURE__*/function () {\n  var _ref4 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee4(req, res) {\n    var id;\n    return regeneratorRuntime.wrap(function _callee4$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            _context4.prev = 0;\n            id = req.params.id;\n            _context4.next = 4;\n            return Video.updateOne({\n              _id: id\n            }, {\n              $inc: {\n                likes: 1\n              }\n            });\n\n          case 4:\n            res.status(200).json({\n              success: true\n            });\n            _context4.next = 10;\n            break;\n\n          case 7:\n            _context4.prev = 7;\n            _context4.t0 = _context4[\"catch\"](0);\n            res.status(400).json({\n              message: ERR_CANNOT_FIND_VIDEO_BY_ID,\n              errors: _context4.t0.errors\n            });\n\n          case 10:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, _callee4, null, [[0, 7]]);\n  }));\n\n  return function (_x7, _x8) {\n    return _ref4.apply(this, arguments);\n  };\n}()); //post a video, function available only for admins\n\napp.post(\"/videos\", /*#__PURE__*/function () {\n  var _ref5 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee5(req, res) {\n    var _req$body, videoName, videoUrl, description, length, category, video, savedVideo;\n\n    return regeneratorRuntime.wrap(function _callee5$(_context5) {\n      while (1) {\n        switch (_context5.prev = _context5.next) {\n          case 0:\n            _context5.prev = 0;\n            //Success case\n            //retrive the information sent by the client to our API endpoint\n            _req$body = req.body, videoName = _req$body.videoName, videoUrl = _req$body.videoUrl, description = _req$body.description, length = _req$body.length, category = _req$body.category;\n            video = new Video({\n              video_name: video_name,\n              video_url: video_url,\n              description: description,\n              duration: duration,\n              category: category\n            });\n            _context5.next = 5;\n            return video.save();\n\n          case 5:\n            savedVideo = _context5.sent;\n            res.status(200).json(savedVideo);\n            _context5.next = 12;\n            break;\n\n          case 9:\n            _context5.prev = 9;\n            _context5.t0 = _context5[\"catch\"](0);\n            //bad request sending the status to the server and the message\n            res.status(400).json({\n              message: ERR_CANNOT_SAVE_TO_DATABASE,\n              errors: _context5.t0.errors\n            });\n\n          case 12:\n          case \"end\":\n            return _context5.stop();\n        }\n      }\n    }, _callee5, null, [[0, 9]]);\n  }));\n\n  return function (_x9, _x10) {\n    return _ref5.apply(this, arguments);\n  };\n}()); //delete a video function is available only for admin\n\napp[\"delete\"](\"/videos/:id\", /*#__PURE__*/function () {\n  var _ref6 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee6(req, res) {\n    var id;\n    return regeneratorRuntime.wrap(function _callee6$(_context6) {\n      while (1) {\n        switch (_context6.prev = _context6.next) {\n          case 0:\n            _context6.prev = 0;\n            //try to delete and send a successful response\n            id = req.params.id;\n            _context6.next = 4;\n            return Video.deleteOne({\n              _id: id\n            });\n\n          case 4:\n            res.status(200).json({\n              success: true\n            });\n            _context6.next = 11;\n            break;\n\n          case 7:\n            _context6.prev = 7;\n            _context6.t0 = _context6[\"catch\"](0);\n            console.log(_context6.t0); //inform the client about the deletion failure\n\n            res.status(400).json({\n              success: false\n            });\n\n          case 11:\n          case \"end\":\n            return _context6.stop();\n        }\n      }\n    }, _callee6, null, [[0, 7]]);\n  }));\n\n  return function (_x11, _x12) {\n    return _ref6.apply(this, arguments);\n  };\n}()); // Start the server\n\napp.listen(port, function () {\n  console.log(\"Server running on http://localhost:\".concat(port));\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNlcnZlci5qcyJdLCJuYW1lcyI6WyJwb3J0IiwicHJvY2VzcyIsImVudiIsIlBPUlQiLCJhcHAiLCJFUlJfQ0FOTk9UX1NBVkVfVE9fREFUQUJBU0UiLCJFUlJfQ0FOTk9UX0ZJTkRfVklERU9fQllfSUQiLCJtb25nb1VybCIsIk1PTkdPX1VSTCIsIm1vbmdvb3NlIiwiY29ubmVjdCIsInVzZU5ld1VybFBhcnNlciIsInVzZVVuaWZpZWRUb3BvbG9neSIsIlByb21pc2UiLCJ1c2VyU2NoZW1hIiwiU2NoZW1hIiwidXNlck5hbWUiLCJ0eXBlIiwiU3RyaW5nIiwibWlubGVuZ3RoIiwibWF4bGVuZ3RoIiwidW5pcXVlIiwicmVxdWlyZWQiLCJlbWFpbCIsInBhc3N3b3JkIiwiYWNjZXNzVG9rZW4iLCJjcnlwdG8iLCJyYW5kb21CeXRlcyIsInRvU3RyaW5nIiwiaXNBZG1pbiIsIkJvb2xlYW4iLCJzZWxlY3RlZFZpZGVvcyIsIkFycmF5IiwidmlkZW9TY2hlbWEiLCJ2aWRlb05hbWUiLCJkZXNjcmlwdGlvbiIsInZpZGVvVXJsIiwibGVuZ3RoIiwiTnVtYmVyIiwidXNlIiwiYm9keVBhcnNlciIsImpzb24iLCJVc2VyIiwibW9kZWwiLCJWaWRlbyIsInJlcSIsInJlcyIsIm5leHQiLCJjb25uZWN0aW9uIiwicmVhZHlTdGF0ZSIsInN0YXR1cyIsImVycm9yIiwiZ2V0Iiwic2VuZCIsImZpbmQiLCJzb3J0IiwiY3JlYXRlZEF0IiwibGltaXQiLCJleGVjIiwidmlkZW9zIiwiZmluZE9uZSIsImlkIiwicGFyYW1zIiwidmlkZW9CeUlkIiwiJGx0Iiwic2hvcnRWaWRlb3MiLCJwb3N0IiwidXBkYXRlT25lIiwiX2lkIiwiJGluYyIsImxpa2VzIiwic3VjY2VzcyIsIm1lc3NhZ2UiLCJlcnJvcnMiLCJib2R5IiwiY2F0ZWdvcnkiLCJ2aWRlbyIsInZpZGVvX25hbWUiLCJ2aWRlb191cmwiLCJkdXJhdGlvbiIsInNhdmUiLCJzYXZlZFZpZGVvIiwiZGVsZXRlT25l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QUFOLENBQWdCO0FBQUVkLGNBQUFBLEdBQUcsRUFBRVA7QUFBUCxhQUFoQixDQUpnQjs7QUFBQTtBQUt0QmYsWUFBQUEsR0FBRyxDQUFDSSxNQUFKLENBQVcsR0FBWCxFQUFnQlQsSUFBaEIsQ0FBcUI7QUFBRThCLGNBQUFBLE9BQU8sRUFBRTtBQUFYLGFBQXJCO0FBTHNCO0FBQUE7O0FBQUE7QUFBQTtBQUFBO0FBT3RCWSxZQUFBQSxPQUFPLENBQUNDLEdBQVIsZUFQc0IsQ0FRdEI7O0FBQ0F0QyxZQUFBQSxHQUFHLENBQUNJLE1BQUosQ0FBVyxHQUFYLEVBQWdCVCxJQUFoQixDQUFxQjtBQUFFOEIsY0FBQUEsT0FBTyxFQUFFO0FBQVgsYUFBckI7O0FBVHNCO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBLEdBQTFCOztBQUFBO0FBQUE7QUFBQTtBQUFBLEssQ0FhQTs7QUFDQW5FLEdBQUcsQ0FBQ2lGLE1BQUosQ0FBV3JGLElBQVgsRUFBaUIsWUFBTTtBQUNyQm1GLEVBQUFBLE9BQU8sQ0FBQ0MsR0FBUiw4Q0FBa0RwRixJQUFsRDtBQUNELENBRkQiLCJzb3VyY2VSb290IjoiL1VzZXJzL2VsaXphdmV0YW1pbmljYW4vRGVza3RvcC9wcm9qZWN0c19tYWluL1RFQ0hOSUdPL2ZpbmFsLXByb2plY3QteW9nYS1zdHVkaW8tYmFja2VuZC8iLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgZXhwcmVzcyBmcm9tIFwiZXhwcmVzc1wiO1xuaW1wb3J0IGJvZHlQYXJzZXIgZnJvbSBcImJvZHktcGFyc2VyXCI7XG5pbXBvcnQgY29ycyBmcm9tIFwiY29yc1wiO1xuaW1wb3J0IG1vbmdvb3NlIGZyb20gXCJtb25nb29zZVwiO1xuaW1wb3J0IGVuZHBvaW50cyBmcm9tIFwiZXhwcmVzcy1saXN0LWVuZHBvaW50c1wiO1xuXG4vLyBEZWZpbmVzIHRoZSBwb3J0IHRoZSBhcHAgd2lsbCBydW4gb24uIERlZmF1bHRzIHRvIDgwODAsIGJ1dCBjYW4gYmVcbi8vIG92ZXJyaWRkZW4gd2hlbiBzdGFydGluZyB0aGUgc2VydmVyLiBGb3IgZXhhbXBsZTpcbi8vXG4vLyAgIFBPUlQ9OTAwMCBucG0gc3RhcnRcbmNvbnN0IHBvcnQgPSBwcm9jZXNzLmVudi5QT1JUIHx8IDgwODA7XG5jb25zdCBhcHAgPSBleHByZXNzKCk7XG5cbi8vIGVycm9yIG1lc3NhZ2VzXG5jb25zdCBFUlJfQ0FOTk9UX1NBVkVfVE9fREFUQUJBU0UgPSBcIkNvdWxkIG5vdCBzYXZlIHRob3VnaHQgdG8gdGhlIERhdGFiYXNlXCI7XG5jb25zdCBFUlJfQ0FOTk9UX0ZJTkRfVklERU9fQllfSUQgPSBcIkNvdWxkIG5vdCBmaW5kIHZpZGVvIGJ5IGlkIHByb3ZpZGVkXCI7XG5cbi8vcGxhbm5pbmdcbi8vdGhpbmsgYWJvdXQgcmV2aWV3cyBtb2RlbFxuXG5jb25zdCBtb25nb1VybCA9IHByb2Nlc3MuZW52Lk1PTkdPX1VSTCB8fCBcIm1vbmdvZGI6Ly9sb2NhbGhvc3QveW9nYVN0dWRpb1wiO1xubW9uZ29vc2UuY29ubmVjdChtb25nb1VybCwgeyB1c2VOZXdVcmxQYXJzZXI6IHRydWUsIHVzZVVuaWZpZWRUb3BvbG9neTogdHJ1ZSB9KTtcbm1vbmdvb3NlLlByb21pc2UgPSBQcm9taXNlO1xuXG5jb25zdCB1c2VyU2NoZW1hID0gbmV3IG1vbmdvb3NlLlNjaGVtYSh7XG4gIHVzZXJOYW1lOiB7XG4gICAgdHlwZTogU3RyaW5nLFxuICAgIG1pbmxlbmd0aDogNSxcbiAgICBtYXhsZW5ndGg6IDIwLFxuICAgIHVuaXF1ZTogdHJ1ZSxcbiAgICByZXF1aXJlZDogdHJ1ZSxcbiAgfSxcbiAgZW1haWw6IHtcbiAgICB0eXBlOiBTdHJpbmcsXG4gICAgdW5pcXVlOiB0cnVlLFxuICB9LFxuICBwYXNzd29yZDoge1xuICAgIHR5cGU6IFN0cmluZyxcbiAgICBtaW5sZW5ndGg6IDYsXG4gICAgcmVxdWlyZWQ6IHRydWUsXG4gIH0sXG4gIGFjY2Vzc1Rva2VuOiB7XG4gICAgdHlwZTogU3RyaW5nLFxuICAgIGRlZmF1bHQ6ICgpID0+IGNyeXB0by5yYW5kb21CeXRlcygxMjgpLnRvU3RyaW5nKFwiaGV4XCIpLFxuICB9LFxuICBpc0FkbWluOiB7XG4gICAgdHlwZTogQm9vbGVhbixcbiAgICBkZWZhdWx0OiBmYWxzZSxcbiAgfSxcbiAgc2VsZWN0ZWRWaWRlb3M6IHtcbiAgICB0eXBlOiBBcnJheSxcbiAgfSxcblxuICAvL3JlZmVyZW5jZVxuICAvL09iamVjdCBJRCB3aGljaCBpZCBsaWtlZCB3aGljaCB2aWRlbyBpZFxuICAvL2FnZ3JlYWdhdGUgbW9uZ29cbiAgLy9jYXJ1c2VsLCBtb3N0IGZhdm91cml0ZWRcbn0pO1xuXG4vL3dlZWsgMTh0aCBhbmQgZGF0ZSAxNnRoXG5cbmNvbnN0IHZpZGVvU2NoZW1hID0gbmV3IG1vbmdvb3NlLlNjaGVtYSh7XG4gIHZpZGVvTmFtZToge1xuICAgIHR5cGU6IFN0cmluZyxcbiAgICByZXF1aXJlZDogdHJ1ZSxcbiAgfSxcbiAgZGVzY3JpcHRpb246IHtcbiAgICB0eXBlOiBTdHJpbmcsXG4gICAgcmVxdWlyZWQ6IHRydWUsXG4gIH0sXG4gIHZpZGVvVXJsOiB7XG4gICAgdHlwZTogU3RyaW5nLFxuICAgIHJlcXVpcmVkOiB0cnVlLFxuICB9LFxuICAvLyBjYXRlZ29yeToge1xuICAvLyAgIHR5cGU6IFN0cmluZyxcbiAgLy8gICByZXF1aXJlZDogdHJ1ZSxcbiAgLy8gICBlbnVtOiBbXCJCZWdpbm5lclwiLCBcIkludGVybWVkaWF0ZVwiLCBcIkFkdmFuY2VkXCJdLFxuICAvLyB9LFxuICBsZW5ndGg6IHtcbiAgICB0eXBlOiBOdW1iZXIsXG4gICAgcmVxdWlyZWQ6IHRydWUsXG4gIH0sXG4gIC8vIHJhdGluZzoge1xuICAvLyAgIHR5cGU6IE51bWJlcixcbiAgLy8gICBlbnVtOiBbMSwyLDMsNCw1XVxuICAvLyB9LFxuICAvLy8gem9tYXRvXG4gIC8vc3VydmV5IHByb2dyZXNzIGJhci9zdGFyc1xuXG4gIC8vIGNyZWF0ZWRBdDoge1xuICAvLyAgIHR5cGU6IERhdGUsXG4gIC8vICAgZGVmYXVsdDogRGF0ZS5ub3csXG4gIC8vIH0sXG4gIC8vIHVwZGF0ZWRBdDoge1xuICAvLyAgIHR5cGU6IERhdGUsXG4gIC8vICAgZGVmYXVsdDogRGF0ZS5ub3csXG4gIC8vIH0sXG4gIC8vIGxpa2VzOiB7XG4gIC8vICAgdHlwZTogTnVtYmVyLFxuICAvLyAgIGRlZmF1bHQ6IDAsXG4gIC8vIH0sXG4gIC8vcmVmZXJlbmNlID8/IGZpbGxlZCB0aGUgaGVhcnQgYW5kIGxpa2UgdW5saWtlXG4gIC8veyB0aW1lc3RhbXBzOiB0cnVlIH1cbn0pO1xuXG4vLyBsaW5rOiB7XG4vLyAgICAgdHlwZTogU3RyaW5nLFxuLy8gICAgIHJlcXVpcmVkOiB0cnVlXG4vLyAgIH1cbi8vIH0sIHsgdGltZXN0YW1wczogdHJ1ZSB9KVxuLy9saW5rICB1c2VycyB0byBjb2xsZWN0aW9uIGFuZCB0aGVuIHJlZiBpbiB1c2VyXG5cbi8vIEFkZCBtaWRkbGV3YXJlcyB0byBlbmFibGUgY29ycyBhbmQganNvbiBib2R5IHBhcnNpbmdcbmFwcC51c2UoY29ycygpKTtcbmFwcC51c2UoYm9keVBhcnNlci5qc29uKCkpO1xuXG5jb25zdCBVc2VyID0gbW9uZ29vc2UubW9kZWwoXCJVc2VyXCIsIHVzZXJTY2hlbWEpO1xuY29uc3QgVmlkZW8gPSBtb25nb29zZS5tb2RlbChcIlZpZGVvXCIsIHZpZGVvU2NoZW1hKTtcblxuLy9Qcm92aWRlIGVycm9yIG9mIHNlcnZlclxuXG5hcHAudXNlKChyZXEsIHJlcywgbmV4dCkgPT4ge1xuICBpZiAobW9uZ29vc2UuY29ubmVjdGlvbi5yZWFkeVN0YXRlID09PSAxKSB7XG4gICAgbmV4dCgpO1xuICB9IGVsc2Uge1xuICAgIHJlcy5zdGF0dXMoNTAzKS5qc29uKHsgZXJyb3I6IFwiU2VydmljZSB1bmF2YWlsYWJsZSBhdCB0aGUgbW9tZW50XCIgfSk7XG4gIH1cbn0pO1xuXG4vLyBTdGFydCBkZWZpbmluZyB5b3VyIHJvdXRlcyBoZXJlXG5hcHAuZ2V0KFwiL1wiLCAocmVxLCByZXMpID0+IHtcbiAgcmVzLnNlbmQoXCJIZWxsbyB3b3JsZFwiKTtcbn0pO1xuXG4vLyBIRVJFIEFSRSBUSEUgRU5EUE9JTlRTIFRPIFdPUksgV0lUSCBWSURFTyBDT0xMRUNUSU9OXG5cbi8vZ2V0IHRoZSBjb2xsZWN0aW9uIG9mIGFsbCB2aWRlb3MgYXZhaWxhYmxlIHRvIGV2ZXJ5b25lXG5hcHAuZ2V0KFwiL3ZpZGVvc1wiLCBhc3luYyAocmVxLCByZXMpID0+IHtcbiAgY29uc3QgdmlkZW9zID0gYXdhaXQgVmlkZW8uZmluZCgpLnNvcnQoeyBjcmVhdGVkQXQ6IFwiZGVzY1wiIH0pLmxpbWl0KDgpLmV4ZWMoKTtcbiAgcmVzLmpzb24odmlkZW9zKTtcbn0pO1xuXG4vL3RvcCAxMCB2aWRlb3NcblxuLy9Sb3V0ZSB0byBmaW5kIG9uZSBzcGVjaWZpYyB2aWRlbyBieSBpZFxuYXBwLmdldChcIi92aWRlb3MvOmlkXCIsIGFzeW5jIChyZXEsIHJlcykgPT4ge1xuICBjb25zdCB2aWRlb0J5SWQgPSBhd2FpdCBWaWRlby5maW5kT25lKHsgaWQ6IHJlcS5wYXJhbXMuaWQgfSk7XG4gIGlmICh2aWRlb0J5SWQpIHtcbiAgICByZXMuanNvbih2aWRlb0J5SWQpO1xuICB9IGVsc2Uge1xuICAgIHJlcy5zdGF0dXMoNDA0KS5qc29uKHsgZXJyb3I6IFwiVmlkZW8gbm90IGZvdW5kXCIgfSk7XG4gIH1cbn0pO1xuXG4vL2ZpbHRlciBzaG9ydCB2aWRlb3MgLSAxNSwgMzAsIDYwXG5hcHAuZ2V0KFwiL3ZpZGVvL3Nob3J0XCIsIGFzeW5jIChyZXEsIHJlcykgPT4ge1xuICBjb25zdCBzaG9ydFZpZGVvcyA9IGF3YWl0IFZpZGVvLmZpbmQoeyBsZW5ndGg6IHsgJGx0OiAxNSB9IH0pO1xuICBpZiAoc2hvcnRWaWRlb3MubGVuZ3RoID4gMCkge1xuICAgIHJlcy5qc29uKHNob3J0VmlkZW9zKTtcbiAgfSBlbHNlIHtcbiAgICByZXMuc3RhdHVzKDQwNCkuanNvbih7IGVycm9yOiBcIk5vIHN1Y2ggdmlkZW8gZm91bmRcIiB9KTtcbiAgfVxufSk7XG4vL2ZpbHRlciBsb25nIHZpZGVvc1xuXG4vL3ZpZGVvcyBieSBjYXRlZ29yeSB5b2dhIHR5cGVcblxuLy92aWRlbyBieSBsZXZlbFxuXG4vL3ZpZGVvcyBhdmFpbGFibGUgd2hlbiBzaWduZWQgaW5cbi8veW91ciBmYXZvdXJpdGUgdmlkZW9zXG5cbi8vIHZpZGVvIGxpa2VkXG4vL2kgbmVlZCB0byBsaW1pdCBsaWtlcyBvbiBhbmQgb2ZmIGZvciBpbmUgcGFydGljdWxhdCB1c2VyIHRvIGJlIGFibGUgdG8gZmlsdGVyIHZpZGVvcyBieSB0b3RhbCBhbW91bnQgb2YgbGlrZXNcbmFwcC5wb3N0KFwiL3ZpZGVvcy86aWQvbGlrZWRcIiwgYXN5bmMgKHJlcSwgcmVzKSA9PiB7XG4gIHRyeSB7XG4gICAgY29uc3QgeyBpZCB9ID0gcmVxLnBhcmFtcztcbiAgICBhd2FpdCBWaWRlby51cGRhdGVPbmUoeyBfaWQ6IGlkIH0sIHsgJGluYzogeyBsaWtlczogMSB9IH0pO1xuICAgIHJlcy5zdGF0dXMoMjAwKS5qc29uKHsgc3VjY2VzczogdHJ1ZSB9KTtcbiAgfSBjYXRjaCAoZXJyKSB7XG4gICAgcmVzXG4gICAgICAuc3RhdHVzKDQwMClcbiAgICAgIC5qc29uKHsgbWVzc2FnZTogRVJSX0NBTk5PVF9GSU5EX1ZJREVPX0JZX0lELCBlcnJvcnM6IGVyci5lcnJvcnMgfSk7XG4gIH1cbn0pO1xuXG4vL3Bvc3QgYSB2aWRlbywgZnVuY3Rpb24gYXZhaWxhYmxlIG9ubHkgZm9yIGFkbWluc1xuYXBwLnBvc3QoXCIvdmlkZW9zXCIsIGFzeW5jIChyZXEsIHJlcykgPT4ge1xuICAvL1RyeSBjYXRjaFxuICB0cnkge1xuICAgIC8vU3VjY2VzcyBjYXNlXG4gICAgLy9yZXRyaXZlIHRoZSBpbmZvcm1hdGlvbiBzZW50IGJ5IHRoZSBjbGllbnQgdG8gb3VyIEFQSSBlbmRwb2ludFxuICAgIGNvbnN0IHsgdmlkZW9OYW1lLCB2aWRlb1VybCwgZGVzY3JpcHRpb24sIGxlbmd0aCwgY2F0ZWdvcnkgfSA9IHJlcS5ib2R5O1xuICAgIGNvbnN0IHZpZGVvID0gbmV3IFZpZGVvKHtcbiAgICAgIHZpZGVvX25hbWUsXG4gICAgICB2aWRlb191cmwsXG4gICAgICBkZXNjcmlwdGlvbixcbiAgICAgIGR1cmF0aW9uLFxuICAgICAgY2F0ZWdvcnksXG4gICAgfSk7XG4gICAgY29uc3Qgc2F2ZWRWaWRlbyA9IGF3YWl0IHZpZGVvLnNhdmUoKTtcbiAgICByZXMuc3RhdHVzKDIwMCkuanNvbihzYXZlZFZpZGVvKTtcbiAgfSBjYXRjaCAoZXJyKSB7XG4gICAgLy9iYWQgcmVxdWVzdCBzZW5kaW5nIHRoZSBzdGF0dXMgdG8gdGhlIHNlcnZlciBhbmQgdGhlIG1lc3NhZ2VcbiAgICByZXNcbiAgICAgIC5zdGF0dXMoNDAwKVxuICAgICAgLmpzb24oeyBtZXNzYWdlOiBFUlJfQ0FOTk9UX1NBVkVfVE9fREFUQUJBU0UsIGVycm9yczogZXJyLmVycm9ycyB9KTtcbiAgfVxufSk7XG4vL2RlbGV0ZSBhIHZpZGVvIGZ1bmN0aW9uIGlzIGF2YWlsYWJsZSBvbmx5IGZvciBhZG1pblxuYXBwLmRlbGV0ZShcIi92aWRlb3MvOmlkXCIsIGFzeW5jIChyZXEsIHJlcykgPT4ge1xuICB0cnkge1xuICAgIC8vdHJ5IHRvIGRlbGV0ZSBhbmQgc2VuZCBhIHN1Y2Nlc3NmdWwgcmVzcG9uc2VcbiAgICBjb25zdCB7IGlkIH0gPSByZXEucGFyYW1zO1xuICAgIGF3YWl0IFZpZGVvLmRlbGV0ZU9uZSh7IF9pZDogaWQgfSk7XG4gICAgcmVzLnN0YXR1cygyMDApLmpzb24oeyBzdWNjZXNzOiB0cnVlIH0pO1xuICB9IGNhdGNoIChlcnJvcikge1xuICAgIGNvbnNvbGUubG9nKGVycm9yKTtcbiAgICAvL2luZm9ybSB0aGUgY2xpZW50IGFib3V0IHRoZSBkZWxldGlvbiBmYWlsdXJlXG4gICAgcmVzLnN0YXR1cyg0MDApLmpzb24oeyBzdWNjZXNzOiBmYWxzZSB9KTtcbiAgfVxufSk7XG5cbi8vIFN0YXJ0IHRoZSBzZXJ2ZXJcbmFwcC5saXN0ZW4ocG9ydCwgKCkgPT4ge1xuICBjb25zb2xlLmxvZyhgU2VydmVyIHJ1bm5pbmcgb24gaHR0cDovL2xvY2FsaG9zdDoke3BvcnR9YCk7XG59KTtcbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "server.js"
      ],
      "names": [
        "port",
        "process",
        "env",
        "PORT",
        "app",
        "ERR_CANNOT_SAVE_TO_DATABASE",
        "ERR_CANNOT_FIND_VIDEO_BY_ID",
        "mongoUrl",
        "MONGO_URL",
        "mongoose",
        "connect",
        "useNewUrlParser",
        "useUnifiedTopology",
        "Promise",
        "userSchema",
        "Schema",
        "userName",
        "type",
        "String",
        "minlength",
        "maxlength",
        "unique",
        "required",
        "email",
        "password",
        "accessToken",
        "crypto",
        "randomBytes",
        "toString",
        "isAdmin",
        "Boolean",
        "selectedVideos",
        "Array",
        "videoSchema",
        "videoName",
        "description",
        "videoUrl",
        "length",
        "Number",
        "use",
        "bodyParser",
        "json",
        "User",
        "model",
        "Video",
        "req",
        "res",
        "next",
        "connection",
        "readyState",
        "status",
        "error",
        "get",
        "send",
        "find",
        "sort",
        "createdAt",
        "limit",
        "exec",
        "videos",
        "findOne",
        "id",
        "params",
        "videoById",
        "$lt",
        "shortVideos",
        "post",
        "updateOne",
        "_id",
        "$inc",
        "likes",
        "success",
        "message",
        "errors",
        "body",
        "category",
        "video",
        "video_name",
        "video_url",
        "duration",
        "save",
        "savedVideo",
        "deleteOne",
        "console",
        "log",
        "listen"
      ],
      "mappings": ";;AAAA;;AACA;;AACA;;AACA;;AACA;;;;;;;;AAEA;AACA;AACA;AACA;AACA,IAAMA,IAAI,GAAGC,OAAO,CAACC,GAAR,CAAYC,IAAZ,IAAoB,IAAjC;AACA,IAAMC,GAAG,GAAG,0BAAZ,C,CAEA;;AACA,IAAMC,2BAA2B,GAAG,wCAApC;AACA,IAAMC,2BAA2B,GAAG,qCAApC,C,CAEA;AACA;;AAEA,IAAMC,QAAQ,GAAGN,OAAO,CAACC,GAAR,CAAYM,SAAZ,IAAyB,gCAA1C;;AACAC,qBAASC,OAAT,CAAiBH,QAAjB,EAA2B;AAAEI,EAAAA,eAAe,EAAE,IAAnB;AAAyBC,EAAAA,kBAAkB,EAAE;AAA7C,CAA3B;;AACAH,qBAASI,OAAT,GAAmBA,OAAnB;AAEA,IAAMC,UAAU,GAAG,IAAIL,qBAASM,MAAb,CAAoB;AACrCC,EAAAA,QAAQ,EAAE;AACRC,IAAAA,IAAI,EAAEC,MADE;AAERC,IAAAA,SAAS,EAAE,CAFH;AAGRC,IAAAA,SAAS,EAAE,EAHH;AAIRC,IAAAA,MAAM,EAAE,IAJA;AAKRC,IAAAA,QAAQ,EAAE;AALF,GAD2B;AAQrCC,EAAAA,KAAK,EAAE;AACLN,IAAAA,IAAI,EAAEC,MADD;AAELG,IAAAA,MAAM,EAAE;AAFH,GAR8B;AAYrCG,EAAAA,QAAQ,EAAE;AACRP,IAAAA,IAAI,EAAEC,MADE;AAERC,IAAAA,SAAS,EAAE,CAFH;AAGRG,IAAAA,QAAQ,EAAE;AAHF,GAZ2B;AAiBrCG,EAAAA,WAAW,EAAE;AACXR,IAAAA,IAAI,EAAEC,MADK;AAEX,eAAS;AAAA,aAAMQ,MAAM,CAACC,WAAP,CAAmB,GAAnB,EAAwBC,QAAxB,CAAiC,KAAjC,CAAN;AAAA;AAFE,GAjBwB;AAqBrCC,EAAAA,OAAO,EAAE;AACPZ,IAAAA,IAAI,EAAEa,OADC;AAEP,eAAS;AAFF,GArB4B;AAyBrCC,EAAAA,cAAc,EAAE;AACdd,IAAAA,IAAI,EAAEe;AADQ,GAzBqB,CA6BrC;AACA;AACA;AACA;;AAhCqC,CAApB,CAAnB,C,CAmCA;;AAEA,IAAMC,WAAW,GAAG,IAAIxB,qBAASM,MAAb,CAAoB;AACtCmB,EAAAA,SAAS,EAAE;AACTjB,IAAAA,IAAI,EAAEC,MADG;AAETI,IAAAA,QAAQ,EAAE;AAFD,GAD2B;AAKtCa,EAAAA,WAAW,EAAE;AACXlB,IAAAA,IAAI,EAAEC,MADK;AAEXI,IAAAA,QAAQ,EAAE;AAFC,GALyB;AAStCc,EAAAA,QAAQ,EAAE;AACRnB,IAAAA,IAAI,EAAEC,MADE;AAERI,IAAAA,QAAQ,EAAE;AAFF,GAT4B;AAatC;AACA;AACA;AACA;AACA;AACAe,EAAAA,MAAM,EAAE;AACNpB,IAAAA,IAAI,EAAEqB,MADA;AAENhB,IAAAA,QAAQ,EAAE;AAFJ,GAlB8B,CAsBtC;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AA1CsC,CAApB,CAApB,C,CA6CA;AACA;AACA;AACA;AACA;AACA;AAEA;;AACAlB,GAAG,CAACmC,GAAJ,CAAQ,uBAAR;AACAnC,GAAG,CAACmC,GAAJ,CAAQC,uBAAWC,IAAX,EAAR;;AAEA,IAAMC,IAAI,GAAGjC,qBAASkC,KAAT,CAAe,MAAf,EAAuB7B,UAAvB,CAAb;;AACA,IAAM8B,KAAK,GAAGnC,qBAASkC,KAAT,CAAe,OAAf,EAAwBV,WAAxB,CAAd,C,CAEA;;;AAEA7B,GAAG,CAACmC,GAAJ,CAAQ,UAACM,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAoB;AAC1B,MAAItC,qBAASuC,UAAT,CAAoBC,UAApB,KAAmC,CAAvC,EAA0C;AACxCF,IAAAA,IAAI;AACL,GAFD,MAEO;AACLD,IAAAA,GAAG,CAACI,MAAJ,CAAW,GAAX,EAAgBT,IAAhB,CAAqB;AAAEU,MAAAA,KAAK,EAAE;AAAT,KAArB;AACD;AACF,CAND,E,CAQA;;AACA/C,GAAG,CAACgD,GAAJ,CAAQ,GAAR,EAAa,UAACP,GAAD,EAAMC,GAAN,EAAc;AACzBA,EAAAA,GAAG,CAACO,IAAJ,CAAS,aAAT;AACD,CAFD,E,CAIA;AAEA;;AACAjD,GAAG,CAACgD,GAAJ,CAAQ,SAAR;AAAA,qEAAmB,iBAAOP,GAAP,EAAYC,GAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACIF,KAAK,CAACU,IAAN,GAAaC,IAAb,CAAkB;AAAEC,cAAAA,SAAS,EAAE;AAAb,aAAlB,EAAyCC,KAAzC,CAA+C,CAA/C,EAAkDC,IAAlD,EADJ;;AAAA;AACXC,YAAAA,MADW;AAEjBb,YAAAA,GAAG,CAACL,IAAJ,CAASkB,MAAT;;AAFiB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAnB;;AAAA;AAAA;AAAA;AAAA,K,CAKA;AAEA;;AACAvD,GAAG,CAACgD,GAAJ,CAAQ,aAAR;AAAA,sEAAuB,kBAAOP,GAAP,EAAYC,GAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACGF,KAAK,CAACgB,OAAN,CAAc;AAAEC,cAAAA,EAAE,EAAEhB,GAAG,CAACiB,MAAJ,CAAWD;AAAjB,aAAd,CADH;;AAAA;AACfE,YAAAA,SADe;;AAErB,gBAAIA,SAAJ,EAAe;AACbjB,cAAAA,GAAG,CAACL,IAAJ,CAASsB,SAAT;AACD,aAFD,MAEO;AACLjB,cAAAA,GAAG,CAACI,MAAJ,CAAW,GAAX,EAAgBT,IAAhB,CAAqB;AAAEU,gBAAAA,KAAK,EAAE;AAAT,eAArB;AACD;;AANoB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAvB;;AAAA;AAAA;AAAA;AAAA,K,CASA;;AACA/C,GAAG,CAACgD,GAAJ,CAAQ,cAAR;AAAA,sEAAwB,kBAAOP,GAAP,EAAYC,GAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACIF,KAAK,CAACU,IAAN,CAAW;AAAEjB,cAAAA,MAAM,EAAE;AAAE2B,gBAAAA,GAAG,EAAE;AAAP;AAAV,aAAX,CADJ;;AAAA;AAChBC,YAAAA,WADgB;;AAEtB,gBAAIA,WAAW,CAAC5B,MAAZ,GAAqB,CAAzB,EAA4B;AAC1BS,cAAAA,GAAG,CAACL,IAAJ,CAASwB,WAAT;AACD,aAFD,MAEO;AACLnB,cAAAA,GAAG,CAACI,MAAJ,CAAW,GAAX,EAAgBT,IAAhB,CAAqB;AAAEU,gBAAAA,KAAK,EAAE;AAAT,eAArB;AACD;;AANqB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAxB;;AAAA;AAAA;AAAA;AAAA,K,CAQA;AAEA;AAEA;AAEA;AACA;AAEA;AACA;;AACA/C,GAAG,CAAC8D,IAAJ,CAAS,mBAAT;AAAA,sEAA8B,kBAAOrB,GAAP,EAAYC,GAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAElBe,YAAAA,EAFkB,GAEXhB,GAAG,CAACiB,MAFO,CAElBD,EAFkB;AAAA;AAAA,mBAGpBjB,KAAK,CAACuB,SAAN,CAAgB;AAAEC,cAAAA,GAAG,EAAEP;AAAP,aAAhB,EAA6B;AAAEQ,cAAAA,IAAI,EAAE;AAAEC,gBAAAA,KAAK,EAAE;AAAT;AAAR,aAA7B,CAHoB;;AAAA;AAI1BxB,YAAAA,GAAG,CAACI,MAAJ,CAAW,GAAX,EAAgBT,IAAhB,CAAqB;AAAE8B,cAAAA,OAAO,EAAE;AAAX,aAArB;AAJ0B;AAAA;;AAAA;AAAA;AAAA;AAM1BzB,YAAAA,GAAG,CACAI,MADH,CACU,GADV,EAEGT,IAFH,CAEQ;AAAE+B,cAAAA,OAAO,EAAElE,2BAAX;AAAwCmE,cAAAA,MAAM,EAAE,aAAIA;AAApD,aAFR;;AAN0B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAA9B;;AAAA;AAAA;AAAA;AAAA,K,CAYA;;AACArE,GAAG,CAAC8D,IAAJ,CAAS,SAAT;AAAA,sEAAoB,kBAAOrB,GAAP,EAAYC,GAAZ;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAGhB;AACA;AAJgB,wBAK+CD,GAAG,CAAC6B,IALnD,EAKRxC,SALQ,aAKRA,SALQ,EAKGE,QALH,aAKGA,QALH,EAKaD,WALb,aAKaA,WALb,EAK0BE,MAL1B,aAK0BA,MAL1B,EAKkCsC,QALlC,aAKkCA,QALlC;AAMVC,YAAAA,KANU,GAMF,IAAIhC,KAAJ,CAAU;AACtBiC,cAAAA,UAAU,EAAVA,UADsB;AAEtBC,cAAAA,SAAS,EAATA,SAFsB;AAGtB3C,cAAAA,WAAW,EAAXA,WAHsB;AAItB4C,cAAAA,QAAQ,EAARA,QAJsB;AAKtBJ,cAAAA,QAAQ,EAARA;AALsB,aAAV,CANE;AAAA;AAAA,mBAaSC,KAAK,CAACI,IAAN,EAbT;;AAAA;AAaVC,YAAAA,UAbU;AAchBnC,YAAAA,GAAG,CAACI,MAAJ,CAAW,GAAX,EAAgBT,IAAhB,CAAqBwC,UAArB;AAdgB;AAAA;;AAAA;AAAA;AAAA;AAgBhB;AACAnC,YAAAA,GAAG,CACAI,MADH,CACU,GADV,EAEGT,IAFH,CAEQ;AAAE+B,cAAAA,OAAO,EAAEnE,2BAAX;AAAwCoE,cAAAA,MAAM,EAAE,aAAIA;AAApD,aAFR;;AAjBgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAApB;;AAAA;AAAA;AAAA;AAAA,K,CAsBA;;AACArE,GAAG,UAAH,CAAW,aAAX;AAAA,sEAA0B,kBAAOyC,GAAP,EAAYC,GAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEtB;AACQe,YAAAA,EAHc,GAGPhB,GAAG,CAACiB,MAHG,CAGdD,EAHc;AAAA;AAAA,mBAIhBjB,KAAK,CAACsC,SAAN,CAAgB;AAAEd,cAAAA,GAAG,EAAEP;AAAP,aAAhB,CAJgB;;AAAA;AAKtBf,YAAAA,GAAG,CAACI,MAAJ,CAAW,GAAX,EAAgBT,IAAhB,CAAqB;AAAE8B,cAAAA,OAAO,EAAE;AAAX,aAArB;AALsB;AAAA;;AAAA;AAAA;AAAA;AAOtBY,YAAAA,OAAO,CAACC,GAAR,eAPsB,CAQtB;;AACAtC,YAAAA,GAAG,CAACI,MAAJ,CAAW,GAAX,EAAgBT,IAAhB,CAAqB;AAAE8B,cAAAA,OAAO,EAAE;AAAX,aAArB;;AATsB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAA1B;;AAAA;AAAA;AAAA;AAAA,K,CAaA;;AACAnE,GAAG,CAACiF,MAAJ,CAAWrF,IAAX,EAAiB,YAAM;AACrBmF,EAAAA,OAAO,CAACC,GAAR,8CAAkDpF,IAAlD;AACD,CAFD",
      "sourceRoot": "/Users/elizavetaminican/Desktop/projects_main/TECHNIGO/final-project-yoga-studio-backend/",
      "sourcesContent": [
        "import express from \"express\";\nimport bodyParser from \"body-parser\";\nimport cors from \"cors\";\nimport mongoose from \"mongoose\";\nimport endpoints from \"express-list-endpoints\";\n\n// Defines the port the app will run on. Defaults to 8080, but can be\n// overridden when starting the server. For example:\n//\n//   PORT=9000 npm start\nconst port = process.env.PORT || 8080;\nconst app = express();\n\n// error messages\nconst ERR_CANNOT_SAVE_TO_DATABASE = \"Could not save thought to the Database\";\nconst ERR_CANNOT_FIND_VIDEO_BY_ID = \"Could not find video by id provided\";\n\n//planning\n//think about reviews model\n\nconst mongoUrl = process.env.MONGO_URL || \"mongodb://localhost/yogaStudio\";\nmongoose.connect(mongoUrl, { useNewUrlParser: true, useUnifiedTopology: true });\nmongoose.Promise = Promise;\n\nconst userSchema = new mongoose.Schema({\n  userName: {\n    type: String,\n    minlength: 5,\n    maxlength: 20,\n    unique: true,\n    required: true,\n  },\n  email: {\n    type: String,\n    unique: true,\n  },\n  password: {\n    type: String,\n    minlength: 6,\n    required: true,\n  },\n  accessToken: {\n    type: String,\n    default: () => crypto.randomBytes(128).toString(\"hex\"),\n  },\n  isAdmin: {\n    type: Boolean,\n    default: false,\n  },\n  selectedVideos: {\n    type: Array,\n  },\n\n  //reference\n  //Object ID which id liked which video id\n  //aggreagate mongo\n  //carusel, most favourited\n});\n\n//week 18th and date 16th\n\nconst videoSchema = new mongoose.Schema({\n  videoName: {\n    type: String,\n    required: true,\n  },\n  description: {\n    type: String,\n    required: true,\n  },\n  videoUrl: {\n    type: String,\n    required: true,\n  },\n  // category: {\n  //   type: String,\n  //   required: true,\n  //   enum: [\"Beginner\", \"Intermediate\", \"Advanced\"],\n  // },\n  length: {\n    type: Number,\n    required: true,\n  },\n  // rating: {\n  //   type: Number,\n  //   enum: [1,2,3,4,5]\n  // },\n  /// zomato\n  //survey progress bar/stars\n\n  // createdAt: {\n  //   type: Date,\n  //   default: Date.now,\n  // },\n  // updatedAt: {\n  //   type: Date,\n  //   default: Date.now,\n  // },\n  // likes: {\n  //   type: Number,\n  //   default: 0,\n  // },\n  //reference ?? filled the heart and like unlike\n  //{ timestamps: true }\n});\n\n// link: {\n//     type: String,\n//     required: true\n//   }\n// }, { timestamps: true })\n//link  users to collection and then ref in user\n\n// Add middlewares to enable cors and json body parsing\napp.use(cors());\napp.use(bodyParser.json());\n\nconst User = mongoose.model(\"User\", userSchema);\nconst Video = mongoose.model(\"Video\", videoSchema);\n\n//Provide error of server\n\napp.use((req, res, next) => {\n  if (mongoose.connection.readyState === 1) {\n    next();\n  } else {\n    res.status(503).json({ error: \"Service unavailable at the moment\" });\n  }\n});\n\n// Start defining your routes here\napp.get(\"/\", (req, res) => {\n  res.send(\"Hello world\");\n});\n\n// HERE ARE THE ENDPOINTS TO WORK WITH VIDEO COLLECTION\n\n//get the collection of all videos available to everyone\napp.get(\"/videos\", async (req, res) => {\n  const videos = await Video.find().sort({ createdAt: \"desc\" }).limit(8).exec();\n  res.json(videos);\n});\n\n//top 10 videos\n\n//Route to find one specific video by id\napp.get(\"/videos/:id\", async (req, res) => {\n  const videoById = await Video.findOne({ id: req.params.id });\n  if (videoById) {\n    res.json(videoById);\n  } else {\n    res.status(404).json({ error: \"Video not found\" });\n  }\n});\n\n//filter short videos - 15, 30, 60\napp.get(\"/video/short\", async (req, res) => {\n  const shortVideos = await Video.find({ length: { $lt: 15 } });\n  if (shortVideos.length > 0) {\n    res.json(shortVideos);\n  } else {\n    res.status(404).json({ error: \"No such video found\" });\n  }\n});\n//filter long videos\n\n//videos by category yoga type\n\n//video by level\n\n//videos available when signed in\n//your favourite videos\n\n// video liked\n//i need to limit likes on and off for ine particulat user to be able to filter videos by total amount of likes\napp.post(\"/videos/:id/liked\", async (req, res) => {\n  try {\n    const { id } = req.params;\n    await Video.updateOne({ _id: id }, { $inc: { likes: 1 } });\n    res.status(200).json({ success: true });\n  } catch (err) {\n    res\n      .status(400)\n      .json({ message: ERR_CANNOT_FIND_VIDEO_BY_ID, errors: err.errors });\n  }\n});\n\n//post a video, function available only for admins\napp.post(\"/videos\", async (req, res) => {\n  //Try catch\n  try {\n    //Success case\n    //retrive the information sent by the client to our API endpoint\n    const { videoName, videoUrl, description, length, category } = req.body;\n    const video = new Video({\n      video_name,\n      video_url,\n      description,\n      duration,\n      category,\n    });\n    const savedVideo = await video.save();\n    res.status(200).json(savedVideo);\n  } catch (err) {\n    //bad request sending the status to the server and the message\n    res\n      .status(400)\n      .json({ message: ERR_CANNOT_SAVE_TO_DATABASE, errors: err.errors });\n  }\n});\n//delete a video function is available only for admin\napp.delete(\"/videos/:id\", async (req, res) => {\n  try {\n    //try to delete and send a successful response\n    const { id } = req.params;\n    await Video.deleteOne({ _id: id });\n    res.status(200).json({ success: true });\n  } catch (error) {\n    console.log(error);\n    //inform the client about the deletion failure\n    res.status(400).json({ success: false });\n  }\n});\n\n// Start the server\napp.listen(port, () => {\n  console.log(`Server running on http://localhost:${port}`);\n});\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1611240310913
  }
}