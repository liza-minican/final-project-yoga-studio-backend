{
  "{\"sourceRoot\":\"/Users/elizavetaminican/Desktop/projects_main/TECHNIGO/final-project-yoga-studio-backend/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/elizavetaminican/Desktop/projects_main/TECHNIGO/final-project-yoga-studio-backend\",\"filename\":\"/Users/elizavetaminican/Desktop/projects_main/TECHNIGO/final-project-yoga-studio-backend/server.js\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/elizavetaminican/Desktop/projects_main/TECHNIGO/final-project-yoga-studio-backend\",\"plugins\":[{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]},\"BigIntLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.12.10": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/elizavetaminican/Desktop/projects_main/TECHNIGO/final-project-yoga-studio-backend/",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/elizavetaminican/Desktop/projects_main/TECHNIGO/final-project-yoga-studio-backend",
      "filename": "/Users/elizavetaminican/Desktop/projects_main/TECHNIGO/final-project-yoga-studio-backend/server.js",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/elizavetaminican/Desktop/projects_main/TECHNIGO/final-project-yoga-studio-backend",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "BigIntLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "StaticBlock": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/elizavetaminican/Desktop/projects_main/TECHNIGO/final-project-yoga-studio-backend/server.js",
        "plugins": [
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/elizavetaminican/Desktop/projects_main/TECHNIGO/final-project-yoga-studio-backend/server.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/elizavetaminican/Desktop/projects_main/TECHNIGO/final-project-yoga-studio-backend/",
        "sourceFileName": "server.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _express = _interopRequireDefault(require(\"express\"));\n\nvar _bodyParser = _interopRequireDefault(require(\"body-parser\"));\n\nvar _cors = _interopRequireDefault(require(\"cors\"));\n\nvar _mongoose = _interopRequireDefault(require(\"mongoose\"));\n\nvar _expressListEndpoints = _interopRequireDefault(require(\"express-list-endpoints\"));\n\nvar _crypto = _interopRequireDefault(require(\"crypto\"));\n\nvar _bcrypt = _interopRequireDefault(require(\"bcrypt\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\n// Defines the port the app will run on.\nvar port = process.env.PORT || 8080;\nvar app = (0, _express[\"default\"])(); // error messages\n\nvar ERR_CANNOT_SAVE_TO_DATABASE = \"Could not save video to the Database\";\nvar ERR_CANNOT_FIND_VIDEO_BY_ID = \"Could not find video by id provided\";\nvar mongoUrl = process.env.MONGO_URL || \"mongodb://localhost/yogaStudio\";\n\n_mongoose[\"default\"].connect(mongoUrl, {\n  useNewUrlParser: true,\n  useUnifiedTopology: true\n});\n\n_mongoose[\"default\"].Promise = Promise; //user schema for sign in and sugn up with relation to video schema to store user's favourite videos\n\nvar userSchema = new _mongoose[\"default\"].Schema({\n  userName: {\n    type: String,\n    minlength: 5,\n    maxlength: 20,\n    unique: true,\n    required: true\n  },\n  email: {\n    type: String,\n    unique: true\n  },\n  password: {\n    type: String,\n    minlength: 6,\n    required: true\n  },\n  accessToken: {\n    type: String,\n    \"default\": function _default() {\n      return _crypto[\"default\"].randomBytes(128).toString(\"hex\");\n    }\n  },\n  isAdmin: {\n    type: Boolean,\n    \"default\": false\n  },\n  //reference to the videos, storing them in the array\n  selectedVideos: [{\n    type: _mongoose[\"default\"].Schema.Types.ObjectId,\n    ref: \"Video\"\n  }] // selectedVideos: {\n  //   type: Array,\n  // },\n\n}); //week 18th and date 16th watch\n\nvar videoSchema = new _mongoose[\"default\"].Schema({\n  videoName: {\n    type: String,\n    required: true\n  },\n  description: {\n    type: String,\n    required: true\n  },\n  videoUrl: {\n    type: String,\n    required: true\n  },\n  category: {\n    type: String,\n    required: true,\n    \"enum\": [\"Beginner\", \"Intermediate\", \"Advanced\"]\n  },\n  length: {\n    type: Number,\n    required: true\n  } //RATING AND LIKES CAN BE ADDED LATER\n  // rating: {\n  //   type: Number,\n  //   enum: [1,2,3,4,5]\n  // },\n  // likes: {\n  //   type: Number,\n  //   default: 0,\n  // },\n  //reference to the user\n  //   user: {\n  //     type: mongoose.Schema.Types.ObjectId,\n  //     ref: \"User\",\n  //   },\n\n}, {\n  timestamps: true\n}); // Add middlewares to enable cors and json body parsing\n\napp.use((0, _cors[\"default\"])());\napp.use(_bodyParser[\"default\"].json());\n\nvar User = _mongoose[\"default\"].model(\"User\", userSchema);\n\nvar Video = _mongoose[\"default\"].model(\"Video\", videoSchema); //Provide error of server\n\n\napp.use(function (req, res, next) {\n  if (_mongoose[\"default\"].connection.readyState === 1) {\n    next();\n  } else {\n    res.status(503).json({\n      error: \"Service unavailable at the moment\"\n    });\n  }\n}); // Start defining routes here\n\napp.get(\"/\", function (req, res) {\n  res.send(\"Hello world\");\n}); // HERE ARE THE ENDPOINTS FOR SIGN IN / SIGN UP\n// const authenticateUser = async (req, res, next) => {\n//   try {\n//     const accessToken = req.header(\"Authorization\");\n//     const user = await User.findOne({ accessToken });\n//     if (!user) {\n//       throw \"User not found\";\n//     }\n//     req.user = user;\n//     next();\n//   } catch (err) {\n//     const errorMessage = \"Please try logging in again\";\n//     res.status(401).json({ error: errorMessage });\n//   }\n// };\n// Sign-up\n\napp.post(\"/users\", /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(req, res) {\n    var _req$body, userName, password, user;\n\n    return regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _req$body = req.body, userName = _req$body.userName, password = _req$body.password;\n            console.log(\"!!!\", userName, password);\n            _context.next = 5;\n            return new User({\n              userName: userName,\n              email: \"liza@mail.ru\",\n              password: _bcrypt[\"default\"].hashSync(password)\n            }).save();\n\n          case 5:\n            user = _context.sent;\n            res.status(200).json({\n              userId: user._id,\n              accessToken: user.accessToken\n            });\n            _context.next = 12;\n            break;\n\n          case 9:\n            _context.prev = 9;\n            _context.t0 = _context[\"catch\"](0);\n            res.status(400).json({\n              message: \"Could not create user\",\n              errors: _context.t0\n            });\n\n          case 12:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[0, 9]]);\n  }));\n\n  return function (_x, _x2) {\n    return _ref.apply(this, arguments);\n  };\n}()); // Login\n\napp.post(\"/sessions\", /*#__PURE__*/function () {\n  var _ref2 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2(req, res) {\n    var _req$body2, email, password, user;\n\n    return regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.prev = 0;\n            _req$body2 = req.body, email = _req$body2.email, password = _req$body2.password;\n            _context2.next = 4;\n            return User.findOne({\n              email: email\n            });\n\n          case 4:\n            user = _context2.sent;\n\n            if (!(user && _bcrypt[\"default\"].compareSync(password, user.password))) {\n              _context2.next = 9;\n              break;\n            }\n\n            res.status(200).json({\n              userId: user._id,\n              accessToken: user.accessToken\n            });\n            _context2.next = 10;\n            break;\n\n          case 9:\n            throw \"User not found\";\n\n          case 10:\n            _context2.next = 15;\n            break;\n\n          case 12:\n            _context2.prev = 12;\n            _context2.t0 = _context2[\"catch\"](0);\n            res.status(404).json({\n              error: \"User not found\"\n            });\n\n          case 15:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2, null, [[0, 12]]);\n  }));\n\n  return function (_x3, _x4) {\n    return _ref2.apply(this, arguments);\n  };\n}()); // HERE ARE THE ENDPOINTS TO WORK WITH VIDEO COLLECTION\n//get the collection of all videos available to everyone\n\napp.get(\"/videos\", /*#__PURE__*/function () {\n  var _ref3 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3(req, res) {\n    var videos;\n    return regeneratorRuntime.wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            _context3.next = 2;\n            return Video.find().sort({\n              createdAt: \"desc\"\n            }).limit(8).exec();\n\n          case 2:\n            videos = _context3.sent;\n            res.json(videos);\n\n          case 4:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3);\n  }));\n\n  return function (_x5, _x6) {\n    return _ref3.apply(this, arguments);\n  };\n}()); //top 10 videos\n//Route to find one specific video by id\n\napp.get(\"/videos/:id\", /*#__PURE__*/function () {\n  var _ref4 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee4(req, res) {\n    var videoById;\n    return regeneratorRuntime.wrap(function _callee4$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            _context4.next = 2;\n            return Video.findOne({\n              id: req.params.id\n            });\n\n          case 2:\n            videoById = _context4.sent;\n\n            if (videoById) {\n              res.json(videoById);\n            } else {\n              res.status(404).json({\n                error: \"Video not found\"\n              });\n            }\n\n          case 4:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, _callee4);\n  }));\n\n  return function (_x7, _x8) {\n    return _ref4.apply(this, arguments);\n  };\n}()); //filter videos by length\n//filter short videos - 15, 30, 60\n\napp.get(\"/video/length\", /*#__PURE__*/function () {\n  var _ref5 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee5(req, res) {\n    var shortVideos;\n    return regeneratorRuntime.wrap(function _callee5$(_context5) {\n      while (1) {\n        switch (_context5.prev = _context5.next) {\n          case 0:\n            _context5.next = 2;\n            return Video.find({\n              length: {\n                $lt: 15\n              }\n            });\n\n          case 2:\n            shortVideos = _context5.sent;\n\n            if (shortVideos.length > 0) {\n              res.json(shortVideos);\n            } else {\n              res.status(404).json({\n                error: \"No such video found\"\n              });\n            }\n\n          case 4:\n          case \"end\":\n            return _context5.stop();\n        }\n      }\n    }, _callee5);\n  }));\n\n  return function (_x9, _x10) {\n    return _ref5.apply(this, arguments);\n  };\n}()); //video by level\n//videos available when signed in\n//your favourite videos\n// video liked\n//i need to limit likes on and off for ine particulat user to be able to filter videos by total amount of likes\n\napp.post(\"/videos/:id/liked\", /*#__PURE__*/function () {\n  var _ref6 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee6(req, res) {\n    var id;\n    return regeneratorRuntime.wrap(function _callee6$(_context6) {\n      while (1) {\n        switch (_context6.prev = _context6.next) {\n          case 0:\n            _context6.prev = 0;\n            id = req.params.id;\n            _context6.next = 4;\n            return Video.updateOne({\n              _id: id\n            }, {\n              $inc: {\n                likes: 1\n              }\n            });\n\n          case 4:\n            res.status(200).json({\n              success: true\n            });\n            _context6.next = 10;\n            break;\n\n          case 7:\n            _context6.prev = 7;\n            _context6.t0 = _context6[\"catch\"](0);\n            res.status(400).json({\n              message: ERR_CANNOT_FIND_VIDEO_BY_ID,\n              errors: _context6.t0.errors\n            });\n\n          case 10:\n          case \"end\":\n            return _context6.stop();\n        }\n      }\n    }, _callee6, null, [[0, 7]]);\n  }));\n\n  return function (_x11, _x12) {\n    return _ref6.apply(this, arguments);\n  };\n}()); //post a video, function available only for admins\n\napp.post(\"/videos\", /*#__PURE__*/function () {\n  var _ref7 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee7(req, res) {\n    var _req$body3, videoName, videoUrl, description, length, category, video, savedVideo;\n\n    return regeneratorRuntime.wrap(function _callee7$(_context7) {\n      while (1) {\n        switch (_context7.prev = _context7.next) {\n          case 0:\n            _context7.prev = 0;\n            //Success case\n            //retrive the information sent by the client to our API endpoint\n            _req$body3 = req.body, videoName = _req$body3.videoName, videoUrl = _req$body3.videoUrl, description = _req$body3.description, length = _req$body3.length, category = _req$body3.category;\n            video = new Video({\n              videoName: videoName,\n              videUrl: videUrl,\n              description: description,\n              length: length,\n              category: category\n            });\n            _context7.next = 5;\n            return video.save();\n\n          case 5:\n            savedVideo = _context7.sent;\n            res.status(200).json(savedVideo);\n            _context7.next = 12;\n            break;\n\n          case 9:\n            _context7.prev = 9;\n            _context7.t0 = _context7[\"catch\"](0);\n            //bad request sending the status to the server and the message\n            res.status(400).json({\n              message: ERR_CANNOT_SAVE_TO_DATABASE,\n              errors: _context7.t0.errors\n            });\n\n          case 12:\n          case \"end\":\n            return _context7.stop();\n        }\n      }\n    }, _callee7, null, [[0, 9]]);\n  }));\n\n  return function (_x13, _x14) {\n    return _ref7.apply(this, arguments);\n  };\n}()); //delete a video function is available only for admin\n\napp[\"delete\"](\"/videos/:id\", /*#__PURE__*/function () {\n  var _ref8 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee8(req, res) {\n    var id;\n    return regeneratorRuntime.wrap(function _callee8$(_context8) {\n      while (1) {\n        switch (_context8.prev = _context8.next) {\n          case 0:\n            _context8.prev = 0;\n            //try to delete and send a successful response\n            id = req.params.id;\n            _context8.next = 4;\n            return Video.deleteOne({\n              _id: id\n            });\n\n          case 4:\n            res.status(200).json({\n              success: true\n            });\n            _context8.next = 11;\n            break;\n\n          case 7:\n            _context8.prev = 7;\n            _context8.t0 = _context8[\"catch\"](0);\n            console.log(_context8.t0); //inform the client about the deletion failure\n\n            res.status(400).json({\n              success: false\n            });\n\n          case 11:\n          case \"end\":\n            return _context8.stop();\n        }\n      }\n    }, _callee8, null, [[0, 7]]);\n  }));\n\n  return function (_x15, _x16) {\n    return _ref8.apply(this, arguments);\n  };\n}()); // Start the server\n\napp.listen(port, function () {\n  console.log(\"Server running on http://localhost:\".concat(port));\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "server.js"
      ],
      "names": [
        "port",
        "process",
        "env",
        "PORT",
        "app",
        "ERR_CANNOT_SAVE_TO_DATABASE",
        "ERR_CANNOT_FIND_VIDEO_BY_ID",
        "mongoUrl",
        "MONGO_URL",
        "mongoose",
        "connect",
        "useNewUrlParser",
        "useUnifiedTopology",
        "Promise",
        "userSchema",
        "Schema",
        "userName",
        "type",
        "String",
        "minlength",
        "maxlength",
        "unique",
        "required",
        "email",
        "password",
        "accessToken",
        "crypto",
        "randomBytes",
        "toString",
        "isAdmin",
        "Boolean",
        "selectedVideos",
        "Types",
        "ObjectId",
        "ref",
        "videoSchema",
        "videoName",
        "description",
        "videoUrl",
        "category",
        "length",
        "Number",
        "timestamps",
        "use",
        "bodyParser",
        "json",
        "User",
        "model",
        "Video",
        "req",
        "res",
        "next",
        "connection",
        "readyState",
        "status",
        "error",
        "get",
        "send",
        "post",
        "body",
        "console",
        "log",
        "bcrypt",
        "hashSync",
        "save",
        "user",
        "userId",
        "_id",
        "message",
        "errors",
        "findOne",
        "compareSync",
        "find",
        "sort",
        "createdAt",
        "limit",
        "exec",
        "videos",
        "id",
        "params",
        "videoById",
        "$lt",
        "shortVideos",
        "updateOne",
        "$inc",
        "likes",
        "success",
        "video",
        "videUrl",
        "savedVideo",
        "deleteOne",
        "listen"
      ],
      "mappings": "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",
      "sourceRoot": "/Users/elizavetaminican/Desktop/projects_main/TECHNIGO/final-project-yoga-studio-backend/",
      "sourcesContent": [
        "import express from \"express\";\nimport bodyParser from \"body-parser\";\nimport cors from \"cors\";\nimport mongoose from \"mongoose\";\nimport endpoints from \"express-list-endpoints\";\nimport crypto from \"crypto\";\nimport bcrypt from \"bcrypt\";\n// Defines the port the app will run on.\n\nconst port = process.env.PORT || 8080;\nconst app = express();\n\n// error messages\nconst ERR_CANNOT_SAVE_TO_DATABASE = \"Could not save video to the Database\";\nconst ERR_CANNOT_FIND_VIDEO_BY_ID = \"Could not find video by id provided\";\n\nconst mongoUrl = process.env.MONGO_URL || \"mongodb://localhost/yogaStudio\";\nmongoose.connect(mongoUrl, { useNewUrlParser: true, useUnifiedTopology: true });\nmongoose.Promise = Promise;\n\n//user schema for sign in and sugn up with relation to video schema to store user's favourite videos\nconst userSchema = new mongoose.Schema({\n  userName: {\n    type: String,\n    minlength: 5,\n    maxlength: 20,\n    unique: true,\n    required: true,\n  },\n  email: {\n    type: String,\n    unique: true,\n  },\n  password: {\n    type: String,\n    minlength: 6,\n    required: true,\n  },\n  accessToken: {\n    type: String,\n    default: () => crypto.randomBytes(128).toString(\"hex\"),\n  },\n  isAdmin: {\n    type: Boolean,\n    default: false,\n  },\n  //reference to the videos, storing them in the array\n  selectedVideos: [{ type: mongoose.Schema.Types.ObjectId, ref: \"Video\" }],\n\n  // selectedVideos: {\n  //   type: Array,\n  // },\n});\n\n//week 18th and date 16th watch\n\nconst videoSchema = new mongoose.Schema(\n  {\n    videoName: {\n      type: String,\n      required: true,\n    },\n    description: {\n      type: String,\n      required: true,\n    },\n    videoUrl: {\n      type: String,\n      required: true,\n    },\n    category: {\n      type: String,\n      required: true,\n      enum: [\"Beginner\", \"Intermediate\", \"Advanced\"],\n    },\n    length: {\n      type: Number,\n      required: true,\n    },\n    //RATING AND LIKES CAN BE ADDED LATER\n    // rating: {\n    //   type: Number,\n    //   enum: [1,2,3,4,5]\n    // },\n\n    // likes: {\n    //   type: Number,\n    //   default: 0,\n    // },\n\n    //reference to the user\n    //   user: {\n    //     type: mongoose.Schema.Types.ObjectId,\n    //     ref: \"User\",\n    //   },\n  },\n  { timestamps: true }\n);\n\n// Add middlewares to enable cors and json body parsing\napp.use(cors());\napp.use(bodyParser.json());\n\nconst User = mongoose.model(\"User\", userSchema);\nconst Video = mongoose.model(\"Video\", videoSchema);\n\n//Provide error of server\n\napp.use((req, res, next) => {\n  if (mongoose.connection.readyState === 1) {\n    next();\n  } else {\n    res.status(503).json({ error: \"Service unavailable at the moment\" });\n  }\n});\n\n// Start defining routes here\napp.get(\"/\", (req, res) => {\n  res.send(\"Hello world\");\n});\n\n// HERE ARE THE ENDPOINTS FOR SIGN IN / SIGN UP\n\n// const authenticateUser = async (req, res, next) => {\n//   try {\n//     const accessToken = req.header(\"Authorization\");\n//     const user = await User.findOne({ accessToken });\n//     if (!user) {\n//       throw \"User not found\";\n//     }\n//     req.user = user;\n//     next();\n//   } catch (err) {\n//     const errorMessage = \"Please try logging in again\";\n//     res.status(401).json({ error: errorMessage });\n//   }\n// };\n\n// Sign-up\n\napp.post(\"/users\", async (req, res) => {\n  try {\n    const { userName, password } = req.body;\n    console.log(\"!!!\", userName, password);\n    const user = await new User({\n      userName,\n      email: \"liza@mail.ru\",\n      password: bcrypt.hashSync(password),\n    }).save();\n    res.status(200).json({ userId: user._id, accessToken: user.accessToken });\n  } catch (err) {\n    res.status(400).json({ message: \"Could not create user\", errors: err });\n  }\n});\n\n// Login\napp.post(\"/sessions\", async (req, res) => {\n  try {\n    const { email, password } = req.body;\n    const user = await User.findOne({ email });\n    if (user && bcrypt.compareSync(password, user.password)) {\n      res.status(200).json({ userId: user._id, accessToken: user.accessToken });\n    } else {\n      throw \"User not found\";\n    }\n  } catch (err) {\n    res.status(404).json({ error: \"User not found\" });\n  }\n});\n// HERE ARE THE ENDPOINTS TO WORK WITH VIDEO COLLECTION\n\n//get the collection of all videos available to everyone\napp.get(\"/videos\", async (req, res) => {\n  const videos = await Video.find().sort({ createdAt: \"desc\" }).limit(8).exec();\n  res.json(videos);\n});\n\n//top 10 videos\n\n//Route to find one specific video by id\napp.get(\"/videos/:id\", async (req, res) => {\n  const videoById = await Video.findOne({ id: req.params.id });\n  if (videoById) {\n    res.json(videoById);\n  } else {\n    res.status(404).json({ error: \"Video not found\" });\n  }\n});\n\n//filter videos by length\n\n//filter short videos - 15, 30, 60\napp.get(\"/video/length\", async (req, res) => {\n  const shortVideos = await Video.find({ length: { $lt: 15 } });\n  if (shortVideos.length > 0) {\n    res.json(shortVideos);\n  } else {\n    res.status(404).json({ error: \"No such video found\" });\n  }\n});\n\n//video by level\n\n//videos available when signed in\n//your favourite videos\n\n// video liked\n//i need to limit likes on and off for ine particulat user to be able to filter videos by total amount of likes\napp.post(\"/videos/:id/liked\", async (req, res) => {\n  try {\n    const { id } = req.params;\n    await Video.updateOne({ _id: id }, { $inc: { likes: 1 } });\n    res.status(200).json({ success: true });\n  } catch (err) {\n    res\n      .status(400)\n      .json({ message: ERR_CANNOT_FIND_VIDEO_BY_ID, errors: err.errors });\n  }\n});\n\n//post a video, function available only for admins\napp.post(\"/videos\", async (req, res) => {\n  //Try catch\n  try {\n    //Success case\n    //retrive the information sent by the client to our API endpoint\n    const { videoName, videoUrl, description, length, category } = req.body;\n    const video = new Video({\n      videoName,\n      videUrl,\n      description,\n      length,\n      category,\n    });\n    const savedVideo = await video.save();\n    res.status(200).json(savedVideo);\n  } catch (err) {\n    //bad request sending the status to the server and the message\n    res\n      .status(400)\n      .json({ message: ERR_CANNOT_SAVE_TO_DATABASE, errors: err.errors });\n  }\n});\n//delete a video function is available only for admin\napp.delete(\"/videos/:id\", async (req, res) => {\n  try {\n    //try to delete and send a successful response\n    const { id } = req.params;\n    await Video.deleteOne({ _id: id });\n    res.status(200).json({ success: true });\n  } catch (error) {\n    console.log(error);\n    //inform the client about the deletion failure\n    res.status(400).json({ success: false });\n  }\n});\n\n// Start the server\napp.listen(port, () => {\n  console.log(`Server running on http://localhost:${port}`);\n});\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1611325205577
  }
}