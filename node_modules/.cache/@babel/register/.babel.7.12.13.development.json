{
  "{\"sourceRoot\":\"/Users/elizavetaminican/Desktop/projects_main/TECHNIGO/final-project-yoga-studio-backend/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/elizavetaminican/Desktop/projects_main/TECHNIGO/final-project-yoga-studio-backend\",\"filename\":\"/Users/elizavetaminican/Desktop/projects_main/TECHNIGO/final-project-yoga-studio-backend/server.js\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/elizavetaminican/Desktop/projects_main/TECHNIGO/final-project-yoga-studio-backend\",\"plugins\":[{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]},\"BigIntLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.12.13": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/elizavetaminican/Desktop/projects_main/TECHNIGO/final-project-yoga-studio-backend/",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/elizavetaminican/Desktop/projects_main/TECHNIGO/final-project-yoga-studio-backend",
      "filename": "/Users/elizavetaminican/Desktop/projects_main/TECHNIGO/final-project-yoga-studio-backend/server.js",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/elizavetaminican/Desktop/projects_main/TECHNIGO/final-project-yoga-studio-backend",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "BigIntLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "StaticBlock": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/elizavetaminican/Desktop/projects_main/TECHNIGO/final-project-yoga-studio-backend/server.js",
        "plugins": [
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/elizavetaminican/Desktop/projects_main/TECHNIGO/final-project-yoga-studio-backend/server.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/elizavetaminican/Desktop/projects_main/TECHNIGO/final-project-yoga-studio-backend/",
        "sourceFileName": "server.js",
        "jsescOption": {
          "minimal": false
        }
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _express = _interopRequireDefault(require(\"express\"));\n\nvar _bodyParser = _interopRequireDefault(require(\"body-parser\"));\n\nvar _cors = _interopRequireDefault(require(\"cors\"));\n\nvar _mongoose = _interopRequireDefault(require(\"mongoose\"));\n\nvar _expressListEndpoints = _interopRequireDefault(require(\"express-list-endpoints\"));\n\nvar _crypto = _interopRequireDefault(require(\"crypto\"));\n\nvar _bcrypt = _interopRequireDefault(require(\"bcrypt\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\n//import { StringDecoder } from \"string_decoder\";\n// Defines the port the app will run on.\nvar port = process.env.PORT || 8080;\nvar app = (0, _express[\"default\"])(); // list endpoints in the '/' route\n// const listEndpoints = require(\"express-list-endpoints\");\n// error messages\n\nvar ERR_CANNOT_SAVE_TO_DATABASE = \"Could not save video to the Database\";\nvar ERR_CANNOT_FIND_VIDEO_BY_ID = \"Could not find video by id provided\";\nvar mongoUrl = process.env.MONGO_URL || \"mongodb://localhost/yogaStudio\";\n\n_mongoose[\"default\"].connect(mongoUrl, {\n  useNewUrlParser: true,\n  useUnifiedTopology: true\n});\n\n_mongoose[\"default\"].Promise = Promise; //user schema for sign in and sugn up with relation to video schema to store user's favourite videos\n\nvar userSchema = new _mongoose[\"default\"].Schema({\n  userName: {\n    type: String,\n    minlength: 4,\n    maxlength: 20,\n    required: true\n  },\n  email: {\n    type: String,\n    unique: true\n  },\n  password: {\n    type: String,\n    minlength: 6,\n    required: true\n  },\n  accessToken: {\n    type: String,\n    \"default\": function _default() {\n      return _crypto[\"default\"].randomBytes(128).toString(\"hex\");\n    }\n  },\n  isAdmin: {\n    type: Boolean,\n    \"default\": false\n  },\n  //reference to the videos, saving them in the array\n  selectedVideos: [{\n    type: _mongoose[\"default\"].Schema.Types.ObjectId,\n    ref: \"Video\"\n  }]\n});\nvar videoSchema = new _mongoose[\"default\"].Schema({\n  videoName: {\n    type: String,\n    required: true\n  },\n  description: {\n    type: String,\n    required: true\n  },\n  videoUrl: {\n    type: String,\n    required: true\n  },\n  category: {\n    type: String,\n    required: true,\n    \"enum\": [\"Beginner\", \"Intermediate\", \"Advanced\"]\n  },\n  length: {\n    type: Number,\n    required: true\n  },\n  likes: {\n    type: Number,\n    \"default\": 0,\n    min: 0,\n    max: 1\n  }\n}, {\n  timestamps: true\n}); // Add middlewares to enable cors and json body parsing\n\napp.use((0, _cors[\"default\"])());\napp.use(_bodyParser[\"default\"].json());\n\nvar User = _mongoose[\"default\"].model(\"User\", userSchema);\n\nvar Video = _mongoose[\"default\"].model(\"Video\", videoSchema); //Provide error of server\n\n\napp.use(function (req, res, next) {\n  if (_mongoose[\"default\"].connection.readyState === 1) {\n    next();\n  } else {\n    res.status(503).json({\n      error: \"Service unavailable at the moment\"\n    });\n  }\n}); // Start defining routes here\n\napp.get(\"/\", function (req, res) {\n  res.send(listEndpoints(app));\n}); // HERE ARE THE ENDPOINTS FOR SIGN IN / SIGN UP\n//this middleware is for user authentification\n\nvar authenticateUser = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(req, res, next) {\n    var accessToken, user, errorMessage;\n    return regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            accessToken = req.header(\"Authorization\");\n            _context.next = 4;\n            return User.findOne({\n              accessToken: accessToken\n            });\n\n          case 4:\n            user = _context.sent;\n\n            if (user) {\n              _context.next = 7;\n              break;\n            }\n\n            throw \"User not found\";\n\n          case 7:\n            req.user = user;\n            next();\n            _context.next = 15;\n            break;\n\n          case 11:\n            _context.prev = 11;\n            _context.t0 = _context[\"catch\"](0);\n            errorMessage = \"User not found. Please try logging in again\";\n            res.status(401).json({\n              error: errorMessage\n            });\n\n          case 15:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[0, 11]]);\n  }));\n\n  return function authenticateUser(_x, _x2, _x3) {\n    return _ref.apply(this, arguments);\n  };\n}(); // Sign-up\n\n\napp.post(\"/users\", /*#__PURE__*/function () {\n  var _ref2 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2(req, res) {\n    var _req$body, userName, email, password, SALT, user;\n\n    return regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.prev = 0;\n            _req$body = req.body, userName = _req$body.userName, email = _req$body.email, password = _req$body.password;\n            console.log(\"!!!\", userName, email, password);\n            SALT = _bcrypt[\"default\"].genSaltSync(10);\n            _context2.next = 6;\n            return new User({\n              userName: userName,\n              email: email,\n              password: _bcrypt[\"default\"].hashSync(password, SALT)\n            }).save();\n\n          case 6:\n            user = _context2.sent;\n            res.status(200).json({\n              message: \"User created!\",\n              userId: user._id,\n              accessToken: user.accessToken,\n              userName: user.userName,\n              email: user.email,\n              password: user.password\n            });\n            _context2.next = 14;\n            break;\n\n          case 10:\n            _context2.prev = 10;\n            _context2.t0 = _context2[\"catch\"](0);\n            console.log(\"!!!\", _context2.t0, \"!!!\");\n            res.status(400).json({\n              message: \"Could not create user\",\n              errors: _context2.t0\n            });\n\n          case 14:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2, null, [[0, 10]]);\n  }));\n\n  return function (_x4, _x5) {\n    return _ref2.apply(this, arguments);\n  };\n}());\napp.post(\"/sessions\", /*#__PURE__*/function () {\n  var _ref3 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3(req, res) {\n    var _req$body2, email, password, accessTokenUpdate, user, updatedUser;\n\n    return regeneratorRuntime.wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            _context3.prev = 0;\n            _req$body2 = req.body, email = _req$body2.email, password = _req$body2.password;\n            accessTokenUpdate = _crypto[\"default\"].randomBytes(128).toString(\"hex\");\n            console.log(\"!!!\", email, password);\n            _context3.next = 6;\n            return User.findOne({\n              email: email\n            });\n\n          case 6:\n            user = _context3.sent;\n\n            if (!(user && _bcrypt[\"default\"].compareSync(password, user.password))) {\n              _context3.next = 14;\n              break;\n            }\n\n            _context3.next = 10;\n            return User.findOneAndUpdate({\n              email: email\n            }, {\n              accessToken: accessTokenUpdate\n            }, {\n              \"new\": true,\n              useFindAndModify: false\n            });\n\n          case 10:\n            updatedUser = _context3.sent;\n            res.status(200).json({\n              userId: updatedUser._id,\n              accessToken: updatedUser.accessToken,\n              userName: updatedUser.userName\n            });\n            _context3.next = 15;\n            break;\n\n          case 14:\n            throw \"User not found\";\n\n          case 15:\n            _context3.next = 20;\n            break;\n\n          case 17:\n            _context3.prev = 17;\n            _context3.t0 = _context3[\"catch\"](0);\n            res.status(404).json({\n              error: \"User not found\"\n            });\n\n          case 20:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3, null, [[0, 17]]);\n  }));\n\n  return function (_x6, _x7) {\n    return _ref3.apply(this, arguments);\n  };\n}()); // HERE ARE THE ENDPOINTS TO WORK WITH VIDEO COLLECTION\n//get the collection of all videos available to everyone\n\napp.get(\"/videos\", /*#__PURE__*/function () {\n  var _ref4 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee4(req, res) {\n    var videos;\n    return regeneratorRuntime.wrap(function _callee4$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            _context4.next = 2;\n            return Video.find().sort({\n              createdAt: \"desc\"\n            }).limit(20).exec();\n\n          case 2:\n            videos = _context4.sent;\n            res.json(videos);\n\n          case 4:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, _callee4);\n  }));\n\n  return function (_x8, _x9) {\n    return _ref4.apply(this, arguments);\n  };\n}()); //Route to find one specific video by id\n\napp.get(\"/videos/:id\", /*#__PURE__*/function () {\n  var _ref5 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee5(req, res) {\n    var videoById;\n    return regeneratorRuntime.wrap(function _callee5$(_context5) {\n      while (1) {\n        switch (_context5.prev = _context5.next) {\n          case 0:\n            _context5.next = 2;\n            return Video.findOne({\n              _id: req.params.id\n            });\n\n          case 2:\n            videoById = _context5.sent;\n\n            if (videoById) {\n              res.json(videoById);\n            } else {\n              res.status(404).json({\n                error: \"Video not found\"\n              });\n            }\n\n          case 4:\n          case \"end\":\n            return _context5.stop();\n        }\n      }\n    }, _callee5);\n  }));\n\n  return function (_x10, _x11) {\n    return _ref5.apply(this, arguments);\n  };\n}()); //filter videos by length, endpoint that can be developed in the future\n//at the moment frontend is responsible for filtering\n//filter videos - 15, 20, 30\n\napp.get(\"/videos/length/30\", /*#__PURE__*/function () {\n  var _ref6 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee6(req, res) {\n    var videosByLength;\n    return regeneratorRuntime.wrap(function _callee6$(_context6) {\n      while (1) {\n        switch (_context6.prev = _context6.next) {\n          case 0:\n            _context6.next = 2;\n            return Video.find({\n              length: 30\n            });\n\n          case 2:\n            videosByLength = _context6.sent;\n\n            if (videosByLength) {\n              res.json(videosByLength);\n            } else {\n              res.status(404).json({\n                error: \"No such video found\"\n              });\n            }\n\n          case 4:\n          case \"end\":\n            return _context6.stop();\n        }\n      }\n    }, _callee6);\n  }));\n\n  return function (_x12, _x13) {\n    return _ref6.apply(this, arguments);\n  };\n}());\napp.get(\"/videos/length/15\", /*#__PURE__*/function () {\n  var _ref7 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee7(req, res) {\n    var videosByLength;\n    return regeneratorRuntime.wrap(function _callee7$(_context7) {\n      while (1) {\n        switch (_context7.prev = _context7.next) {\n          case 0:\n            _context7.next = 2;\n            return Video.find({\n              length: 15\n            });\n\n          case 2:\n            videosByLength = _context7.sent;\n\n            if (videosByLength) {\n              res.json(videosByLength);\n            } else {\n              res.status(404).json({\n                error: \"No such video found\"\n              });\n            }\n\n          case 4:\n          case \"end\":\n            return _context7.stop();\n        }\n      }\n    }, _callee7);\n  }));\n\n  return function (_x14, _x15) {\n    return _ref7.apply(this, arguments);\n  };\n}());\napp.get(\"/videos/length/20\", /*#__PURE__*/function () {\n  var _ref8 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee8(req, res) {\n    var videosByLength;\n    return regeneratorRuntime.wrap(function _callee8$(_context8) {\n      while (1) {\n        switch (_context8.prev = _context8.next) {\n          case 0:\n            _context8.next = 2;\n            return Video.find({\n              length: 20\n            });\n\n          case 2:\n            videosByLength = _context8.sent;\n\n            if (videosByLength) {\n              res.json(videosByLength);\n            } else {\n              res.status(404).json({\n                error: \"No such video found\"\n              });\n            }\n\n          case 4:\n          case \"end\":\n            return _context8.stop();\n        }\n      }\n    }, _callee8);\n  }));\n\n  return function (_x16, _x17) {\n    return _ref8.apply(this, arguments);\n  };\n}()); // PUT: endpoint to add favoritevideo for a logged-in user:\n// UPDATES the user and adds the favorite video to the favorite videos-array for that user.\n//<----------SHOW FAVORITE VIDEOS, ADD TO FAVORITE AND DELETE FROM FAVORITE---------->\n//--ADD--\n\napp.put(\"/users/:userId/favorites/:videoId\", authenticateUser);\napp.put(\"/users/:userId/favorites/:videoId\", /*#__PURE__*/function () {\n  var _ref9 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee9(req, res) {\n    var _req$params, userId, videoId, selectedVideo;\n\n    return regeneratorRuntime.wrap(function _callee9$(_context9) {\n      while (1) {\n        switch (_context9.prev = _context9.next) {\n          case 0:\n            _req$params = req.params, userId = _req$params.userId, videoId = _req$params.videoId;\n            _context9.prev = 1;\n            _context9.next = 4;\n            return Video.findById(videoId);\n\n          case 4:\n            selectedVideo = _context9.sent;\n            // Find the video the user wants to add.\n            console.log(\"selectedVideo\", selectedVideo);\n            _context9.next = 8;\n            return User.updateOne({\n              _id: userId\n            }, {\n              $push: {\n                selectedVideos: selectedVideo\n              }\n            } //push the selected video into the favorite videos array\n            );\n\n          case 8:\n            res.status(200).json(selectedVideo);\n            _context9.next = 14;\n            break;\n\n          case 11:\n            _context9.prev = 11;\n            _context9.t0 = _context9[\"catch\"](1);\n            res.status(404).json({\n              message: \"Could not add video.\",\n              errors: {\n                message: _context9.t0.message,\n                error: _context9.t0\n              }\n            });\n\n          case 14:\n          case \"end\":\n            return _context9.stop();\n        }\n      }\n    }, _callee9, null, [[1, 11]]);\n  }));\n\n  return function (_x18, _x19) {\n    return _ref9.apply(this, arguments);\n  };\n}()); //--DELETE--\n\napp[\"delete\"](\"/users/:userId/favorites/:videoId\", authenticateUser);\napp[\"delete\"](\"/users/:userId/favorites/:videoId\", /*#__PURE__*/function () {\n  var _ref10 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee10(req, res) {\n    var _req$params2, userId, videoId, selectedVideo;\n\n    return regeneratorRuntime.wrap(function _callee10$(_context10) {\n      while (1) {\n        switch (_context10.prev = _context10.next) {\n          case 0:\n            _req$params2 = req.params, userId = _req$params2.userId, videoId = _req$params2.videoId;\n            _context10.prev = 1;\n            _context10.next = 4;\n            return Video.findById(videoId);\n\n          case 4:\n            selectedVideo = _context10.sent;\n            // Find the video the user wants to delete.\n            console.log(\"selectedVideo\", selectedVideo);\n            _context10.next = 8;\n            return User.updateOne({\n              _id: userId\n            }, {\n              $pull: {\n                selectedVideos: {\n                  $in: [selectedVideo]\n                }\n              }\n            } //delete the selected video from the favorite videos array\n            );\n\n          case 8:\n            res.status(200).json(selectedVideo);\n            _context10.next = 15;\n            break;\n\n          case 11:\n            _context10.prev = 11;\n            _context10.t0 = _context10[\"catch\"](1);\n            console.log(_context10.t0);\n            res.status(404).json({\n              message: \"Could not remove video.\",\n              errors: {\n                message: _context10.t0.message,\n                error: _context10.t0\n              }\n            });\n\n          case 15:\n          case \"end\":\n            return _context10.stop();\n        }\n      }\n    }, _callee10, null, [[1, 11]]);\n  }));\n\n  return function (_x20, _x21) {\n    return _ref10.apply(this, arguments);\n  };\n}()); //--SHOW FAVORITE VIDEOS--\n\napp.get(\"/users/:userId/favorites\", authenticateUser);\napp.get(\"/users/:userId/favorites\", /*#__PURE__*/function () {\n  var _ref11 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee11(req, res) {\n    var userId, favoritesArray, getCurrentFavoriteVideos;\n    return regeneratorRuntime.wrap(function _callee11$(_context11) {\n      while (1) {\n        switch (_context11.prev = _context11.next) {\n          case 0:\n            _context11.prev = 0;\n            userId = req.params.userId;\n\n            if (!(userId != req.user._id)) {\n              _context11.next = 4;\n              break;\n            }\n\n            throw \"Access denied\";\n\n          case 4:\n            _context11.next = 6;\n            return req.user.selectedVideos;\n\n          case 6:\n            favoritesArray = _context11.sent;\n            _context11.next = 9;\n            return Video.find({\n              _id: favoritesArray\n            });\n\n          case 9:\n            getCurrentFavoriteVideos = _context11.sent;\n            // gives the  video-object in user favorites\n            res.status(200).json(getCurrentFavoriteVideos);\n            _context11.next = 16;\n            break;\n\n          case 13:\n            _context11.prev = 13;\n            _context11.t0 = _context11[\"catch\"](0);\n            res.status(403).json({\n              message: \"Could not get favorite videos. User must be logged in.\",\n              errors: {\n                message: _context11.t0.message,\n                error: _context11.t0\n              }\n            });\n\n          case 16:\n          case \"end\":\n            return _context11.stop();\n        }\n      }\n    }, _callee11, null, [[0, 13]]);\n  }));\n\n  return function (_x22, _x23) {\n    return _ref11.apply(this, arguments);\n  };\n}()); //likes are not used in the project at the moment, but can be used in the future\n\napp.post(\"/videos/:id/like\", /*#__PURE__*/function () {\n  var _ref12 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee12(req, res) {\n    var id;\n    return regeneratorRuntime.wrap(function _callee12$(_context12) {\n      while (1) {\n        switch (_context12.prev = _context12.next) {\n          case 0:\n            _context12.prev = 0;\n            id = req.params.id;\n            _context12.next = 4;\n            return Video.updateOne({\n              _id: id\n            }, {\n              $inc: {\n                likes: 1\n              }\n            });\n\n          case 4:\n            res.status(200).json({\n              success: true\n            });\n            _context12.next = 10;\n            break;\n\n          case 7:\n            _context12.prev = 7;\n            _context12.t0 = _context12[\"catch\"](0);\n            res.status(400).json({\n              message: ERR_CANNOT_FIND_VIDEO_BY_ID,\n              errors: _context12.t0.errors\n            });\n\n          case 10:\n          case \"end\":\n            return _context12.stop();\n        }\n      }\n    }, _callee12, null, [[0, 7]]);\n  }));\n\n  return function (_x24, _x25) {\n    return _ref12.apply(this, arguments);\n  };\n}()); //post a video, function available only for admins\n\napp.post(\"/videos\", /*#__PURE__*/function () {\n  var _ref13 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee13(req, res) {\n    var _req$body3, videoName, videoUrl, description, length, category, video, savedVideo;\n\n    return regeneratorRuntime.wrap(function _callee13$(_context13) {\n      while (1) {\n        switch (_context13.prev = _context13.next) {\n          case 0:\n            _context13.prev = 0;\n            //Success case\n            //retrive the information sent by the client to our API endpoint\n            _req$body3 = req.body, videoName = _req$body3.videoName, videoUrl = _req$body3.videoUrl, description = _req$body3.description, length = _req$body3.length, category = _req$body3.category;\n            video = new Video({\n              videoName: videoName,\n              videoUrl: videoUrl,\n              description: description,\n              length: length,\n              category: category\n            });\n            _context13.next = 5;\n            return video.save();\n\n          case 5:\n            savedVideo = _context13.sent;\n            res.status(200).json(savedVideo);\n            _context13.next = 12;\n            break;\n\n          case 9:\n            _context13.prev = 9;\n            _context13.t0 = _context13[\"catch\"](0);\n            //bad request sending the status to the server and the message\n            res.status(400).json({\n              message: ERR_CANNOT_SAVE_TO_DATABASE,\n              errors: _context13.t0.errors\n            });\n\n          case 12:\n          case \"end\":\n            return _context13.stop();\n        }\n      }\n    }, _callee13, null, [[0, 9]]);\n  }));\n\n  return function (_x26, _x27) {\n    return _ref13.apply(this, arguments);\n  };\n}()); //delete a video function is available only for admin  {WORKING}\n\napp[\"delete\"](\"/videos/:id\", /*#__PURE__*/function () {\n  var _ref14 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee14(req, res) {\n    var id;\n    return regeneratorRuntime.wrap(function _callee14$(_context14) {\n      while (1) {\n        switch (_context14.prev = _context14.next) {\n          case 0:\n            _context14.prev = 0;\n            //try to delete and send a successful response\n            id = req.params.id;\n            _context14.next = 4;\n            return Video.deleteOne({\n              _id: id\n            });\n\n          case 4:\n            res.status(200).json({\n              success: true\n            });\n            _context14.next = 11;\n            break;\n\n          case 7:\n            _context14.prev = 7;\n            _context14.t0 = _context14[\"catch\"](0);\n            console.log(_context14.t0); //inform the client about the deletion failure\n\n            res.status(400).json({\n              success: false\n            });\n\n          case 11:\n          case \"end\":\n            return _context14.stop();\n        }\n      }\n    }, _callee14, null, [[0, 7]]);\n  }));\n\n  return function (_x28, _x29) {\n    return _ref14.apply(this, arguments);\n  };\n}()); // Start the server\n\napp.listen(port, function () {\n  console.log(\"Server running on http://localhost:\".concat(port));\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "server.js"
      ],
      "names": [
        "port",
        "process",
        "env",
        "PORT",
        "app",
        "ERR_CANNOT_SAVE_TO_DATABASE",
        "ERR_CANNOT_FIND_VIDEO_BY_ID",
        "mongoUrl",
        "MONGO_URL",
        "mongoose",
        "connect",
        "useNewUrlParser",
        "useUnifiedTopology",
        "Promise",
        "userSchema",
        "Schema",
        "userName",
        "type",
        "String",
        "minlength",
        "maxlength",
        "required",
        "email",
        "unique",
        "password",
        "accessToken",
        "crypto",
        "randomBytes",
        "toString",
        "isAdmin",
        "Boolean",
        "selectedVideos",
        "Types",
        "ObjectId",
        "ref",
        "videoSchema",
        "videoName",
        "description",
        "videoUrl",
        "category",
        "length",
        "Number",
        "likes",
        "min",
        "max",
        "timestamps",
        "use",
        "bodyParser",
        "json",
        "User",
        "model",
        "Video",
        "req",
        "res",
        "next",
        "connection",
        "readyState",
        "status",
        "error",
        "get",
        "send",
        "listEndpoints",
        "authenticateUser",
        "header",
        "findOne",
        "user",
        "errorMessage",
        "post",
        "body",
        "console",
        "log",
        "SALT",
        "bcrypt",
        "genSaltSync",
        "hashSync",
        "save",
        "message",
        "userId",
        "_id",
        "errors",
        "accessTokenUpdate",
        "compareSync",
        "findOneAndUpdate",
        "useFindAndModify",
        "updatedUser",
        "find",
        "sort",
        "createdAt",
        "limit",
        "exec",
        "videos",
        "params",
        "id",
        "videoById",
        "videosByLength",
        "put",
        "videoId",
        "findById",
        "selectedVideo",
        "updateOne",
        "$push",
        "$pull",
        "$in",
        "favoritesArray",
        "getCurrentFavoriteVideos",
        "$inc",
        "success",
        "video",
        "savedVideo",
        "deleteOne",
        "listen"
      ],
      "mappings": "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",
      "sourceRoot": "/Users/elizavetaminican/Desktop/projects_main/TECHNIGO/final-project-yoga-studio-backend/",
      "sourcesContent": [
        "import express from \"express\";\nimport bodyParser from \"body-parser\";\nimport cors from \"cors\";\nimport mongoose from \"mongoose\";\nimport endpoints from \"express-list-endpoints\";\nimport crypto from \"crypto\";\nimport bcrypt from \"bcrypt\";\n//import { StringDecoder } from \"string_decoder\";\n// Defines the port the app will run on.\n\nconst port = process.env.PORT || 8080;\nconst app = express();\n\n// list endpoints in the '/' route\n// const listEndpoints = require(\"express-list-endpoints\");\n\n// error messages\nconst ERR_CANNOT_SAVE_TO_DATABASE = \"Could not save video to the Database\";\nconst ERR_CANNOT_FIND_VIDEO_BY_ID = \"Could not find video by id provided\";\n\nconst mongoUrl = process.env.MONGO_URL || \"mongodb://localhost/yogaStudio\";\nmongoose.connect(mongoUrl, { useNewUrlParser: true, useUnifiedTopology: true });\nmongoose.Promise = Promise;\n\n//user schema for sign in and sugn up with relation to video schema to store user's favourite videos\nconst userSchema = new mongoose.Schema({\n  userName: {\n    type: String,\n    minlength: 4,\n    maxlength: 20,\n    required: true,\n  },\n  email: {\n    type: String,\n    unique: true,\n  },\n  password: {\n    type: String,\n    minlength: 6,\n    required: true,\n  },\n  accessToken: {\n    type: String,\n    default: () => crypto.randomBytes(128).toString(\"hex\"),\n  },\n  isAdmin: {\n    type: Boolean,\n    default: false,\n  },\n  //reference to the videos, saving them in the array\n  selectedVideos: [{ type: mongoose.Schema.Types.ObjectId, ref: \"Video\" }],\n});\n\nconst videoSchema = new mongoose.Schema(\n  {\n    videoName: {\n      type: String,\n      required: true,\n    },\n    description: {\n      type: String,\n      required: true,\n    },\n    videoUrl: {\n      type: String,\n      required: true,\n    },\n    category: {\n      type: String,\n      required: true,\n      enum: [\"Beginner\", \"Intermediate\", \"Advanced\"],\n    },\n    length: {\n      type: Number,\n      required: true,\n    },\n\n    likes: {\n      type: Number,\n      default: 0,\n      min: 0,\n      max: 1,\n    },\n  },\n  { timestamps: true }\n);\n\n// Add middlewares to enable cors and json body parsing\napp.use(cors());\napp.use(bodyParser.json());\n\nconst User = mongoose.model(\"User\", userSchema);\nconst Video = mongoose.model(\"Video\", videoSchema);\n\n//Provide error of server\n\napp.use((req, res, next) => {\n  if (mongoose.connection.readyState === 1) {\n    next();\n  } else {\n    res.status(503).json({ error: \"Service unavailable at the moment\" });\n  }\n});\n\n// Start defining routes here\napp.get(\"/\", (req, res) => {\n  res.send(listEndpoints(app));\n});\n\n// HERE ARE THE ENDPOINTS FOR SIGN IN / SIGN UP\n\n//this middleware is for user authentification\nconst authenticateUser = async (req, res, next) => {\n  try {\n    const accessToken = req.header(\"Authorization\");\n    const user = await User.findOne({ accessToken });\n    if (!user) {\n      throw \"User not found\";\n    }\n    req.user = user;\n    next();\n  } catch (err) {\n    const errorMessage = \"User not found. Please try logging in again\";\n    res.status(401).json({ error: errorMessage });\n  }\n};\n\n// Sign-up\n\napp.post(\"/users\", async (req, res) => {\n  try {\n    const { userName, email, password } = req.body;\n    console.log(\"!!!\", userName, email, password);\n    const SALT = bcrypt.genSaltSync(10);\n    const user = await new User({\n      userName,\n      email,\n      password: bcrypt.hashSync(password, SALT),\n    }).save();\n    res.status(200).json({\n      message: \"User created!\",\n      userId: user._id,\n      accessToken: user.accessToken,\n      userName: user.userName,\n      email: user.email,\n      password: user.password,\n    });\n  } catch (err) {\n    console.log(\"!!!\", err, \"!!!\");\n    res.status(400).json({ message: \"Could not create user\", errors: err });\n  }\n});\n\napp.post(\"/sessions\", async (req, res) => {\n  try {\n    const { email, password } = req.body;\n    const accessTokenUpdate = crypto.randomBytes(128).toString(\"hex\");\n    console.log(\"!!!\", email, password);\n    const user = await User.findOne({ email });\n    if (user && bcrypt.compareSync(password, user.password)) {\n      const updatedUser = await User.findOneAndUpdate(\n        { email: email },\n        { accessToken: accessTokenUpdate },\n        { new: true, useFindAndModify: false }\n      );\n      res.status(200).json({\n        userId: updatedUser._id,\n        accessToken: updatedUser.accessToken,\n        userName: updatedUser.userName,\n      });\n    } else {\n      throw \"User not found\";\n    }\n  } catch (err) {\n    res.status(404).json({ error: \"User not found\" });\n  }\n});\n\n// HERE ARE THE ENDPOINTS TO WORK WITH VIDEO COLLECTION\n\n//get the collection of all videos available to everyone\napp.get(\"/videos\", async (req, res) => {\n  const videos = await Video.find()\n    .sort({ createdAt: \"desc\" })\n    .limit(20)\n    .exec();\n  res.json(videos);\n});\n\n//Route to find one specific video by id\napp.get(\"/videos/:id\", async (req, res) => {\n  const videoById = await Video.findOne({ _id: req.params.id });\n  if (videoById) {\n    res.json(videoById);\n  } else {\n    res.status(404).json({ error: \"Video not found\" });\n  }\n});\n\n//filter videos by length, endpoint that can be developed in the future\n//at the moment frontend is responsible for filtering\n\n//filter videos - 15, 20, 30\napp.get(\"/videos/length/30\", async (req, res) => {\n  const videosByLength = await Video.find({ length: 30 });\n  if (videosByLength) {\n    res.json(videosByLength);\n  } else {\n    res.status(404).json({ error: \"No such video found\" });\n  }\n});\napp.get(\"/videos/length/15\", async (req, res) => {\n  const videosByLength = await Video.find({ length: 15 });\n  if (videosByLength) {\n    res.json(videosByLength);\n  } else {\n    res.status(404).json({ error: \"No such video found\" });\n  }\n});\napp.get(\"/videos/length/20\", async (req, res) => {\n  const videosByLength = await Video.find({ length: 20 });\n  if (videosByLength) {\n    res.json(videosByLength);\n  } else {\n    res.status(404).json({ error: \"No such video found\" });\n  }\n});\n\n// PUT: endpoint to add favoritevideo for a logged-in user:\n// UPDATES the user and adds the favorite video to the favorite videos-array for that user.\n\n//<----------SHOW FAVORITE VIDEOS, ADD TO FAVORITE AND DELETE FROM FAVORITE---------->\n//--ADD--\napp.put(\"/users/:userId/favorites/:videoId\", authenticateUser);\napp.put(\"/users/:userId/favorites/:videoId\", async (req, res) => {\n  const { userId, videoId } = req.params;\n  try {\n    const selectedVideo = await Video.findById(videoId); // Find the video the user wants to add.\n    console.log(\"selectedVideo\", selectedVideo);\n    await User.updateOne(\n      { _id: userId },\n      { $push: { selectedVideos: selectedVideo } } //push the selected video into the favorite videos array\n    );\n    res.status(200).json(selectedVideo);\n  } catch (err) {\n    res.status(404).json({\n      message: \"Could not add video.\",\n      errors: { message: err.message, error: err },\n    });\n  }\n});\n\n//--DELETE--\napp.delete(\"/users/:userId/favorites/:videoId\", authenticateUser);\napp.delete(\"/users/:userId/favorites/:videoId\", async (req, res) => {\n  const { userId, videoId } = req.params;\n  try {\n    const selectedVideo = await Video.findById(videoId); // Find the video the user wants to delete.\n    console.log(\"selectedVideo\", selectedVideo);\n    await User.updateOne(\n      { _id: userId },\n      { $pull: { selectedVideos: { $in: [selectedVideo] } } } //delete the selected video from the favorite videos array\n    );\n    res.status(200).json(selectedVideo);\n  } catch (err) {\n    console.log(err);\n    res.status(404).json({\n      message: \"Could not remove video.\",\n      errors: { message: err.message, error: err },\n    });\n  }\n});\n//--SHOW FAVORITE VIDEOS--\n\napp.get(\"/users/:userId/favorites\", authenticateUser);\napp.get(\"/users/:userId/favorites\", async (req, res) => {\n  try {\n    const userId = req.params.userId;\n    if (userId != req.user._id) {\n      throw \"Access denied\";\n    }\n    const favoritesArray = await req.user.selectedVideos; //array of added videos (video-id:s)\n    const getCurrentFavoriteVideos = await Video.find({\n      _id: favoritesArray,\n    }); // gives the  video-object in user favorites\n    res.status(200).json(getCurrentFavoriteVideos);\n  } catch (err) {\n    res.status(403).json({\n      message: \"Could not get favorite videos. User must be logged in.\",\n      errors: { message: err.message, error: err },\n    });\n  }\n});\n\n//likes are not used in the project at the moment, but can be used in the future\napp.post(\"/videos/:id/like\", async (req, res) => {\n  try {\n    const { id } = req.params;\n    await Video.updateOne({ _id: id }, { $inc: { likes: 1 } });\n    res.status(200).json({ success: true });\n  } catch (err) {\n    res\n      .status(400)\n      .json({ message: ERR_CANNOT_FIND_VIDEO_BY_ID, errors: err.errors });\n  }\n});\n\n//post a video, function available only for admins\napp.post(\"/videos\", async (req, res) => {\n  //Try catch\n  try {\n    //Success case\n    //retrive the information sent by the client to our API endpoint\n    const { videoName, videoUrl, description, length, category } = req.body;\n    const video = new Video({\n      videoName,\n      videoUrl,\n      description,\n      length,\n      category,\n    });\n    const savedVideo = await video.save();\n    res.status(200).json(savedVideo);\n  } catch (err) {\n    //bad request sending the status to the server and the message\n    res\n      .status(400)\n      .json({ message: ERR_CANNOT_SAVE_TO_DATABASE, errors: err.errors });\n  }\n});\n//delete a video function is available only for admin  {WORKING}\napp.delete(\"/videos/:id\", async (req, res) => {\n  try {\n    //try to delete and send a successful response\n    const { id } = req.params;\n    await Video.deleteOne({ _id: id });\n    res.status(200).json({ success: true });\n  } catch (error) {\n    console.log(error);\n    //inform the client about the deletion failure\n    res.status(400).json({ success: false });\n  }\n});\n\n// Start the server\napp.listen(port, () => {\n  console.log(`Server running on http://localhost:${port}`);\n});\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1613572634578
  }
}